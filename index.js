// Generated by psc version 0.6.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
        this[".&."] = $dot$amp$dot;
        this[".^."] = $dot$up$dot;
        this[".|."] = $dot$bar$dot;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $less$hash$greater = function (__dict_Functor_1) {
        return function (fa) {
            return function (f) {
                return $less$dollar$greater(__dict_Functor_1)(f)(fa);
            };
        };
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $dot$bar$dot = function (dict) {
        return dict[".|."];
    };
    var $dot$up$dot = function (dict) {
        return dict[".^."];
    };
    var $dot$amp$dot = function (dict) {
        return dict[".&."];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_2) {
        return $less$greater(__dict_Semigroup_2);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_106) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_114) {
        if (_114 instanceof LT) {
            return "LT";
        };
        if (_114 instanceof GT) {
            return "GT";
        };
        if (_114 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_107) {
        if (_107) {
            return "true";
        };
        if (!_107) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_3) {
        return new Show(showArrayImpl(show(__dict_Show_3)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_121) {
        return function (_122) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_4) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_5) {
        return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
    };
    var otherwise = true;
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_6) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_6)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_7) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_110) {
        return function (_111) {
            return false;
        };
    }, function (_108) {
        return function (_109) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_115) {
        return function (_116) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_117) {
        return function (_118) {
            if (!_117 && !_118) {
                return EQ.value;
            };
            if (!_117 && _118) {
                return LT.value;
            };
            if (_117 && _118) {
                return EQ.value;
            };
            if (_117 && !_118) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_102) {
        return function (_103) {
            return _102;
        };
    };
    var $$void = function (__dict_Functor_9) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _548 = compare(__dict_Ord_11)(a1)(a2);
                if (_548 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _549 = compare(__dict_Ord_12)(a1)(a2);
                if (_549 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _550 = compare(__dict_Ord_13)(a1)(a2);
                if (_550 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_14) {
        return function (a1) {
            return function (a2) {
                var _551 = compare(__dict_Ord_14)(a1)(a2);
                if (_551 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_8) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_10) {
        return new Ord(function () {
            return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
        }, function (_119) {
            return function (_120) {
                if (_119.length === 0 && _120.length === 0) {
                    return EQ.value;
                };
                if (_119.length === 0) {
                    return LT.value;
                };
                if (_120.length === 0) {
                    return GT.value;
                };
                if (_119.length >= 1) {
                    var _558 = _119.slice(1);
                    if (_120.length >= 1) {
                        var _556 = _120.slice(1);
                        var _554 = compare(__dict_Ord_10)(_119[0])(_120[0]);
                        if (_554 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_10))(_558)(_556);
                        };
                        return _554;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_112) {
        return function (_113) {
            if (_112 instanceof LT && _113 instanceof LT) {
                return true;
            };
            if (_112 instanceof GT && _113 instanceof GT) {
                return true;
            };
            if (_112 instanceof EQ && _113 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
    var asTypeOf = function (_104) {
        return function (_105) {
            return _104;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_15) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_15)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "#": $hash, 
        "$": $dollar, 
        "%": $percent, 
        "&&": $amp$amp, 
        "*": $times, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        ".&.": $dot$amp$dot, 
        ".^.": $dot$up$dot, 
        ".|.": $dot$bar$dot, 
        "/": $div, 
        "/=": $div$eq, 
        ":": $colon, 
        "<": $less, 
        "<#>": $less$hash$greater, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<=": $less$eq, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">=": $greater$eq, 
        ">>=": $greater$greater$eq, 
        ">>>": $greater$greater$greater, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Bits: Bits, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        ap: ap, 
        applicativeArr: applicativeArr, 
        applyArr: applyArr, 
        asTypeOf: asTypeOf, 
        bindArr: bindArr, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        complement: complement, 
        cons: cons, 
        "const": $$const, 
        eqArray: eqArray, 
        eqBoolean: eqBoolean, 
        eqNumber: eqNumber, 
        eqOrdering: eqOrdering, 
        eqString: eqString, 
        eqUnit: eqUnit, 
        flip: flip, 
        functorArr: functorArr, 
        id: id, 
        liftA1: liftA1, 
        liftM1: liftM1, 
        monadArr: monadArr, 
        negate: negate, 
        not: not, 
        numNumber: numNumber, 
        ordArray: ordArray, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordUnit: ordUnit, 
        otherwise: otherwise, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupArr: semigroupArr, 
        semigroupString: semigroupString, 
        semigroupUnit: semigroupUnit, 
        semigroupoidArr: semigroupoidArr, 
        shl: shl, 
        show: show, 
        showArray: showArray, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showOrdering: showOrdering, 
        showString: showString, 
        showUnit: showUnit, 
        shr: shr, 
        unit: unit, 
        "void": $$void, 
        zshr: zshr, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Text_Hatter_Runtime = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Coerce(coerce) {
        this.coerce = coerce;
    };
    var idCoerce = new Coerce(Prelude.id(Prelude.categoryArr));
    var coerce = function (dict) {
        return dict.coerce;
    };
    return {
        Coerce: Coerce, 
        coerce: coerce, 
        idCoerce: idCoerce
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        abs: abs, 
        acos: acos, 
        asin: asin, 
        atan: atan, 
        atan2: atan2, 
        ceil: ceil, 
        cos: cos, 
        e: e, 
        exp: exp, 
        floor: floor, 
        ln10: ln10, 
        ln2: ln2, 
        log: log, 
        log10e: log10e, 
        log2e: log2e, 
        max: max, 
        min: min, 
        pi: pi, 
        pow: pow, 
        round: round, 
        sin: sin, 
        sqrt: sqrt, 
        sqrt1_2: sqrt1_2, 
        sqrt2: sqrt2, 
        tan: tan
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        mkFn0: mkFn0, 
        mkFn1: mkFn1, 
        mkFn10: mkFn10, 
        mkFn2: mkFn2, 
        mkFn3: mkFn3, 
        mkFn4: mkFn4, 
        mkFn5: mkFn5, 
        mkFn6: mkFn6, 
        mkFn7: mkFn7, 
        mkFn8: mkFn8, 
        mkFn9: mkFn9, 
        on: on, 
        runFn0: runFn0, 
        runFn1: runFn1, 
        runFn10: runFn10, 
        runFn2: runFn2, 
        runFn3: runFn3, 
        runFn4: runFn4, 
        runFn5: runFn5, 
        runFn6: runFn6, 
        runFn7: runFn7, 
        runFn8: runFn8, 
        runFn9: runFn9
    };
})();
var PS = PS || {};
PS.VirtualDOM_VTree = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var showVTreeImpl = JSON.stringify;;
    
  var vnode$prime = (function() {
    var VNode = require('vtree/vnode');
   
    return function (name, props, children) {
      var key = undefined;
      var ns = undefined;

      if(props.namespace) {
        ns = props.namespace;
        props.namespace = undefined;
      }

      if(props.key) {
        key = props.key;
        props.key = undefined;
      }

      return new VNode(name, props, children, key, ns);
    };
  }());
  ;
    
  var vtext = (function() {
    var VText = require('vtree/vtext');
    return function (text) {
      return new VText(text);
    };
  }());
  ;
    var vnode = function (name) {
        return function (props) {
            return function (children) {
                return vnode$prime(name, props, children);
            };
        };
    };
    var showVTree = new Prelude.Show(showVTreeImpl);
    return {
        showVTree: showVTree, 
        vnode: vnode, 
        vtext: vtext
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_123) {
        return function (_124) {
            return function (_125) {
                return _123(_124)(_125);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_126) {
        return function (_127) {
            return _126(_127);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        eqRef: eqRef, 
        functorRef: functorRef, 
        liftRef: liftRef
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Char = {
        create: function (value) {
            return value;
        }
    };
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var showChar = new Prelude.Show(function (_133) {
        return "Char " + Prelude.show(Prelude.showString)(_133);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_129) {
        return function (_130) {
            return _129 === _130;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_131) {
        return function (_132) {
            return Prelude.compare(Prelude.ordString)(_131)(_132);
        };
    });
    var charString = function (_128) {
        return _128;
    };
    return {
        charString: charString, 
        eqChar: eqChar, 
        fromCharCode: fromCharCode, 
        ordChar: ordChar, 
        showChar: showChar, 
        toCharCode: toCharCode
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt
    };
})();
var PS = PS || {};
PS.DOM = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function MonadTrans(lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        errorString: errorString, 
        noMsg: noMsg, 
        strMsg: strMsg
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        forE: forE, 
        foreachE: foreachE, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE, 
        runPure: runPure, 
        untilE: untilE, 
        whileE: whileE
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function message(e) {
    return e.message;
  }
  ;
    
  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;
    
  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        catchException: catchException, 
        error: error, 
        message: message, 
        showError: showError, 
        showErrorImpl: showErrorImpl, 
        throwException: throwException
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function random() {  return Math.random();};
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function runST(f) {  return f;};
    return {
        modifySTRef: modifySTRef, 
        newSTRef: newSTRef, 
        readSTRef: readSTRef, 
        runST: runST, 
        writeSTRef: writeSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_16) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_16)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.VirtualDOM = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var showPatchObjectImpl = JSON.stringify;;
    var createElement = require('virtual-dom/create-element');;
    var diff$prime = require('virtual-dom/diff');;
    var patch$prime = require('virtual-dom/patch');;
    
  function mkEff(action) {
    return action;
  }
  ;
    var showPatchObject = new Prelude.Show(showPatchObjectImpl);
    var patch = function (p) {
        return function (n) {
            return mkEff(function (_) {
                return patch$prime(n, p);
            });
        };
    };
    var diff = Data_Function.runFn2(diff$prime);
    return {
        createElement: createElement, 
        diff: diff, 
        patch: patch, 
        showPatchObject: showPatchObject
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = {
        create: function (value) {
            return value;
        }
    };
    var runContT = function (_134) {
        return function (_135) {
            return _134(_135);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_17) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_17["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_19) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_21) {
        return function (__dict_Monad_22) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_22);
            });
        };
    };
    var bindContT = function (__dict_Monad_20) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_20["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_20);
        });
    };
    var applicativeContT = function (__dict_Functor_23) {
        return function (__dict_Monad_24) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_23)(__dict_Monad_24);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_18) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_18["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_18);
        }, function () {
            return bindContT(__dict_Monad_18);
        });
    };
    return {
        ContT: ContT, 
        applicativeContT: applicativeContT, 
        applyContT: applyContT, 
        bindContT: bindContT, 
        callCC: callCC, 
        functorContT: functorContT, 
        mapContT: mapContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT, 
        runContT: runContT, 
        withContT: withContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_25) {
        return function (_141) {
            return function (_142) {
                if (_141) {
                    return _142;
                };
                if (!_141) {
                    return Prelude["return"](__dict_Monad_25)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_26) {
        return function (_143) {
            return function (_144) {
                if (!_143) {
                    return _144;
                };
                if (_143) {
                    return Prelude["return"](__dict_Monad_26)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_27) {
        return function (_136) {
            return function (_137) {
                if (_136 === 0) {
                    return Prelude["return"](__dict_Monad_27)([  ]);
                };
                return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(_137)(function (_4) {
                    return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_27)(_136 - 1)(_137))(function (_3) {
                        return Prelude["return"](__dict_Monad_27)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_28) {
        return function (_138) {
            return function (_139) {
                return function (_140) {
                    if (_140.length === 0) {
                        return Prelude["return"](__dict_Monad_28)(_139);
                    };
                    if (_140.length >= 1) {
                        var _590 = _140.slice(1);
                        return Prelude[">>="](__dict_Monad_28["__superclass_Prelude.Bind_1"]())(_138(_139)(_140[0]))(function (a$prime) {
                            return foldM(__dict_Monad_28)(_138)(a$prime)(_590);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        foldM: foldM, 
        replicateM: replicateM, 
        unless: unless, 
        when: when
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_29) {
        return function (f) {
            return defer2(__dict_Lazy2_29)(function (_) {
                return f(fix2(__dict_Lazy2_29)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_30) {
        return function (f) {
            return defer1(__dict_Lazy1_30)(function (_) {
                return f(fix1(__dict_Lazy1_30)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_31) {
        return function (f) {
            return defer(__dict_Lazy_31)(function (_) {
                return f(fix(__dict_Lazy_31)(f));
            });
        };
    };
    return {
        Lazy: Lazy, 
        Lazy1: Lazy1, 
        Lazy2: Lazy2, 
        defer: defer, 
        defer1: defer1, 
        defer2: defer2, 
        fix: fix, 
        fix1: fix1, 
        fix2: fix2
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_32) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_32)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_33) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_33)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_34) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_34)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_35) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_35)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_36) {
        return function (w) {
            return $less$less$eq(__dict_Extend_36)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        "<<=": $less$less$eq, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        Extend: Extend, 
        duplicate: duplicate, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Comonad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function ComonadTrans(lower) {
        this.lower = lower;
    };
    var lower = function (dict) {
        return dict.lower;
    };
    return {
        ComonadTrans: ComonadTrans, 
        lower: lower
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_37) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_37)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_38) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_38)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_39) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_39)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_40) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_40)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_41) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_41)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less, 
        ">=>": $greater$eq$greater, 
        ifM: ifM, 
        join: join
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_42) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_42)(Prelude["<$>"](__dict_Apply_42["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_43) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_43)(Prelude["<$>"](__dict_Apply_43["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_44) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<$>"](__dict_Apply_44["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_45) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_45)(Prelude["<*>"](__dict_Apply_45)(Prelude["<*>"](__dict_Apply_45)(Prelude["<$>"](__dict_Apply_45["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_46) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_46)(Prelude["<*>"](__dict_Apply_46)(Prelude["<$>"](__dict_Apply_46["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_47) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_47)(Prelude["<$>"](__dict_Apply_47["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_48) {
        return function (a) {
            return $times$greater(__dict_Apply_48)(a)(forever(__dict_Apply_48)(a));
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times, 
        forever: forever, 
        lift2: lift2, 
        lift3: lift3, 
        lift4: lift4, 
        lift5: lift5
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        "<|>": $less$bar$greater, 
        Alt: Alt
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_49) {
        return function (__dict_Lazy1_50) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_49["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_49["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_50)(function (_) {
                    return many(__dict_Alternative_49)(__dict_Lazy1_50)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_51) {
        return function (__dict_Lazy1_52) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_51["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_51)(__dict_Lazy1_52)(v))(Prelude.pure(__dict_Alternative_51["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_53) {
        return function (_145) {
            if (_145) {
                return Prelude["return"](__dict_MonadPlus_53["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_145) {
                return Control_Plus.empty((__dict_MonadPlus_53["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = {
        create: function (value) {
            return value;
        }
    };
    var runReaderT = function (_146) {
        return _146;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_56) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT.create(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT.create(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT.create(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_58) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_58)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_60) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_60["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_60["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_59) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_59["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_59["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_61) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_61);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_61)));
    };
    var monadReaderT = function (__dict_Monad_54) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_54["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_54);
        });
    };
    var altReaderT = function (__dict_Alt_63) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_63)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_63["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_57) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_57["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_57)));
    };
    var alternativeReaderT = function (__dict_Alternative_62) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_62["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_62["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_55) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_55["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_55["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        altReaderT: altReaderT, 
        alternativeReaderT: alternativeReaderT, 
        applicativeReaderT: applicativeReaderT, 
        applyReaderT: applyReaderT, 
        bindReaderT: bindReaderT, 
        functorReaderT: functorReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadReaderT: monadReaderT, 
        monadTransReaderT: monadTransReaderT, 
        plusReaderT: plusReaderT, 
        runReaderT: runReaderT, 
        withReaderT: withReaderT
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_64) {
        return function (__dict_Show_65) {
            return new Prelude.Show(function (_156) {
                if (_156 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_64)(_156.value0) + ")");
                };
                if (_156 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_65)(_156.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_150) {
        return function (_151) {
            if (_151 instanceof Left) {
                return new Left(_151.value0);
            };
            if (_151 instanceof Right) {
                return new Right(_150(_151.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_68) {
        return function (__dict_Eq_69) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_68)(__dict_Eq_69))(a)(b);
                };
            }, function (_157) {
                return function (_158) {
                    if (_157 instanceof Left && _158 instanceof Left) {
                        return Prelude["=="](__dict_Eq_68)(_157.value0)(_158.value0);
                    };
                    if (_157 instanceof Right && _158 instanceof Right) {
                        return Prelude["=="](__dict_Eq_69)(_157.value0)(_158.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_66) {
        return function (__dict_Ord_67) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_66["__superclass_Prelude.Eq_0"]())(__dict_Ord_67["__superclass_Prelude.Eq_0"]());
            }, function (_159) {
                return function (_160) {
                    if (_159 instanceof Left && _160 instanceof Left) {
                        return Prelude.compare(__dict_Ord_66)(_159.value0)(_160.value0);
                    };
                    if (_159 instanceof Right && _160 instanceof Right) {
                        return Prelude.compare(__dict_Ord_67)(_159.value0)(_160.value0);
                    };
                    if (_159 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_160 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_147) {
        return function (_148) {
            return function (_149) {
                if (_149 instanceof Left) {
                    return _147(_149.value0);
                };
                if (_149 instanceof Right) {
                    return _148(_149.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_152) {
        return function (_153) {
            if (_152 instanceof Left) {
                return new Left(_152.value0);
            };
            if (_152 instanceof Right) {
                return Prelude["<$>"](functorEither)(_152.value0)(_153);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_154) {
        return function (_155) {
            if (_154 instanceof Left) {
                return _155;
            };
            return _154;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        altEither: altEither, 
        applicativeEither: applicativeEither, 
        applyEither: applyEither, 
        bindEither: bindEither, 
        either: either, 
        eqEither: eqEither, 
        functorEither: functorEither, 
        isLeft: isLeft, 
        isRight: isRight, 
        monadEither: monadEither, 
        ordEither: ordEither, 
        showEither: showEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Data_Either = PS.Data_Either;
    var Prelude = PS.Prelude;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice2: choice2, 
        choice3: choice3, 
        choice4: choice4, 
        choice5: choice5, 
        choice6: choice6, 
        choice7: choice7, 
        choice8: choice8, 
        choice9: choice9
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_70) {
        return new Prelude.Show(function (_176) {
            if (_176 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_70)(_176.value0) + ")");
            };
            if (_176 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_71) {
        return new Prelude.Semigroup(function (_174) {
            return function (_175) {
                if (_174 instanceof Nothing) {
                    return _175;
                };
                if (_175 instanceof Nothing) {
                    return _174;
                };
                if (_174 instanceof Just && _175 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_71)(_174.value0)(_175.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_161) {
        return function (_162) {
            return function (_163) {
                if (_163 instanceof Nothing) {
                    return _161;
                };
                if (_163 instanceof Just) {
                    return _162(_163.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_164) {
        return function (_165) {
            if (_165 instanceof Just) {
                return new Just(_164(_165.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_172) {
        return function (_173) {
            if (_173 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_172(_173));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_73) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_73))(a)(b);
            };
        }, function (_177) {
            return function (_178) {
                if (_177 instanceof Nothing && _178 instanceof Nothing) {
                    return true;
                };
                if (_177 instanceof Just && _178 instanceof Just) {
                    return Prelude["=="](__dict_Eq_73)(_177.value0)(_178.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_72) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_72["__superclass_Prelude.Eq_0"]());
        }, function (_179) {
            return function (_180) {
                if (_179 instanceof Just && _180 instanceof Just) {
                    return Prelude.compare(__dict_Ord_72)(_179.value0)(_180.value0);
                };
                if (_179 instanceof Nothing && _180 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_179 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_180 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_166) {
        return function (_167) {
            if (_166 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_166.value0)(_167);
            };
            if (_166 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_170) {
        return function (_171) {
            if (_170 instanceof Just) {
                return _171(_170.value0);
            };
            if (_170 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_168) {
        return function (_169) {
            if (_168 instanceof Nothing) {
                return _169;
            };
            return _168;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Just: Just, 
        Nothing: Nothing, 
        altMaybe: altMaybe, 
        alternativeMaybe: alternativeMaybe, 
        applicativeMaybe: applicativeMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe, 
        eqMaybe: eqMaybe, 
        extendMaybe: extendMaybe, 
        fromMaybe: fromMaybe, 
        functorMaybe: functorMaybe, 
        isJust: isJust, 
        isNothing: isNothing, 
        maybe: maybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        ordMaybe: ordMaybe, 
        plusMaybe: plusMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_183) {
        if (_183.length >= 1) {
            var _660 = _183.slice(1);
            return new Data_Maybe.Just(_660);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__199) {
            return function (__copy__200) {
                return function (__copy__201) {
                    var _199 = __copy__199;
                    var _200 = __copy__200;
                    var _201 = __copy__201;
                    tco: while (true) {
                        if (_201.length >= 1) {
                            var _665 = _201.slice(1);
                            if (_200(_201[0])) {
                                var __tco__199 = Prelude[":"](_201[0])(_199);
                                var __tco__200 = _200;
                                _199 = __tco__199;
                                _200 = __tco__200;
                                _201 = _665;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_199), 
                            rest: _201
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _666 = comp(x)(y);
                    if (_666 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_666 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_666 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_74) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_74))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_185) {
        if (_185.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_192) {
        return function (_193) {
            if (_193.length === 0) {
                return [  ];
            };
            if (_193.length >= 1) {
                var _671 = _193.slice(1);
                return Prelude[":"](_193[0])(nubBy(_192)(filter(function (y) {
                    return !_192(_193[0])(y);
                })(_671)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_75) {
        return nubBy(Prelude["=="](__dict_Eq_75));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__182) {
        var _182 = __copy__182;
        tco: while (true) {
            if (_182.length >= 1) {
                var _674 = _182.slice(1);
                if (_674.length === 0) {
                    return new Data_Maybe.Just(_182[0]);
                };
            };
            if (_182.length >= 1) {
                var _676 = _182.slice(1);
                _182 = _676;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_189) {
        return function (_190) {
            return function (_191) {
                if (_190.length === 0) {
                    return [  ];
                };
                if (_191.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_189(x))(_191) >= 0;
                };
                return filter(el)(_190);
            };
        };
    };
    var intersect = function (__dict_Eq_76) {
        return intersectBy(Prelude["=="](__dict_Eq_76));
    };
    var init = function (_184) {
        if (_184.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_184) - 1)(_184));
    };
    var head = function (_181) {
        if (_181.length >= 1) {
            var _683 = _181.slice(1);
            return new Data_Maybe.Just(_181[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__196) {
            return function (__copy__197) {
                return function (__copy__198) {
                    var _196 = __copy__196;
                    var _197 = __copy__197;
                    var _198 = __copy__198;
                    tco: while (true) {
                        if (_198.length === 0) {
                            return reverse(_196);
                        };
                        if (_198.length >= 1) {
                            var _688 = _198.slice(1);
                            var sp = span(_197(_198[0]))(_688);
                            var __tco__196 = Prelude[":"](Prelude[":"](_198[0])(sp.init))(_196);
                            var __tco__197 = _197;
                            _196 = __tco__196;
                            _197 = __tco__197;
                            _198 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_77) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_77))(xs);
        };
    };
    var group$prime = function (__dict_Ord_78) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_78["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_78));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_79) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_79)(x));
        };
    };
    var elemIndex = function (__dict_Eq_80) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_80)(x));
        };
    };
    var deleteBy = function (_186) {
        return function (_187) {
            return function (_188) {
                if (_188.length === 0) {
                    return [  ];
                };
                var _692 = findIndex(_186(_187))(_188);
                if (_692 < 0) {
                    return _188;
                };
                return deleteAt(_692)(1)(_188);
            };
        };
    };
    var $$delete = function (__dict_Eq_81) {
        return deleteBy(Prelude["=="](__dict_Eq_81));
    };
    var $bslash$bslash = function (__dict_Eq_82) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__194) {
                    return function (__copy__195) {
                        var _194 = __copy__194;
                        var _195 = __copy__195;
                        tco: while (true) {
                            if (_195.length === 0) {
                                return _194;
                            };
                            if (_194.length === 0) {
                                return [  ];
                            };
                            if (_195.length >= 1) {
                                var _696 = _195.slice(1);
                                var __tco__194 = $$delete(__dict_Eq_82)(_195[0])(_194);
                                _194 = __tco__194;
                                _195 = _696;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        "!!": $bang$bang, 
        "..": $dot$dot, 
        "\\\\": $bslash$bslash, 
        altArray: altArray, 
        alternativeArray: alternativeArray, 
        append: append, 
        applicativeArray: applicativeArray, 
        applyArray: applyArray, 
        bindArray: bindArray, 
        catMaybes: catMaybes, 
        concat: concat, 
        concatMap: concatMap, 
        "delete": $$delete, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        drop: drop, 
        elemIndex: elemIndex, 
        elemLastIndex: elemLastIndex, 
        filter: filter, 
        findIndex: findIndex, 
        findLastIndex: findLastIndex, 
        functorArray: functorArray, 
        group: group, 
        "group'": group$prime, 
        groupBy: groupBy, 
        head: head, 
        init: init, 
        insertAt: insertAt, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        last: last, 
        length: length, 
        map: map, 
        mapMaybe: mapMaybe, 
        monadArray: monadArray, 
        monadPlusArray: monadPlusArray, 
        nub: nub, 
        nubBy: nubBy, 
        "null": $$null, 
        plusArray: plusArray, 
        range: range, 
        reverse: reverse, 
        semigroupArray: semigroupArray, 
        singleton: singleton, 
        snoc: snoc, 
        sort: sort, 
        sortBy: sortBy, 
        span: span, 
        tail: tail, 
        take: take, 
        updateAt: updateAt, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    
  function parseJSONImpl(left, right, str) {
    try {
      return right(JSON.parse(str));
    } catch (e) {
      return left(e.toString());
    }
  }
  ;
    
  function toForeign(value) {
    return value;
  }
  ;
    
  function unsafeFromForeign(value) {
    return value;
  }
  ;
    
  function typeOf(value) {
    return typeof value;
  }
  ;
    
  function tagOf(value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  }
  ;
    
  function isNull(value) {
    return value === null;
  }
  ;
    
  function isUndefined(value) {
    return value === undefined;
  }
  ;
    
  var isArray = Array.isArray || function(value) {
    return Object.prototype.toString.call(value) === '[object Array]';
  };
  ;
    var unsafeReadPrim = function (_202) {
        return function (_203) {
            if (tagOf(_203) === _202) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_203));
            };
            return new Data_Either.Left(new TypeMismatch(_202, tagOf(_203)));
        };
    };
    var showForeignError = new Prelude.Show(function (_205) {
        if (_205 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_205.value0 + (", found " + _205.value1));
        };
        if (_205 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_205.value0) + (": " + Prelude.show(showForeignError)(_205.value1)));
        };
        if (_205 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_205.value0) + (": " + Prelude.show(showForeignError)(_205.value1)));
        };
        if (_205 instanceof JSONError) {
            return "JSON error: " + _205.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_204) {
        if (isArray(_204)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_204));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_204)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    var eqForeignError = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqForeignError)(a)(b);
        };
    }, function (_206) {
        return function (_207) {
            if (_206 instanceof TypeMismatch && _207 instanceof TypeMismatch) {
                return _206.value0 === _207.value0 && _206.value1 === _207.value1;
            };
            if (_206 instanceof ErrorAtIndex && _207 instanceof ErrorAtIndex) {
                return _206.value0 === _207.value0 && Prelude["=="](eqForeignError)(_206.value1)(_207.value1);
            };
            if (_206 instanceof ErrorAtProperty && _207 instanceof ErrorAtProperty) {
                return _206.value0 === _207.value0 && Prelude["=="](eqForeignError)(_206.value1)(_207.value1);
            };
            if (_206 instanceof JSONError && _207 instanceof JSONError) {
                return _206.value0 === _207.value0;
            };
            return false;
        };
    });
    return {
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        TypeMismatch: TypeMismatch, 
        eqForeignError: eqForeignError, 
        isArray: isArray, 
        isNull: isNull, 
        isUndefined: isUndefined, 
        parseJSON: parseJSON, 
        readArray: readArray, 
        readBoolean: readBoolean, 
        readNumber: readNumber, 
        readString: readString, 
        showForeignError: showForeignError, 
        tagOf: tagOf, 
        toForeign: toForeign, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    function Index($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    
  function unsafeReadPropImpl(f, s, key, value) {
    return value == null ? f : s(value[key]);
  }
  ;
    
  function unsafeHasOwnProperty(prop, value) {
    return Object.prototype.hasOwnProperty.call(value, prop);
  }
  ;
    
  function unsafeHasProperty(prop, value) {
    return prop in value;
  }
  ;
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_210) {
        return function (_211) {
            if (Data_Foreign.isNull(_211)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_211)) {
                return false;
            };
            if (Data_Foreign.typeOf(_211) === "object" || Data_Foreign.typeOf(_211) === "function") {
                return unsafeHasProperty(_210, _211);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_208) {
        return function (_209) {
            if (Data_Foreign.isNull(_209)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_209)) {
                return false;
            };
            if (Data_Foreign.typeOf(_209) === "object" || Data_Foreign.typeOf(_209) === "function") {
                return unsafeHasOwnProperty(_208, _209);
            };
            return false;
        };
    };
    var indexNumber = new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        "!": $bang, 
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        index: index, 
        indexNumber: indexNumber, 
        indexString: indexString, 
        prop: prop
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    
  var unsafeKeys = Object.keys || function(value) {
    var keys = [];
    for (var prop in value) {
      if (Object.prototype.hasOwnProperty.call(value, prop)) {
        keys.push(prop);
      }
    }
    return keys;
  };
  ;
    var keys = function (_212) {
        if (Data_Foreign.isNull(_212)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_212)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_212) === "object") {
            return Data_Either.Right.create(unsafeKeys(_212));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_212)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Data_Array_ST = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function runSTArray(f) {
    return f;
  };
    
  function emptySTArray() {
    return [];
  };
    
  function peekSTArrayImpl(arr, i, s, f) {
    return function() {
      var index = ~~i;
      if (0 <= index && index < arr.length) {
        return s(arr[index]);
      } else {
        return f;
      }
    };
  };
    
  function pokeSTArrayImpl(arr, i, a) {
    return function() {
      var index = ~~i;
      if (0 <= index && index <= arr.length) {
        arr[index] = a;
        return true;
      }
      return false;
    };
  };
    
  function pushSTArrayImpl(arr, a) {
    return function() {
      arr.push(a);
      return {};
    };
  };
    var pushSTArray = function (arr) {
        return function (a) {
            return pushSTArrayImpl(arr, a);
        };
    };
    var pokeSTArray = function (arr) {
        return function (i) {
            return function (a) {
                return pokeSTArrayImpl(arr, i, a);
            };
        };
    };
    var peekSTArray = function (arr) {
        return function (i) {
            return peekSTArrayImpl(arr, i, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        emptySTArray: emptySTArray, 
        peekSTArray: peekSTArray, 
        pokeSTArray: pokeSTArray, 
        pushSTArray: pushSTArray, 
        runSTArray: runSTArray
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Null = {
        create: function (value) {
            return value;
        }
    };
    var runNull = function (_213) {
        return _213;
    };
    var readNull = function (_214) {
        return function (_215) {
            if (Data_Foreign.isNull(_215)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Null.create)(Data_Maybe.Just.create))(_214(_215));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var NullOrUndefined = {
        create: function (value) {
            return value;
        }
    };
    var runNullOrUndefined = function (_216) {
        return _216;
    };
    var readNullOrUndefined = function (_217) {
        return function (_218) {
            if (Data_Foreign.isNull(_218) || Data_Foreign.isUndefined(_218)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(NullOrUndefined.create)(Data_Maybe.Just.create))(_217(_218));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Undefined = {
        create: function (value) {
            return value;
        }
    };
    var runUndefined = function (_219) {
        return _219;
    };
    var readUndefined = function (_220) {
        return function (_221) {
            if (Data_Foreign.isUndefined(_221)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Undefined.create)(Data_Maybe.Just.create))(_220(_221));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_222) {
        if (_222 instanceof Data_Maybe.Just) {
            return _222.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var Prelude = PS.Prelude;
    var tail = function (_224) {
        if (_224.length >= 1) {
            var _742 = _224.slice(1);
            return _742;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_223) {
        if (_223.length >= 1) {
            var _745 = _223.slice(1);
            return _223[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        head: head, 
        init: init, 
        last: last, 
        tail: tail
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_83) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_83);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_84) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_84["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_84)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArr: monoidArr, 
        monoidArray: monoidArray, 
        monoidMaybe: monoidMaybe, 
        monoidString: monoidString, 
        monoidUnit: monoidUnit
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = new Prelude.Show(function (_230) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_230) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_231) {
        return function (_232) {
            return _231 && _232;
        };
    });
    var runAll = function (_225) {
        return _225;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_228) {
        return function (_229) {
            return _228 !== _229;
        };
    }, function (_226) {
        return function (_227) {
            return _226 === _227;
        };
    });
    return {
        All: All, 
        eqAll: eqAll, 
        monoidAll: monoidAll, 
        runAll: runAll, 
        semigroupAll: semigroupAll, 
        showAll: showAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = new Prelude.Show(function (_238) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_238) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_239) {
        return function (_240) {
            return _239 || _240;
        };
    });
    var runAny = function (_233) {
        return _233;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_236) {
        return function (_237) {
            return _236 !== _237;
        };
    }, function (_234) {
        return function (_235) {
            return _234 === _235;
        };
    });
    return {
        Any: Any, 
        eqAny: eqAny, 
        monoidAny: monoidAny, 
        runAny: runAny, 
        semigroupAny: semigroupAny, 
        showAny: showAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_85) {
        return new Prelude.Show(function (_248) {
            return "Dual (" + (Prelude.show(__dict_Show_85)(_248) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_86) {
        return new Prelude.Semigroup(function (_249) {
            return function (_250) {
                return Prelude["<>"](__dict_Semigroup_86)(_250)(_249);
            };
        });
    };
    var runDual = function (_241) {
        return _241;
    };
    var monoidDual = function (__dict_Monoid_88) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_88["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_88));
    };
    var eqDual = function (__dict_Eq_89) {
        return new Prelude.Eq(function (_244) {
            return function (_245) {
                return Prelude["/="](__dict_Eq_89)(_244)(_245);
            };
        }, function (_242) {
            return function (_243) {
                return Prelude["=="](__dict_Eq_89)(_242)(_243);
            };
        });
    };
    var ordDual = function (__dict_Ord_87) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_87["__superclass_Prelude.Eq_0"]());
        }, function (_246) {
            return function (_247) {
                return Prelude.compare(__dict_Ord_87)(_246)(_247);
            };
        });
    };
    return {
        Dual: Dual, 
        eqDual: eqDual, 
        monoidDual: monoidDual, 
        ordDual: ordDual, 
        runDual: runDual, 
        semigroupDual: semigroupDual, 
        showDual: showDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = new Prelude.Semigroup(function (_252) {
        return function (_253) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_252)(_253);
        };
    });
    var runEndo = function (_251) {
        return _251;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        monoidEndo: monoidEndo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = new Prelude.Show(function (_261) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_261) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_262) {
        return function (_263) {
            return _262 * _263;
        };
    });
    var runProduct = function (_254) {
        return _254;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_257) {
        return function (_258) {
            return _257 !== _258;
        };
    }, function (_255) {
        return function (_256) {
            return _255 === _256;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_259) {
        return function (_260) {
            return Prelude.compare(Prelude.ordNumber)(_259)(_260);
        };
    });
    return {
        Product: Product, 
        eqProduct: eqProduct, 
        monoidProduct: monoidProduct, 
        ordProduct: ordProduct, 
        runProduct: runProduct, 
        semigroupProduct: semigroupProduct, 
        showProduct: showProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = new Prelude.Show(function (_271) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_271) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_272) {
        return function (_273) {
            return _272 + _273;
        };
    });
    var runSum = function (_264) {
        return _264;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_267) {
        return function (_268) {
            return _267 !== _268;
        };
    }, function (_265) {
        return function (_266) {
            return _265 === _266;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_269) {
        return function (_270) {
            return Prelude.compare(Prelude.ordNumber)(_269)(_270);
        };
    });
    return {
        Sum: Sum, 
        eqSum: eqSum, 
        monoidSum: monoidSum, 
        ordSum: ordSum, 
        runSum: runSum, 
        semigroupSum: semigroupSum, 
        showSum: showSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Data_Array = PS.Data_Array;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_278) {
        if (_278.length >= 1) {
            var _802 = _278.slice(1);
            var _796 = unzip(_802);
            return new Tuple(Prelude[":"]((_278[0]).value0)(_796.value0), Prelude[":"]((_278[0]).value1)(_796.value1));
        };
        if (_278.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_276) {
        return function (_277) {
            return _276(_277.value0)(_277.value1);
        };
    };
    var swap = function (_279) {
        return new Tuple(_279.value1, _279.value0);
    };
    var snd = function (_275) {
        return _275.value1;
    };
    var showTuple = function (__dict_Show_90) {
        return function (__dict_Show_91) {
            return new Prelude.Show(function (_280) {
                return "Tuple (" + (Prelude.show(__dict_Show_90)(_280.value0) + (") (" + (Prelude.show(__dict_Show_91)(_280.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_285) {
        return function (_286) {
            return new Tuple(_286.value0, _285.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_92) {
        return function (__dict_Semigroup_93) {
            return new Prelude.Semigroup(function (_287) {
                return function (_288) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_92)(_287.value0)(_288.value0), Prelude["<>"](__dict_Semigroup_93)(_287.value1)(_288.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_96) {
        return function (__dict_Monoid_97) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_96["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_97["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_96), Data_Monoid.mempty(__dict_Monoid_97)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_289) {
        return function (_290) {
            return new Tuple(_290.value0, _289(_290.value1));
        };
    });
    var fst = function (_274) {
        return _274.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_99) {
        return function (__dict_Lazy1_100) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_99)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_100)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_101) {
        return function (__dict_Lazy2_102) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_101)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_102)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_103) {
        return function (__dict_Lazy_104) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_103)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_104)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_295) {
        return function (_296) {
            return new Tuple(_296.value0, _295(_296));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_105) {
        return function (__dict_Eq_106) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_105)(__dict_Eq_106))(t1)(t2);
                };
            }, function (_281) {
                return function (_282) {
                    return Prelude["=="](__dict_Eq_105)(_281.value0)(_282.value0) && Prelude["=="](__dict_Eq_106)(_281.value1)(_282.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_94) {
        return function (__dict_Ord_95) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_94["__superclass_Prelude.Eq_0"]())(__dict_Ord_95["__superclass_Prelude.Eq_0"]());
            }, function (_283) {
                return function (_284) {
                    var _847 = Prelude.compare(__dict_Ord_94)(_283.value0)(_284.value0);
                    if (_847 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_95)(_283.value1)(_284.value1);
                    };
                    return _847;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_108) {
        return new Prelude.Apply(function (_291) {
            return function (_292) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_108)(_291.value0)(_292.value0), _291.value1(_292.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_107) {
        return new Prelude.Bind(function (_293) {
            return function (_294) {
                var _860 = _294(_293.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_107)(_293.value0)(_860.value0), _860.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_107);
        });
    };
    var applicativeTuple = function (__dict_Monoid_109) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_109["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_109)));
    };
    var monadTuple = function (__dict_Monoid_98) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_98);
        }, function () {
            return bindTuple(__dict_Monoid_98["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        applicativeTuple: applicativeTuple, 
        applyTuple: applyTuple, 
        bindTuple: bindTuple, 
        comonadTuple: comonadTuple, 
        curry: curry, 
        eqTuple: eqTuple, 
        extendTuple: extendTuple, 
        fst: fst, 
        functorTuple: functorTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple, 
        lazyTuple: lazyTuple, 
        monadTuple: monadTuple, 
        monoidTuple: monoidTuple, 
        ordTuple: ordTuple, 
        semigroupTuple: semigroupTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        showTuple: showTuple, 
        snd: snd, 
        swap: swap, 
        uncurry: uncurry, 
        unzip: unzip, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var EnvT = {
        create: function (value) {
            return value;
        }
    };
    var withEnvT = function (_298) {
        return function (_299) {
            return EnvT.create(new Data_Tuple.Tuple(_298(_299.value0), _299.value1));
        };
    };
    var runEnvT = function (_297) {
        return _297;
    };
    var mapEnvT = function (_300) {
        return function (_301) {
            return EnvT.create(new Data_Tuple.Tuple(_301.value0, _300(_301.value1)));
        };
    };
    var functorEnvT = function (__dict_Functor_110) {
        return new Prelude.Functor(function (_302) {
            return function (_303) {
                return EnvT.create(new Data_Tuple.Tuple(_303.value0, Prelude["<$>"](__dict_Functor_110)(_302)(_303.value1)));
            };
        });
    };
    var extendEnvT = function (__dict_Extend_111) {
        return new Control_Extend.Extend(function (_304) {
            return function (_305) {
                return EnvT.create(new Data_Tuple.Tuple(_305.value0, Prelude["<$>"](__dict_Extend_111["__superclass_Prelude.Functor_0"]())(_304)(Control_Extend["<<="](__dict_Extend_111)(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Tuple.Tuple.create(_305.value0))(EnvT.create))(_305.value1))));
            };
        }, function () {
            return functorEnvT(__dict_Extend_111["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransEnvT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_112) {
        return function (_307) {
            return _307.value1;
        };
    });
    var comonadEnvT = function (__dict_Comonad_113) {
        return new Control_Comonad.Comonad(function () {
            return extendEnvT(__dict_Comonad_113["__superclass_Control.Extend.Extend_0"]());
        }, function (_306) {
            return Control_Comonad.extract(__dict_Comonad_113)(_306.value1);
        });
    };
    return {
        EnvT: EnvT, 
        comonadEnvT: comonadEnvT, 
        comonadTransEnvT: comonadTransEnvT, 
        extendEnvT: extendEnvT, 
        functorEnvT: functorEnvT, 
        mapEnvT: mapEnvT, 
        runEnvT: runEnvT, 
        withEnvT: withEnvT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var StoreT = {
        create: function (value) {
            return value;
        }
    };
    var runStoreT = function (_308) {
        return _308;
    };
    var functorStoreT = function (__dict_Functor_114) {
        return new Prelude.Functor(function (_309) {
            return function (_310) {
                return StoreT.create(new Data_Tuple.Tuple(Prelude["<$>"](__dict_Functor_114)(function (h) {
                    return Prelude[">>>"](Prelude.semigroupoidArr)(h)(_309);
                })(_310.value0), _310.value1));
            };
        });
    };
    var extendStoreT = function (__dict_Extend_115) {
        return new Control_Extend.Extend(function (_311) {
            return function (_312) {
                return StoreT.create(new Data_Tuple.Tuple(Control_Extend["<<="](__dict_Extend_115)(function (w$prime) {
                    return function (s$prime) {
                        return _311(StoreT.create(new Data_Tuple.Tuple(w$prime, s$prime)));
                    };
                })(_312.value0), _312.value1));
            };
        }, function () {
            return functorStoreT(__dict_Extend_115["__superclass_Prelude.Functor_0"]());
        });
    };
    var comonadTransStoreT = new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_116) {
        return function (_314) {
            return Prelude["<$>"]((__dict_Comonad_116["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                return f(_314.value1);
            })(_314.value0);
        };
    });
    var comonadStoreT = function (__dict_Comonad_117) {
        return new Control_Comonad.Comonad(function () {
            return extendStoreT(__dict_Comonad_117["__superclass_Control.Extend.Extend_0"]());
        }, function (_313) {
            return Control_Comonad.extract(__dict_Comonad_117)(_313.value0)(_313.value1);
        });
    };
    return {
        StoreT: StoreT, 
        comonadStoreT: comonadStoreT, 
        comonadTransStoreT: comonadTransStoreT, 
        extendStoreT: extendStoreT, 
        functorStoreT: functorStoreT, 
        runStoreT: runStoreT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Data_Tuple = PS.Data_Tuple;
    function ComonadStore(__superclass_Control$dotComonad$dotComonad_0, peek, pos) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.peek = peek;
        this.pos = pos;
    };
    var pos = function (dict) {
        return dict.pos;
    };
    var peek = function (dict) {
        return dict.peek;
    };
    var peeks = function (__dict_ComonadStore_118) {
        return function (f) {
            return function (x) {
                return peek(__dict_ComonadStore_118)(f(pos(__dict_ComonadStore_118)(x)))(x);
            };
        };
    };
    var seeks = function (__dict_ComonadStore_119) {
        return function (__dict_Extend_120) {
            return function (f) {
                return function (x) {
                    return peeks(__dict_ComonadStore_119)(f)(Control_Extend.duplicate(__dict_Extend_120)(x));
                };
            };
        };
    };
    var seek = function (__dict_ComonadStore_121) {
        return function (__dict_Extend_122) {
            return function (s) {
                return function (x) {
                    return peek(__dict_ComonadStore_121)(s)(Control_Extend.duplicate(__dict_Extend_122)(x));
                };
            };
        };
    };
    var experiment = function (__dict_ComonadStore_123) {
        return function (__dict_Functor_124) {
            return function (f) {
                return function (x) {
                    return Prelude["<$>"](__dict_Functor_124)(Prelude.flip(peek(__dict_ComonadStore_123))(x))(f(pos(__dict_ComonadStore_123)(x)));
                };
            };
        };
    };
    var comonadStoreStoreT = function (__dict_Comonad_125) {
        return new ComonadStore(function () {
            return Control_Comonad_Store_Trans.comonadStoreT(__dict_Comonad_125);
        }, function (_316) {
            return function (_317) {
                return Control_Comonad.extract(__dict_Comonad_125)(_317.value0)(_316);
            };
        }, function (_315) {
            return _315.value1;
        });
    };
    return {
        ComonadStore: ComonadStore, 
        comonadStoreStoreT: comonadStoreStoreT, 
        experiment: experiment, 
        peek: peek, 
        peeks: peeks, 
        pos: pos, 
        seek: seek, 
        seeks: seeks
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Trans = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad_Trans = PS.Control_Comonad_Trans;
    var TracedT = {
        create: function (value) {
            return value;
        }
    };
    var runTracedT = function (_318) {
        return _318;
    };
    var functorTracedT = function (__dict_Functor_126) {
        return new Prelude.Functor(function (_319) {
            return function (_320) {
                return Prelude["<$>"](__dict_Functor_126)(function (g) {
                    return function (t) {
                        return _319(g(t));
                    };
                })(_320);
            };
        });
    };
    var extendTracedT = function (__dict_Extend_127) {
        return function (__dict_Semigroup_128) {
            return new Control_Extend.Extend(function (_321) {
                return function (_322) {
                    return Control_Extend["<<="](__dict_Extend_127)(function (w_1) {
                        return function (t) {
                            return _321(Prelude["<$>"](__dict_Extend_127["__superclass_Prelude.Functor_0"]())(function (h) {
                                return function (t$prime) {
                                    return h(Prelude["<>"](__dict_Semigroup_128)(t)(t$prime));
                                };
                            })(w_1));
                        };
                    })(_322);
                };
            }, function () {
                return functorTracedT(__dict_Extend_127["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var comonadTransTracedT = function (__dict_Monoid_129) {
        return new Control_Comonad_Trans.ComonadTrans(function (__dict_Comonad_130) {
            return function (_324) {
                return Prelude["<$>"]((__dict_Comonad_130["__superclass_Control.Extend.Extend_0"]())["__superclass_Prelude.Functor_0"]())(function (f) {
                    return f(Data_Monoid.mempty(__dict_Monoid_129));
                })(_324);
            };
        });
    };
    var comonadTracedT = function (__dict_Comonad_131) {
        return function (__dict_Monoid_132) {
            return new Control_Comonad.Comonad(function () {
                return extendTracedT(__dict_Comonad_131["__superclass_Control.Extend.Extend_0"]())(__dict_Monoid_132["__superclass_Prelude.Semigroup_0"]());
            }, function (_323) {
                return Control_Comonad.extract(__dict_Comonad_131)(_323)(Data_Monoid.mempty(__dict_Monoid_132));
            });
        };
    };
    return {
        TracedT: TracedT, 
        comonadTracedT: comonadTracedT, 
        comonadTransTracedT: comonadTransTracedT, 
        extendTracedT: extendTracedT, 
        functorTracedT: functorTracedT, 
        runTracedT: runTracedT
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced_Class = (function () {
    "use strict";
    var Control_Comonad = PS.Control_Comonad;
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    function ComonadTraced(__superclass_Control$dotComonad$dotComonad_0, track) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.track = track;
    };
    var track = function (dict) {
        return dict.track;
    };
    var tracks = function (__dict_Comonad_133) {
        return function (__dict_ComonadTraced_134) {
            return function (f) {
                return function (w) {
                    return track(__dict_ComonadTraced_134)(f(Control_Comonad.extract(__dict_Comonad_133)(w)))(w);
                };
            };
        };
    };
    var listens = function (__dict_Functor_135) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_135)(function (g) {
                    return function (t) {
                        return new Data_Tuple.Tuple(g(t), f(t));
                    };
                })(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    var listen = function (__dict_Functor_136) {
        return function (tr) {
            return Prelude["<$>"](__dict_Functor_136)(function (f) {
                return function (t) {
                    return new Data_Tuple.Tuple(f(t), t);
                };
            })(Control_Comonad_Traced_Trans.runTracedT(tr));
        };
    };
    var comonadTracedTracedT = function (__dict_Comonad_137) {
        return function (__dict_Monoid_138) {
            return new ComonadTraced(function () {
                return Control_Comonad_Traced_Trans.comonadTracedT(__dict_Comonad_137)(__dict_Monoid_138);
            }, function (t) {
                return function (tr) {
                    return Control_Comonad.extract(__dict_Comonad_137)(Control_Comonad_Traced_Trans.runTracedT(tr))(t);
                };
            });
        };
    };
    var censor = function (__dict_Functor_139) {
        return function (f) {
            return function (tr) {
                return Prelude["<$>"](__dict_Functor_139)(Prelude[">>>"](Prelude.semigroupoidArr)(f))(Control_Comonad_Traced_Trans.runTracedT(tr));
            };
        };
    };
    return {
        ComonadTraced: ComonadTraced, 
        censor: censor, 
        comonadTracedTracedT: comonadTracedTracedT, 
        listen: listen, 
        listens: listens, 
        track: track, 
        tracks: tracks
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ErrorT = {
        create: function (value) {
            return value;
        }
    };
    var runErrorT = function (_325) {
        return _325;
    };
    var monadTransErrorT = function (__dict_Error_142) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_143) {
            return function (m) {
                return ErrorT.create(Prelude[">>="](__dict_Monad_143["__superclass_Prelude.Bind_1"]())(m)(function (_7) {
                    return Prelude["return"](__dict_Monad_143)(new Data_Either.Right(_7));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT.create(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_148) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_148["__superclass_Prelude.Bind_1"]())(m)(function (_9) {
                    return Prelude["return"](__dict_Monad_148)((function () {
                        if (_9 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_9.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_9 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_9.value0.value0), _9.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_149) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_149["__superclass_Prelude.Bind_1"]())(listen(m))(function (_8) {
                    return Prelude["return"](__dict_Monad_149)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _8.value1);
                    })(_8.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT.create(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT.create(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_150) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_150)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_153) {
        return new Prelude.Apply(function (_326) {
            return function (_327) {
                return ErrorT.create(Prelude["<*>"](__dict_Apply_153)(Prelude["<$>"](__dict_Apply_153["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_326))(_327));
            };
        }, function () {
            return functorErrorT(__dict_Apply_153["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_151) {
        return function (__dict_Error_152) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_151["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_6) {
                        if (_6 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_151)(new Data_Either.Left(_6.value0));
                        };
                        if (_6 instanceof Data_Either.Right) {
                            return runErrorT(f(_6.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_151["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_154) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_154["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT.create(Prelude.pure(__dict_Applicative_154)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_146) {
        return function (__dict_Error_147) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_146["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_146)(__dict_Error_147);
            });
        };
    };
    var altErrorT = function (__dict_Monad_157) {
        return function (__dict_Error_158) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_157["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_157)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_157["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_140) {
        return function (__dict_Error_141) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_140)(__dict_Error_141);
            }, Prelude["return"](__dict_Monad_140)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_141)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_155) {
        return function (__dict_Error_156) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_155)(__dict_Error_156);
            }, function () {
                return applicativeErrorT(__dict_Monad_155["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_144) {
        return function (__dict_Error_145) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_144)(__dict_Error_145);
            }, function () {
                return monadErrorT(__dict_Monad_144)(__dict_Error_145);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        altErrorT: altErrorT, 
        alternativeErrorT: alternativeErrorT, 
        applicativeErrorT: applicativeErrorT, 
        applyErrorT: applyErrorT, 
        bindErrorT: bindErrorT, 
        functorErrorT: functorErrorT, 
        liftCallCCError: liftCallCCError, 
        liftListenError: liftListenError, 
        liftPassError: liftPassError, 
        mapErrorT: mapErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT, 
        plusErrorT: plusErrorT, 
        runErrorT: runErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = {
        create: function (value) {
            return value;
        }
    };
    var runMaybeT = function (_328) {
        return _328;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_159) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude.liftM1(__dict_Monad_159)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_161) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_161["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_161)((function () {
                        if (_12 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_12 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_12.value0.value0), _12.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_162) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_162["__superclass_Prelude.Bind_1"]())(listen(m))(function (_11) {
                    return Prelude["return"](__dict_Monad_162)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _11.value1);
                    })(_11.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT.create($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT.create(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT.create(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_160) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_160);
        }, function () {
            return bindMaybeT(__dict_Monad_160);
        });
    };
    var functorMaybeT = function (__dict_Monad_163) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_163)));
    };
    var bindMaybeT = function (__dict_Monad_164) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT.create(Prelude[">>="](__dict_Monad_164["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_10) {
                    if (_10 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_164)(Data_Maybe.Nothing.value);
                    };
                    if (_10 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_10.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_164);
        });
    };
    var applyMaybeT = function (__dict_Monad_165) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_165)), function () {
            return functorMaybeT(__dict_Monad_165);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_166) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_166);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_166["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        applyMaybeT: applyMaybeT, 
        bindMaybeT: bindMaybeT, 
        functorMaybeT: functorMaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftPassMaybe: liftPassMaybe, 
        mapMaybeT: mapMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT, 
        runMaybeT: runMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var RWST = {
        create: function (value) {
            return value;
        }
    };
    var runRWST = function (_331) {
        return _331;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_169) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_170) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_171) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_171["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_171)(mkSee(__dict_Monoid_170)(s)(a)(Data_Monoid.mempty(__dict_Monoid_170)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_172) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_172)(function (see) {
                            var _949 = {};
                            for (var _950 in see) {
                                if (see.hasOwnProperty(_950)) {
                                    _949[_950] = see[_950];
                                };
                            };
                            _949.result = f(see.result);
                            return _949;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_173) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_173["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_173)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_174) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_174["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_174)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_177) {
        return function (__dict_Semigroup_178) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_177)(Prelude["<$>"](__dict_Apply_177["__superclass_Prelude.Functor_0"]())(function (_329) {
                                return function (see) {
                                    var _952 = {};
                                    for (var _953 in see) {
                                        if (see.hasOwnProperty(_953)) {
                                            _952[_953] = see[_953];
                                        };
                                    };
                                    _952.result = _329.result(see.result);
                                    _952.log = Prelude["<>"](__dict_Semigroup_178)(_329.log)(see.log);
                                    return _952;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_177["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_175) {
        return function (__dict_Semigroup_176) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_175)(runRWST(m)(r)(s))(function (_330) {
                                return Prelude["<$>"]((__dict_Bind_175["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _957 = {};
                                    for (var _958 in see$prime) {
                                        if (see$prime.hasOwnProperty(_958)) {
                                            _957[_958] = see$prime[_958];
                                        };
                                    };
                                    _957.log = Prelude["<>"](__dict_Semigroup_176)(_330.log)(see$prime.log);
                                    return _957;
                                })(runRWST(f(_330.result))(r)(_330.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_175["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_176);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_179) {
        return function (__dict_Monoid_180) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_179["__superclass_Prelude.Apply_0"]())(__dict_Monoid_180["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_179)(mkSee(__dict_Monoid_180)(s)(a)(Data_Monoid.mempty(__dict_Monoid_180)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_167) {
        return function (__dict_Monoid_168) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_167["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_168);
            }, function () {
                return bindRWST(__dict_Monad_167["__superclass_Prelude.Bind_1"]())(__dict_Monoid_168["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        applicativeRWST: applicativeRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        evalRWST: evalRWST, 
        execRWST: execRWST, 
        functorRWST: functorRWST, 
        mapRWST: mapRWST, 
        mkSee: mkSee, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST, 
        runRWST: runRWST, 
        withRWST: withRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var StateT = {
        create: function (value) {
            return value;
        }
    };
    var runStateT = function (_332) {
        return _332;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_183) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_183["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_183)(new Data_Tuple.Tuple(_14, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_186) {
        return function (pass) {
            return function (m) {
                return StateT.create(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_186["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_16) {
                        return Prelude["return"](__dict_Monad_186)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_16.value0.value0, _16.value1), _16.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_187) {
        return function (listen) {
            return function (m) {
                return StateT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_187["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_15) {
                        return Prelude["return"](__dict_Monad_187)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_15.value0.value0, _15.value1), _15.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT.create(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT.create(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Apply_189) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_189["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runStateT(m)(s));
            };
        };
    };
    var evalStateT = function (__dict_Apply_190) {
        return function (m) {
            return function (s) {
                return Prelude["<$>"](__dict_Apply_190["__superclass_Prelude.Functor_0"]())(Data_Tuple.fst)(runStateT(m)(s));
            };
        };
    };
    var monadStateT = function (__dict_Monad_184) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_184);
        }, function () {
            return bindStateT(__dict_Monad_184);
        });
    };
    var functorStateT = function (__dict_Monad_188) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_188)));
    };
    var bindStateT = function (__dict_Monad_191) {
        return new Prelude.Bind(function (_333) {
            return function (_334) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_191["__superclass_Prelude.Bind_1"]())(_333(s))(function (_13) {
                        return runStateT(_334(_13.value0))(_13.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_191);
        });
    };
    var applyStateT = function (__dict_Monad_192) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_192)), function () {
            return functorStateT(__dict_Monad_192);
        });
    };
    var applicativeStateT = function (__dict_Monad_193) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_193);
        }, function (a) {
            return StateT.create(function (s) {
                return Prelude["return"](__dict_Monad_193)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_196) {
        return function (__dict_Alt_197) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT.create(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_197)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_196);
            });
        };
    };
    var plusStateT = function (__dict_Monad_181) {
        return function (__dict_Plus_182) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_181)(__dict_Plus_182["__superclass_Control.Alt.Alt_0"]());
            }, StateT.create(function (_) {
                return Control_Plus.empty(__dict_Plus_182);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_194) {
        return function (__dict_Alternative_195) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_194)(__dict_Alternative_195["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_194);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_185) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_185["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_185["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_185["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        altStateT: altStateT, 
        alternativeStateT: alternativeStateT, 
        applicativeStateT: applicativeStateT, 
        applyStateT: applyStateT, 
        bindStateT: bindStateT, 
        evalStateT: evalStateT, 
        execStateT: execStateT, 
        functorStateT: functorStateT, 
        lazy1StateT: lazy1StateT, 
        liftCallCCState: liftCallCCState, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCatchState: liftCatchState, 
        liftListenState: liftListenState, 
        liftPassState: liftPassState, 
        mapStateT: mapStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadStateT: monadStateT, 
        monadTransStateT: monadTransStateT, 
        plusStateT: plusStateT, 
        runStateT: runStateT, 
        withStateT: withStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = {
        create: function (value) {
            return value;
        }
    };
    var runWriterT = function (_336) {
        return _336;
    };
    var monadTransWriterT = function (__dict_Monoid_202) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_203) {
            return function (m) {
                return WriterT.create(Prelude[">>="](__dict_Monad_203["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                    return Prelude["return"](__dict_Monad_203)(new Data_Tuple.Tuple(_19, Data_Monoid.mempty(__dict_Monoid_202)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT.create(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT.create($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_206) {
        return function (callCC) {
            return function (f) {
                return WriterT.create(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT.create(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_206))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_207) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_207)(function (_335) {
                return new Data_Tuple.Tuple(f(_335.value0), _335.value1);
            }));
        });
    };
    var execWriterT = function (__dict_Apply_208) {
        return function (m) {
            return Prelude["<$>"](__dict_Apply_208["__superclass_Prelude.Functor_0"]())(Data_Tuple.snd)(runWriterT(m));
        };
    };
    var applyWriterT = function (__dict_Monoid_211) {
        return function (__dict_Apply_212) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT.create((function () {
                        var k = function (_337) {
                            return function (_338) {
                                return new Data_Tuple.Tuple(_337.value0(_338.value0), Prelude["<>"](__dict_Monoid_211["__superclass_Prelude.Semigroup_0"]())(_337.value1)(_338.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_212)(Prelude["<$>"](__dict_Apply_212["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_212["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_209) {
        return function (__dict_Monad_210) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT.create(Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_18) {
                        return Prelude[">>="](__dict_Monad_210["__superclass_Prelude.Bind_1"]())(runWriterT(k(_18.value0)))(function (_17) {
                            return Prelude["return"](__dict_Monad_210)(new Data_Tuple.Tuple(_17.value0, Prelude["<>"](__dict_Monoid_209["__superclass_Prelude.Semigroup_0"]())(_18.value1)(_17.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_209)((__dict_Monad_210["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_213) {
        return function (__dict_Applicative_214) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_213)(__dict_Applicative_214["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT.create(Prelude.pure(__dict_Applicative_214)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_213))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_200) {
        return function (__dict_Monad_201) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_200)(__dict_Monad_201["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_200)(__dict_Monad_201);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_217) {
        return function (__dict_Alt_218) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT.create(Control_Alt["<|>"](__dict_Alt_218)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_218["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_198) {
        return function (__dict_Plus_199) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_198)(__dict_Plus_199["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_199));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_215) {
        return function (__dict_Alternative_216) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_215)(__dict_Alternative_216["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_215)(__dict_Alternative_216["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_204) {
        return function (__dict_MonadPlus_205) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_204)(__dict_MonadPlus_205["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_204)(__dict_MonadPlus_205["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        altWriterT: altWriterT, 
        alternativeWriterT: alternativeWriterT, 
        applicativeWriterT: applicativeWriterT, 
        applyWriterT: applyWriterT, 
        bindWriterT: bindWriterT, 
        execWriterT: execWriterT, 
        functorWriterT: functorWriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT, 
        monadWriterT: monadWriterT, 
        plusWriterT: plusWriterT, 
        runWriterT: runWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Prelude = PS.Prelude;
    function MonadCont(callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_219) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_220) {
        return function (__dict_MonadCont_221) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_221)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_222) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_222)));
    };
    var monadContReaderT = function (__dict_MonadCont_223) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_223)));
    };
    var monadContStateT = function (__dict_MonadCont_224) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_224)));
    };
    var monadWriterT = function (__dict_Monoid_225) {
        return function (__dict_MonadCont_226) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_225)(callCC(__dict_MonadCont_226)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Either = PS.Data_Either;
    function MonadError(catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_227) {
        return function (__dict_Error_228) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT.create(Prelude[">>="](__dict_Monad_227["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_20) {
                        if (_20 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_20.value0));
                        };
                        if (_20 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_227)(new Data_Either.Right(_20.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT.create(Prelude["return"](__dict_Monad_227)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_229) {
        return new MonadError(function (_339) {
            return function (_340) {
                if (_339 instanceof Data_Either.Left) {
                    return _340(_339.value0);
                };
                if (_339 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_339.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_230) {
        return function (__dict_MonadError_231) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_231)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_230)(throwError(__dict_MonadError_231)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_232) {
        return function (__dict_MonadError_233) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_233)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_232)(throwError(__dict_MonadError_233)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_234) {
        return function (__dict_MonadError_235) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_235)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_234)(throwError(__dict_MonadError_235)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_236) {
        return function (__dict_Monoid_237) {
            return function (__dict_MonadError_238) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_238)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_237))(__dict_Monad_236)(throwError(__dict_MonadError_238)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorStateT: monadErrorStateT, 
        monadErrorWriterT: monadErrorWriterT, 
        throwError: throwError
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_348) {
            return f(_348.value0)(_348.value1.value0)(_348.value1.value1.value0)(_348.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value1.value1.value1.value0)(_348.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_347) {
            return f(_347.value0)(_347.value1.value0)(_347.value1.value1.value0)(_347.value1.value1.value1.value0)(_347.value1.value1.value1.value1.value0)(_347.value1.value1.value1.value1.value1.value0)(_347.value1.value1.value1.value1.value1.value1.value0)(_347.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_346) {
            return f(_346.value0)(_346.value1.value0)(_346.value1.value1.value0)(_346.value1.value1.value1.value0)(_346.value1.value1.value1.value1.value0)(_346.value1.value1.value1.value1.value1.value0)(_346.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_345) {
            return f(_345.value0)(_345.value1.value0)(_345.value1.value1.value0)(_345.value1.value1.value1.value0)(_345.value1.value1.value1.value1.value0)(_345.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_344) {
            return f(_344.value0)(_344.value1.value0)(_344.value1.value1.value0)(_344.value1.value1.value1.value0)(_344.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_343) {
            return f(_343.value0)(_343.value1.value0)(_343.value1.value1.value0)(_343.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_342) {
            return f(_342.value0)(_342.value1.value0)(_342.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_341) {
            return f(_341.value0)(_341.value1);
        };
    };
    var con10 = function (f) {
        return function (_349) {
            return f(_349.value0)(_349.value1.value0)(_349.value1.value1.value0)(_349.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_349.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con2: con2, 
        con3: con3, 
        con4: con4, 
        con5: con5, 
        con6: con6, 
        con7: con7, 
        con8: con8, 
        con9: con9
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_239) {
        return new Prelude.Show(function (_357) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_239))(_357) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_358) {
        return function (_359) {
            if (_358 instanceof Data_Maybe.Just) {
                return _358;
            };
            return _359;
        };
    });
    var runFirst = function (_350) {
        return _350;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_241) {
        return new Prelude.Eq(function (_353) {
            return function (_354) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_241))(_353)(_354);
            };
        }, function (_351) {
            return function (_352) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_241))(_351)(_352);
            };
        });
    };
    var ordFirst = function (__dict_Ord_240) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_240["__superclass_Prelude.Eq_0"]());
        }, function (_355) {
            return function (_356) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_240))(_355)(_356);
            };
        });
    };
    return {
        First: First, 
        eqFirst: eqFirst, 
        monoidFirst: monoidFirst, 
        ordFirst: ordFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst, 
        showFirst: showFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Data_Monoid = PS.Data_Monoid;
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid_First = PS.Data_Monoid_First;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    
  function foldrArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = xs.length - 1; i >= 0; --i) {
          acc = f(xs[i])(acc);
        }
        return acc;
      }
    }
  };
    
  function foldlArray(f) {
    return function(z) {
      return function(xs) {
        var acc = z;
        for (var i = 0, len = xs.length; i < len; ++i) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      }
    }
  };
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_242) {
        return function (__dict_Foldable_243) {
            return function (f) {
                return foldr(__dict_Foldable_243)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_242["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_242)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_244) {
        return function (__dict_Foldable_245) {
            return Prelude.flip(traverse_(__dict_Applicative_244)(__dict_Foldable_245));
        };
    };
    var sequence_ = function (__dict_Applicative_246) {
        return function (__dict_Foldable_247) {
            return traverse_(__dict_Applicative_246)(__dict_Foldable_247)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_248) {
        return function (__dict_Monoid_249) {
            return function (sep) {
                return function (xs) {
                    var go = function (_393) {
                        return function (_394) {
                            if (_393.init) {
                                return {
                                    init: false, 
                                    acc: _394
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_249["__superclass_Prelude.Semigroup_0"]())(_393.acc)(Prelude["<>"](__dict_Monoid_249["__superclass_Prelude.Semigroup_0"]())(sep)(_394))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_248)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_249)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_250) {
        return function (__dict_Monoid_251) {
            return foldl(__dict_Foldable_250)(Prelude["<>"](__dict_Monoid_251["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_251));
        };
    };
    var or = function (__dict_Foldable_252) {
        return foldl(__dict_Foldable_252)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_253) {
        return foldl(__dict_Foldable_253)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_254) {
        return foldl(__dict_Foldable_254)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_255) {
        return function (_391) {
            return function (_392) {
                return _391(_392.value1);
            };
        };
    }, function (_388) {
        return function (_389) {
            return function (_390) {
                return _388(_389)(_390.value1);
            };
        };
    }, function (_385) {
        return function (_386) {
            return function (_387) {
                return _385(_387.value1)(_386);
            };
        };
    });
    var foldableRef = new Foldable(function (__dict_Monoid_256) {
        return function (_383) {
            return function (_384) {
                return _383(_384);
            };
        };
    }, function (_380) {
        return function (_381) {
            return function (_382) {
                return _380(_381)(_382);
            };
        };
    }, function (_377) {
        return function (_378) {
            return function (_379) {
                return _377(_379)(_378);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_257) {
        return function (_375) {
            return function (_376) {
                if (_376 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_257);
                };
                if (_376 instanceof Data_Maybe.Just) {
                    return _375(_376.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_372) {
        return function (_373) {
            return function (_374) {
                if (_374 instanceof Data_Maybe.Nothing) {
                    return _373;
                };
                if (_374 instanceof Data_Maybe.Just) {
                    return _372(_373)(_374.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_369) {
        return function (_370) {
            return function (_371) {
                if (_371 instanceof Data_Maybe.Nothing) {
                    return _370;
                };
                if (_371 instanceof Data_Maybe.Just) {
                    return _369(_371.value0)(_370);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_258) {
        return function (_367) {
            return function (_368) {
                if (_368 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_258);
                };
                if (_368 instanceof Data_Either.Right) {
                    return _367(_368.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_364) {
        return function (_365) {
            return function (_366) {
                if (_366 instanceof Data_Either.Left) {
                    return _365;
                };
                if (_366 instanceof Data_Either.Right) {
                    return _364(_365)(_366.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_361) {
        return function (_362) {
            return function (_363) {
                if (_363 instanceof Data_Either.Left) {
                    return _362;
                };
                if (_363 instanceof Data_Either.Right) {
                    return _361(_363.value0)(_362);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_259) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_259["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_259))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_260) {
        return function (__dict_Foldable_261) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_261)(Data_Monoid_First.monoidFirst)(function (_360) {
                        return Prelude["=="](__dict_Eq_260)(a)(_360.value0) ? new Data_Maybe.Just(_360.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_262) {
        return function (__dict_Monoid_263) {
            return foldMap(__dict_Foldable_262)(__dict_Monoid_263)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_264) {
        return function (p) {
            return function (f) {
                var _1168 = foldMap(__dict_Foldable_264)(Data_Monoid.monoidArray)(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_1168.length >= 1) {
                    var _1170 = _1168.slice(1);
                    return new Data_Maybe.Just(_1168[0]);
                };
                if (_1168.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_265) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_265)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_266) {
        return function (__dict_Foldable_267) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_267))(Prelude["=="](__dict_Eq_266));
        };
    };
    var notElem = function (__dict_Eq_268) {
        return function (__dict_Foldable_269) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_268)(__dict_Foldable_269)(x));
            };
        };
    };
    var and = function (__dict_Foldable_270) {
        return foldl(__dict_Foldable_270)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_271) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_271)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        all: all, 
        and: and, 
        any: any, 
        elem: elem, 
        find: find, 
        fold: fold, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        for_: for_, 
        intercalate: intercalate, 
        lookup: lookup, 
        mconcat: mconcat, 
        notElem: notElem, 
        or: or, 
        product: product, 
        sequence_: sequence_, 
        sum: sum, 
        traverse_: traverse_
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_272) {
        return new Prelude.Show(function (_402) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_272))(_402) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_403) {
        return function (_404) {
            if (_404 instanceof Data_Maybe.Just) {
                return _404;
            };
            if (_404 instanceof Data_Maybe.Nothing) {
                return _403;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_395) {
        return _395;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_274) {
        return new Prelude.Eq(function (_398) {
            return function (_399) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_274))(_398)(_399);
            };
        }, function (_396) {
            return function (_397) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_274))(_396)(_397);
            };
        });
    };
    var ordLast = function (__dict_Ord_273) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_273["__superclass_Prelude.Eq_0"]());
        }, function (_400) {
            return function (_401) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_273))(_400)(_401);
            };
        });
    };
    return {
        Last: Last, 
        eqLast: eqLast, 
        monoidLast: monoidLast, 
        ordLast: ordLast, 
        runLast: runLast, 
        semigroupLast: semigroupLast, 
        showLast: showLast
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function _new() {
    return {};
  }
  ;
    
  function peek(m) {
    return function(k) {
      return function() {
        return m[k];
      }
    }
  }
  ;
    
  function poke(m) {
    return function(k) {
      return function(v) {
        return function() {
          m[k] = v;
          return m;
        };
      };
    };
  }
  ;
    
  function _delete(m) {
    return function(k) {
      return function() {
        delete m[k];
        return m;
      };
    };
  }
  ;
    var $$new = _new;
    var $$delete = _delete;
    return {
        "delete": $$delete, 
        "new": $$new, 
        peek: peek, 
        poke: poke
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Data_Function = PS.Data_Function;
    var Data_Char = PS.Data_Char;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var takeWhile = function (p) {
        return function (s) {
            return take(count(p)(s))(s);
        };
    };
    var $$null = function (s) {
        return length(s) === 0;
    };
    var uncons = function (_405) {
        if ($$null(_405)) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just({
            head: Data_String_Unsafe.charAt(0)(_405), 
            tail: drop(1)(_405)
        });
    };
    var fromChar = Data_Char.charString;
    var singleton = fromChar;
    var dropWhile = function (p) {
        return function (s) {
            return drop(count(p)(s))(s);
        };
    };
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt, 
        count: count, 
        drop: drop, 
        dropWhile: dropWhile, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        indexOf: indexOf, 
        "indexOf'": indexOf$prime, 
        joinWith: joinWith, 
        lastIndexOf: lastIndexOf, 
        "lastIndexOf'": lastIndexOf$prime, 
        length: length, 
        localeCompare: localeCompare, 
        "null": $$null, 
        replace: replace, 
        singleton: singleton, 
        split: split, 
        take: take, 
        takeWhile: takeWhile, 
        toCharArray: toCharArray, 
        toLower: toLower, 
        toUpper: toUpper, 
        trim: trim, 
        uncons: uncons
    };
})();
var PS = PS || {};
PS.Text_Hatter_PureScript = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var Prelude = PS.Prelude;
    function VarE(value0) {
        this.value0 = value0;
    };
    VarE.create = function (value0) {
        return new VarE(value0);
    };
    function AppE(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AppE.create = function (value0) {
        return function (value1) {
            return new AppE(value0, value1);
        };
    };
    function StringLitE(value0) {
        this.value0 = value0;
    };
    StringLitE.create = function (value0) {
        return new StringLitE(value0);
    };
    function ArrayLitE(value0) {
        this.value0 = value0;
    };
    ArrayLitE.create = function (value0) {
        return new ArrayLitE(value0);
    };
    function RawE(value0) {
        this.value0 = value0;
    };
    RawE.create = function (value0) {
        return new RawE(value0);
    };
    function SigE(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    SigE.create = function (value0) {
        return function (value1) {
            return new SigE(value0, value1);
        };
    };
    var escapeString = function (str) {
        return Data_String.replace("")("\\a")(Data_String.replace("\b")("\\b")(Data_String.replace("\f")("\\f")(Data_String.replace("\n")("\\n")(Data_String.replace("\t")("\\t")(Data_String.replace("\r")("\\r")(Data_String.replace("\v")("\\v")(Data_String.replace("\"")("\\\"")(Data_String.replace("'")("\\'")(Data_String.replace("\\")("\\\\")(str))))))))));
    };
    var toCode = function (_406) {
        if (_406 instanceof VarE) {
            return _406.value0;
        };
        if (_406 instanceof AppE) {
            return Data_String.joinWith(" ")([ "(", toCode(_406.value0), toCode(_406.value1), ")" ]);
        };
        if (_406 instanceof StringLitE) {
            return Data_String.joinWith("")([ "\"", escapeString(_406.value0), "\"" ]);
        };
        if (_406 instanceof ArrayLitE) {
            return "[" + (Data_String.joinWith(", ")(Data_Array.map(toCode)(_406.value0)) + "]");
        };
        if (_406 instanceof RawE) {
            return Data_String.joinWith(" ")([ "(", _406.value0, "\n  )" ]);
        };
        if (_406 instanceof SigE) {
            return Data_String.joinWith(" ")([ "(", toCode(_406.value0), "::", _406.value1, ")" ]);
        };
        throw new Error("Failed pattern match");
    };
    return {
        AppE: AppE, 
        ArrayLitE: ArrayLitE, 
        RawE: RawE, 
        SigE: SigE, 
        StringLitE: StringLitE, 
        VarE: VarE, 
        toCode: toCode
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags_1) {
        return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
    };
    var regex = function (source_1) {
        return function (flags_1) {
            return regex$prime(source_1)(renderFlags(flags_1));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        flags: flags, 
        match: match, 
        parseFlags: parseFlags, 
        regex: regex, 
        renderFlags: renderFlags, 
        replace: replace, 
        "replace'": replace$prime, 
        search: search, 
        showRegex: showRegex, 
        source: source, 
        split: split, 
        test: test
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var StateR = {
        create: function (value) {
            return value;
        }
    };
    var StateL = {
        create: function (value) {
            return value;
        }
    };
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_276) {
        return function (_423) {
            return Prelude["<$>"]((__dict_Applicative_276["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_423.value0))(_423.value1);
        };
    }, function (__dict_Applicative_275) {
        return function (_421) {
            return function (_422) {
                return Prelude["<$>"]((__dict_Applicative_275["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_422.value0))(_421(_422.value1));
            };
        };
    });
    var traversableRef = new Traversable(function () {
        return Data_Foldable.foldableRef;
    }, function () {
        return Data_Eq.functorRef;
    }, function (__dict_Applicative_278) {
        return function (_417) {
            return Prelude["<$>"]((__dict_Applicative_278["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_417);
        };
    }, function (__dict_Applicative_277) {
        return function (_415) {
            return function (_416) {
                return Prelude["<$>"]((__dict_Applicative_277["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_415(_416));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_280) {
        return function (_420) {
            if (_420 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_280)(Data_Maybe.Nothing.value);
            };
            if (_420 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_280["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_420.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_279) {
        return function (_418) {
            return function (_419) {
                if (_419 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_279)(Data_Maybe.Nothing.value);
                };
                if (_419 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_279["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_418(_419.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_282) {
        return function (_414) {
            if (_414 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_282)(new Data_Either.Left(_414.value0));
            };
            if (_414 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_282["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_414.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_281) {
        return function (_412) {
            return function (_413) {
                if (_413 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_281)(new Data_Either.Left(_413.value0));
                };
                if (_413 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_281["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_412(_413.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var stateR = function (_408) {
        return _408;
    };
    var stateL = function (_407) {
        return _407;
    };
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_284) {
        return function (_411) {
            if (_411.length === 0) {
                return Prelude.pure(__dict_Applicative_284)([  ]);
            };
            if (_411.length >= 1) {
                var _1218 = _411.slice(1);
                return Prelude["<*>"](__dict_Applicative_284["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_284["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_411[0]))(sequence(traversableArray)(__dict_Applicative_284)(_1218));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_283) {
        return function (_409) {
            return function (_410) {
                if (_410.length === 0) {
                    return Prelude.pure(__dict_Applicative_283)([  ]);
                };
                if (_410.length >= 1) {
                    var _1222 = _410.slice(1);
                    return Prelude["<*>"](__dict_Applicative_283["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_283["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_409(_410[0])))(traverse(traversableArray)(__dict_Applicative_283)(_409)(_1222));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_285) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_285)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var functorStateR = new Prelude.Functor(function (f) {
        return function (k) {
            return StateR.create(function (s) {
                var _1223 = stateR(k)(s);
                return new Data_Tuple.Tuple(_1223.value0, f(_1223.value1));
            });
        };
    });
    var functorStateL = new Prelude.Functor(function (f) {
        return function (k) {
            return StateL.create(function (s) {
                var _1226 = stateL(k)(s);
                return new Data_Tuple.Tuple(_1226.value0, f(_1226.value1));
            });
        };
    });
    var $$for = function (__dict_Applicative_288) {
        return function (__dict_Traversable_289) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_289)(__dict_Applicative_288)(f)(x);
                };
            };
        };
    };
    var applyStateR = new Prelude.Apply(function (f) {
        return function (x) {
            return StateR.create(function (s) {
                var _1229 = stateR(x)(s);
                var _1230 = stateR(f)(_1229.value0);
                return new Data_Tuple.Tuple(_1230.value0, _1230.value1(_1229.value1));
            });
        };
    }, function () {
        return functorStateR;
    });
    var applyStateL = new Prelude.Apply(function (f) {
        return function (x) {
            return StateL.create(function (s) {
                var _1235 = stateL(f)(s);
                var _1236 = stateL(x)(_1235.value0);
                return new Data_Tuple.Tuple(_1236.value0, _1235.value1(_1236.value1));
            });
        };
    }, function () {
        return functorStateL;
    });
    var applicativeStateR = new Prelude.Applicative(function () {
        return applyStateR;
    }, function (a) {
        return StateR.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumR = function (__dict_Traversable_286) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateR(traverse(__dict_Traversable_286)(applicativeStateR)(function (a) {
                        return StateR.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    var applicativeStateL = new Prelude.Applicative(function () {
        return applyStateL;
    }, function (a) {
        return StateL.create(function (s) {
            return new Data_Tuple.Tuple(s, a);
        });
    });
    var mapAccumL = function (__dict_Traversable_287) {
        return function (f) {
            return function (s0) {
                return function (xs) {
                    return stateL(traverse(__dict_Traversable_287)(applicativeStateL)(function (a) {
                        return StateL.create(function (s) {
                            return f(s)(a);
                        });
                    })(xs))(s0);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        mapAccumL: mapAccumL, 
        mapAccumR: mapAccumR, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableRef: traversableRef, 
        traversableTuple: traversableTuple, 
        traverse: traverse, 
        zipWithA: zipWithA
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_290) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_290));
        };
    };
    var readWith = function (__dict_IsForeign_291) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_291)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_292) {
        return function (__dict_Index_293) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_293)(value)(prop))(readWith(__dict_IsForeign_292)(Data_Foreign_Index.errorAt(__dict_Index_293)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_294) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_294)));
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_295) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_295)));
    };
    var nullIsForeign = function (__dict_IsForeign_296) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_296)));
    };
    var foreignIsForeign = new IsForeign(function (f) {
        return Prelude["return"](Data_Either.monadEither)(f);
    });
    var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
    var arrayIsForeign = function (__dict_IsForeign_297) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_297)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        arrayIsForeign: arrayIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        foreignIsForeign: foreignIsForeign, 
        nullIsForeign: nullIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign, 
        numberIsForeign: numberIsForeign, 
        read: read, 
        readJSON: readJSON, 
        readProp: readProp, 
        readWith: readWith, 
        stringIsForeign: stringIsForeign, 
        undefinedIsForeign: undefinedIsForeign
    };
})();
var PS = PS || {};
PS.Data_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var showConst = function (__dict_Show_300) {
        return new Prelude.Show(function (_429) {
            return "Identity (" + (Prelude.show(__dict_Show_300)(_429) + ")");
        });
    };
    var runIdentity = function (_424) {
        return _424;
    };
    var functorIdentity = new Prelude.Functor(function (_430) {
        return function (_431) {
            return _430(_431);
        };
    });
    var foldableIdentity = new Data_Foldable.Foldable(function (__dict_Monoid_302) {
        return function (_441) {
            return function (_442) {
                return _441(_442);
            };
        };
    }, function (_438) {
        return function (_439) {
            return function (_440) {
                return _438(_439)(_440);
            };
        };
    }, function (_435) {
        return function (_436) {
            return function (_437) {
                return _435(_437)(_436);
            };
        };
    });
    var traversableIdentity = new Data_Traversable.Traversable(function () {
        return foldableIdentity;
    }, function () {
        return functorIdentity;
    }, function (__dict_Applicative_299) {
        return function (_445) {
            return Prelude["<$>"]((__dict_Applicative_299["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_445);
        };
    }, function (__dict_Applicative_298) {
        return function (_443) {
            return function (_444) {
                return Prelude["<$>"]((__dict_Applicative_298["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Identity.create)(_443(_444));
            };
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return f(m);
        };
    }, function () {
        return functorIdentity;
    });
    var eqIdentity = function (__dict_Eq_303) {
        return new Prelude.Eq(function (x) {
            return function (y) {
                return !Prelude["=="](eqIdentity(__dict_Eq_303))(x)(y);
            };
        }, function (_425) {
            return function (_426) {
                return Prelude["=="](__dict_Eq_303)(_425)(_426);
            };
        });
    };
    var ordIdentity = function (__dict_Ord_301) {
        return new Prelude.Ord(function () {
            return eqIdentity(__dict_Ord_301["__superclass_Prelude.Eq_0"]());
        }, function (_427) {
            return function (_428) {
                return Prelude.compare(__dict_Ord_301)(_427)(_428);
            };
        });
    };
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_434) {
        return _434;
    });
    var applyIdentity = new Prelude.Apply(function (_432) {
        return function (_433) {
            return _432(_433);
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity.create);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        applicativeIdentity: applicativeIdentity, 
        applyIdentity: applyIdentity, 
        bindIdentity: bindIdentity, 
        comonadIdentity: comonadIdentity, 
        eqIdentity: eqIdentity, 
        extendIdentity: extendIdentity, 
        foldableIdentity: foldableIdentity, 
        functorIdentity: functorIdentity, 
        monadIdentity: monadIdentity, 
        ordIdentity: ordIdentity, 
        runIdentity: runIdentity, 
        showConst: showConst, 
        traversableIdentity: traversableIdentity
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var withEnv = Control_Comonad_Env_Trans.withEnvT;
    var runEnv = function (x) {
        return Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Control_Comonad_Env_Trans.runEnvT(x));
    };
    var mapEnv = Prelude["<$>"](Control_Comonad_Env_Trans.functorEnvT(Data_Identity.functorIdentity));
    var env = function (e) {
        return function (a) {
            return Control_Comonad_Env_Trans.EnvT.create(Data_Tuple.Tuple.create(e)(a));
        };
    };
    return {
        env: env, 
        mapEnv: mapEnv, 
        runEnv: runEnv, 
        withEnv: withEnv
    };
})();
var PS = PS || {};
PS.Control_Comonad_Env_Class = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Control_Comonad_Env_Trans = PS.Control_Comonad_Env_Trans;
    var Prelude = PS.Prelude;
    function ComonadEnv(__superclass_Control$dotComonad$dotComonad_0, ask, local) {
        this["__superclass_Control.Comonad.Comonad_0"] = __superclass_Control$dotComonad$dotComonad_0;
        this.ask = ask;
        this.local = local;
    };
    var local = function (dict) {
        return dict.local;
    };
    var comonadEnvTuple = new ComonadEnv(function () {
        return Data_Tuple.comonadTuple;
    }, Data_Tuple.fst, function (_446) {
        return function (_447) {
            return new Data_Tuple.Tuple(_446(_447.value0), _447.value1);
        };
    });
    var comonadEnvEnvT = function (__dict_Comonad_304) {
        return new ComonadEnv(function () {
            return Control_Comonad_Env_Trans.comonadEnvT(__dict_Comonad_304);
        }, function (x) {
            return Data_Tuple.fst(Control_Comonad_Env_Trans.runEnvT(x));
        }, function (f) {
            return function (x) {
                return Control_Comonad_Env_Trans.EnvT.create((function () {
                    var _1267 = Control_Comonad_Env_Trans.runEnvT(x);
                    return new Data_Tuple.Tuple(f(_1267.value0), _1267.value1);
                })());
            };
        });
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var asks = function (__dict_ComonadEnv_305) {
        return function (f) {
            return function (x) {
                return f(ask(__dict_ComonadEnv_305)(x));
            };
        };
    };
    return {
        ComonadEnv: ComonadEnv, 
        ask: ask, 
        asks: asks, 
        comonadEnvEnvT: comonadEnvEnvT, 
        comonadEnvTuple: comonadEnvTuple, 
        local: local
    };
})();
var PS = PS || {};
PS.Control_Comonad_Store = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var Control_Comonad_Store_Trans = PS.Control_Comonad_Store_Trans;
    var Prelude = PS.Prelude;
    var store = function (f) {
        return function (x) {
            return Control_Comonad_Store_Trans.StoreT.create(new Data_Tuple.Tuple(f, x));
        };
    };
    var runStore = function (s) {
        return Data_Tuple.swap(Prelude["<$>"](Data_Tuple.functorTuple)(Data_Identity.runIdentity)(Data_Tuple.swap(Control_Comonad_Store_Trans.runStoreT(s))));
    };
    return {
        runStore: runStore, 
        store: store
    };
})();
var PS = PS || {};
PS.Control_Comonad_Traced = (function () {
    "use strict";
    var Control_Comonad_Traced_Trans = PS.Control_Comonad_Traced_Trans;
    var Data_Identity = PS.Data_Identity;
    var Prelude = PS.Prelude;
    var traced = Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Control_Comonad_Traced_Trans.TracedT.create);
    var runTraced = Prelude[">>>"](Prelude.semigroupoidArr)(Control_Comonad_Traced_Trans.runTracedT)(Data_Identity.runIdentity);
    return {
        runTraced: runTraced, 
        traced: traced
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var writer = function (__dict_Applicative_306) {
        return function (_451) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_306)({
                        state: s, 
                        result: _451.value0, 
                        log: _451.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_307) {
        return function (w) {
            return writer(__dict_Applicative_307)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    var state = function (__dict_Applicative_308) {
        return function (__dict_Monoid_309) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _1273 = f(s);
                        return Prelude.pure(__dict_Applicative_308)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_309)(_1273.value1)(_1273.value0)(Data_Monoid.mempty(__dict_Monoid_309)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Data_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_310) {
        return function (__dict_Monoid_311) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_310)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_311)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_311)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_312) {
        return function (__dict_Monoid_313) {
            return function (s) {
                return state(__dict_Applicative_312)(__dict_Monoid_313)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_314) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_314["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_449) {
                        return Prelude.pure(__dict_Monad_314["__superclass_Prelude.Applicative_0"]())({
                            state: _449.state, 
                            result: _449.result.value0, 
                            log: _449.result.value1(_449.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_315) {
        return function (__dict_Monoid_316) {
            return function (f) {
                return state(__dict_Applicative_315)(__dict_Monoid_316)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Data_Identity.Identity.create)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_317) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_317["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_450) {
                            return Prelude.pure(__dict_Monad_317["__superclass_Prelude.Applicative_0"]())({
                                state: _450.state, 
                                result: new Data_Tuple.Tuple(_450.result, f(_450.log)), 
                                log: _450.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_318) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_318["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_448) {
                        return Prelude.pure(__dict_Monad_318["__superclass_Prelude.Applicative_0"]())({
                            state: _448.state, 
                            result: new Data_Tuple.Tuple(_448.result, _448.log), 
                            log: _448.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_319) {
        return function (__dict_Monoid_320) {
            return function (f) {
                return state(__dict_Applicative_319)(__dict_Monoid_320)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_321) {
        return function (__dict_Monoid_322) {
            return state(__dict_Applicative_321)(__dict_Monoid_322)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Data_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Data_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_323) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_323["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_323["__superclass_Prelude.Applicative_0"]())((function () {
                                var _1290 = {};
                                for (var _1291 in see) {
                                    if (see.hasOwnProperty(_1291)) {
                                        _1290[_1291] = see[_1291];
                                    };
                                };
                                _1290.log = f(see.log);
                                return _1290;
                            })());
                        });
                    };
                };
            };
        };
    };
    var ask = function (__dict_Applicative_324) {
        return function (__dict_Monoid_325) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_324)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_325)(s)(r)(Data_Monoid.mempty(__dict_Monoid_325)));
                };
            };
        };
    };
    return {
        ask: ask, 
        censor: censor, 
        evalRWS: evalRWS, 
        execRWS: execRWS, 
        get: get, 
        gets: gets, 
        listen: listen, 
        listens: listens, 
        local: local, 
        mapRWS: mapRWS, 
        modify: modify, 
        pass: pass, 
        put: put, 
        reader: reader, 
        runRWS: runRWS, 
        rws: rws, 
        state: state, 
        tell: tell, 
        withRWS: withRWS, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    function MonadReader(ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_326) {
        return new MonadReader(Prelude["return"](__dict_Monad_326), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_327) {
        return function (__dict_Monoid_328) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_327["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_328), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_329) {
        return function (__dict_Error_330) {
            return function (__dict_MonadReader_331) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_330))(__dict_Monad_329)(ask(__dict_MonadReader_331)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_331)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_332) {
        return function (__dict_MonadReader_333) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_332)(ask(__dict_MonadReader_333)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_333)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_334) {
        return function (__dict_MonadReader_335) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_334)(ask(__dict_MonadReader_335)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_335)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_336) {
        return function (__dict_Monoid_337) {
            return function (__dict_MonadReader_338) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_337))(__dict_Monad_336)(ask(__dict_MonadReader_338)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_338)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_339) {
        return function (__dict_MonadReader_340) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_339["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_340))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_339))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        ask: ask, 
        local: local, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderFun: monadReaderFun, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderRWST: monadReaderRWST, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderWriterT: monadReaderWriterT, 
        reader: reader
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadState(state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_341) {
        return function (__dict_MonadState_342) {
            return function (s) {
                return state(__dict_MonadState_342)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_343) {
        return function (__dict_Monoid_344) {
            return function (__dict_MonadState_345) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_344))(__dict_Monad_343)(state(__dict_MonadState_345)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_346) {
        return function (__dict_MonadState_347) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_346)(state(__dict_MonadState_347)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_348) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_348))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_349) {
        return function (__dict_MonadState_350) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_349)(state(__dict_MonadState_350)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_351) {
        return function (__dict_Monoid_352) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_351["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_352));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_353) {
        return function (__dict_MonadState_354) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_353)(state(__dict_MonadState_354)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_355) {
        return function (__dict_Error_356) {
            return function (__dict_MonadState_357) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_356))(__dict_Monad_355)(state(__dict_MonadState_357)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_358) {
        return function (__dict_MonadState_359) {
            return function (f) {
                return state(__dict_MonadState_359)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_360) {
        return function (__dict_MonadState_361) {
            return function (f) {
                return state(__dict_MonadState_361)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_362) {
        return function (__dict_MonadState_363) {
            return state(__dict_MonadState_363)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        get: get, 
        gets: gets, 
        modify: modify, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateRWST: monadStateRWST, 
        monadStateReaderT: monadStateReaderT, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateWriterT: monadStateWriterT, 
        put: put, 
        state: state
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Data_Tuple = PS.Data_Tuple;
    function MonadWriter(listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_364) {
        return function (__dict_Monad_365) {
            return function (__dict_MonadWriter_366) {
                return function (w) {
                    return writer(__dict_MonadWriter_366)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_367) {
        return function (__dict_Monad_368) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_368["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_23) {
                    return Prelude["return"](__dict_Monad_368)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_23.value0, _23.value1), _23.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_368["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_24) {
                    return Prelude["return"](__dict_Monad_368)(new Data_Tuple.Tuple(_24.value0.value0, _24.value0.value1(_24.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT.create)(Prelude["return"](__dict_Monad_368)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_369) {
        return function (__dict_Monoid_370) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_369), Control_Monad_RWS.pass(__dict_Monad_369), Control_Monad_RWS.writer(__dict_Monad_369["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_371) {
        return function (__dict_Monad_372) {
            return function (__dict_MonadWriter_373) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_372["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_373)(m))(function (_21) {
                            return Prelude["return"](__dict_Monad_372)(new Data_Tuple.Tuple(_21.value0, f(_21.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_374) {
        return function (__dict_Error_375) {
            return function (__dict_MonadWriter_376) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_374)(listen(__dict_MonadWriter_376)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_374)(pass(__dict_MonadWriter_376)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_375))(__dict_Monad_374)(writer(__dict_MonadWriter_376)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_377) {
        return function (__dict_MonadWriter_378) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_377)(listen(__dict_MonadWriter_378)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_377)(pass(__dict_MonadWriter_378)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_377)(writer(__dict_MonadWriter_378)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_379) {
        return function (__dict_MonadWriter_380) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_380)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_380)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_379)(writer(__dict_MonadWriter_380)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_381) {
        return function (__dict_MonadWriter_382) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_381)(listen(__dict_MonadWriter_382)), Control_Monad_State_Trans.liftPassState(__dict_Monad_381)(pass(__dict_MonadWriter_382)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_381)(writer(__dict_MonadWriter_382)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_383) {
        return function (__dict_Monad_384) {
            return function (__dict_MonadWriter_385) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_385)(Prelude[">>="](__dict_Monad_384["__superclass_Prelude.Bind_1"]())(m)(function (_22) {
                            return Prelude["return"](__dict_Monad_384)(new Data_Tuple.Tuple(_22, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listen: listen, 
        listens: listens, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterRWST: monadWriterRWST, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterWriterT: monadWriterWriterT, 
        pass: pass, 
        tell: tell, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_386) {
        return function (__dict_Monoid_387) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_386)(__dict_Monoid_387);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_386)(__dict_Monoid_387);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_386)(__dict_Monoid_387);
            }, function () {
                return __dict_Monoid_387;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_386)(__dict_Monoid_387);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_388) {
        return function (__dict_Monoid_389) {
            return function (__dict_MonadRWS_390) {
                return function (__dict_MonadReader_391) {
                    return function (__dict_MonadWriter_392) {
                        return function (__dict_MonadState_393) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_388)(__dict_MonadReader_391);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_388)(__dict_MonadState_393);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_388)(__dict_MonadWriter_392);
                            }, function () {
                                return __dict_Monoid_389;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_388);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_394) {
        return function (__dict_Monoid_395) {
            return function (__dict_MonadRWS_396) {
                return function (__dict_MonadReader_397) {
                    return function (__dict_MonadWriter_398) {
                        return function (__dict_MonadState_399) {
                            return function (__dict_Error_400) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_394)(__dict_Error_400)(__dict_MonadReader_397);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_394)(__dict_Error_400)(__dict_MonadState_399);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_394)(__dict_Error_400)(__dict_MonadWriter_398);
                                }, function () {
                                    return __dict_Monoid_395;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_394)(__dict_Error_400);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT, 
        monadRWSRWST: monadRWSRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Prelude = PS.Prelude;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        runReader: runReader, 
        withReader: withReader
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        evalState: evalState, 
        execState: execState, 
        mapState: mapState, 
        runState: runState, 
        withState: withState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Data_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        execWriter: execWriter, 
        mapWriter: mapWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    function Leaf() {

    };
    Leaf.value = new Leaf();
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    var values = function (_461) {
        if (_461 instanceof Leaf) {
            return [  ];
        };
        if (_461 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_461.value0))(Prelude["++"](Data_Array.semigroupArray)([ _461.value2 ])(values(_461.value3)));
        };
        if (_461 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_461.value0))(Prelude["++"](Data_Array.semigroupArray)([ _461.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_461.value3))(Prelude["++"](Data_Array.semigroupArray)([ _461.value5 ])(values(_461.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_459) {
        if (_459 instanceof Leaf) {
            return [  ];
        };
        if (_459 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_459.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_459.value1, _459.value2) ])(toList(_459.value3)));
        };
        if (_459 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_459.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_459.value1, _459.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_459.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_459.value4, _459.value5) ])(toList(_459.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var size = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Array.length)(values);
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_401) {
        return function (__dict_Show_402) {
            return function (_453) {
                if (_453 instanceof Leaf) {
                    return "Leaf";
                };
                if (_453 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_401)(__dict_Show_402)(_453.value0) + (") (" + (Prelude.show(__dict_Show_401)(_453.value1) + (") (" + (Prelude.show(__dict_Show_402)(_453.value2) + (") (" + (showTree(__dict_Show_401)(__dict_Show_402)(_453.value3) + ")")))))));
                };
                if (_453 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_401)(__dict_Show_402)(_453.value0) + (") (" + (Prelude.show(__dict_Show_401)(_453.value1) + (") (" + (Prelude.show(__dict_Show_402)(_453.value2) + (") (" + (showTree(__dict_Show_401)(__dict_Show_402)(_453.value3) + (") (" + (Prelude.show(__dict_Show_401)(_453.value4) + (") (" + (Prelude.show(__dict_Show_402)(_453.value5) + (") (" + (showTree(__dict_Show_401)(__dict_Show_402)(_453.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_403) {
        return function (__dict_Show_404) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_403)(__dict_Show_404)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_405) {
        return function (__copy__455) {
            return function (__copy__456) {
                var __dict_Ord_405 = __copy___dict_Ord_405;
                var _455 = __copy__455;
                var _456 = __copy__456;
                tco: while (true) {
                    if (_456 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_456 instanceof Two && Prelude["=="](__dict_Ord_405["__superclass_Prelude.Eq_0"]())(_455)(_456.value1)) {
                        return new Data_Maybe.Just(_456.value2);
                    };
                    if (_456 instanceof Two && Prelude["<"](__dict_Ord_405)(_455)(_456.value1)) {
                        var __tco___dict_Ord_405 = __dict_Ord_405;
                        var __tco__455 = _455;
                        var __tco__456 = _456.value0;
                        __dict_Ord_405 = __tco___dict_Ord_405;
                        _455 = __tco__455;
                        _456 = __tco__456;
                        continue tco;
                    };
                    if (_456 instanceof Two) {
                        var __tco___dict_Ord_405 = __dict_Ord_405;
                        var __tco__455 = _455;
                        var __tco__456 = _456.value3;
                        __dict_Ord_405 = __tco___dict_Ord_405;
                        _455 = __tco__455;
                        _456 = __tco__456;
                        continue tco;
                    };
                    if (_456 instanceof Three && Prelude["=="](__dict_Ord_405["__superclass_Prelude.Eq_0"]())(_455)(_456.value1)) {
                        return new Data_Maybe.Just(_456.value2);
                    };
                    if (_456 instanceof Three && Prelude["=="](__dict_Ord_405["__superclass_Prelude.Eq_0"]())(_455)(_456.value4)) {
                        return new Data_Maybe.Just(_456.value5);
                    };
                    if (_456 instanceof Three && Prelude["<"](__dict_Ord_405)(_455)(_456.value1)) {
                        var __tco___dict_Ord_405 = __dict_Ord_405;
                        var __tco__455 = _455;
                        var __tco__456 = _456.value0;
                        __dict_Ord_405 = __tco___dict_Ord_405;
                        _455 = __tco__455;
                        _456 = __tco__456;
                        continue tco;
                    };
                    if (_456 instanceof Three && (Prelude["<"](__dict_Ord_405)(_456.value1)(_455) && Prelude["<="](__dict_Ord_405)(_455)(_456.value4))) {
                        var __tco___dict_Ord_405 = __dict_Ord_405;
                        var __tco__455 = _455;
                        var __tco__456 = _456.value3;
                        __dict_Ord_405 = __tco___dict_Ord_405;
                        _455 = __tco__455;
                        _456 = __tco__456;
                        continue tco;
                    };
                    if (_456 instanceof Three) {
                        var __tco___dict_Ord_405 = __dict_Ord_405;
                        var __tco__455 = _455;
                        var __tco__456 = _456.value6;
                        __dict_Ord_405 = __tco___dict_Ord_405;
                        _455 = __tco__455;
                        _456 = __tco__456;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_406) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_406)(k)(m));
            };
        };
    };
    var keys = function (_460) {
        if (_460 instanceof Leaf) {
            return [  ];
        };
        if (_460 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_460.value0))(Prelude["++"](Data_Array.semigroupArray)([ _460.value1 ])(keys(_460.value3)));
        };
        if (_460 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_460.value0))(Prelude["++"](Data_Array.semigroupArray)([ _460.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_460.value3))(Prelude["++"](Data_Array.semigroupArray)([ _460.value4 ])(keys(_460.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_454) {
        if (_454 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = new Prelude.Functor(function (_462) {
        return function (_463) {
            if (_463 instanceof Leaf) {
                return Leaf.value;
            };
            if (_463 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap)(_462)(_463.value0), _463.value1, _462(_463.value2), Prelude["<$>"](functorMap)(_462)(_463.value3));
            };
            if (_463 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap)(_462)(_463.value0), _463.value1, _462(_463.value2), Prelude["<$>"](functorMap)(_462)(_463.value3), _463.value4, _462(_463.value5), Prelude["<$>"](functorMap)(_462)(_463.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
    var map = Prelude["<$>"](functorMap);
    var fromZipper = function (__copy___dict_Ord_407) {
        return function (__copy__457) {
            return function (__copy__458) {
                var __dict_Ord_407 = __copy___dict_Ord_407;
                var _457 = __copy__457;
                var _458 = __copy__458;
                tco: while (true) {
                    if (_457.length === 0) {
                        return _458;
                    };
                    if (_457.length >= 1) {
                        var _1421 = _457.slice(1);
                        if (_457[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_407 = __dict_Ord_407;
                            var __tco__458 = new Two(_458, (_457[0]).value0, (_457[0]).value1, (_457[0]).value2);
                            __dict_Ord_407 = __tco___dict_Ord_407;
                            _457 = _1421;
                            _458 = __tco__458;
                            continue tco;
                        };
                    };
                    if (_457.length >= 1) {
                        var _1426 = _457.slice(1);
                        if (_457[0] instanceof TwoRight) {
                            var __tco___dict_Ord_407 = __dict_Ord_407;
                            var __tco__458 = new Two((_457[0]).value0, (_457[0]).value1, (_457[0]).value2, _458);
                            __dict_Ord_407 = __tco___dict_Ord_407;
                            _457 = _1426;
                            _458 = __tco__458;
                            continue tco;
                        };
                    };
                    if (_457.length >= 1) {
                        var _1434 = _457.slice(1);
                        if (_457[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_407 = __dict_Ord_407;
                            var __tco__458 = new Three(_458, (_457[0]).value0, (_457[0]).value1, (_457[0]).value2, (_457[0]).value3, (_457[0]).value4, (_457[0]).value5);
                            __dict_Ord_407 = __tco___dict_Ord_407;
                            _457 = _1434;
                            _458 = __tco__458;
                            continue tco;
                        };
                    };
                    if (_457.length >= 1) {
                        var _1442 = _457.slice(1);
                        if (_457[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_407 = __dict_Ord_407;
                            var __tco__458 = new Three((_457[0]).value0, (_457[0]).value1, (_457[0]).value2, _458, (_457[0]).value3, (_457[0]).value4, (_457[0]).value5);
                            __dict_Ord_407 = __tco___dict_Ord_407;
                            _457 = _1442;
                            _458 = __tco__458;
                            continue tco;
                        };
                    };
                    if (_457.length >= 1) {
                        var _1450 = _457.slice(1);
                        if (_457[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_407 = __dict_Ord_407;
                            var __tco__458 = new Three((_457[0]).value0, (_457[0]).value1, (_457[0]).value2, (_457[0]).value3, (_457[0]).value4, (_457[0]).value5, _458);
                            __dict_Ord_407 = __tco___dict_Ord_407;
                            _457 = _1450;
                            _458 = __tco__458;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_408) {
        var up = function (__copy___dict_Ord_409) {
            return function (__copy__469) {
                return function (__copy__470) {
                    var __dict_Ord_409 = __copy___dict_Ord_409;
                    var _469 = __copy__469;
                    var _470 = __copy__470;
                    tco: while (true) {
                        if (_469.length === 0) {
                            return new Two(_470.value0, _470.value1, _470.value2, _470.value3);
                        };
                        if (_469.length >= 1) {
                            var _1465 = _469.slice(1);
                            if (_469[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_409)(_1465)(new Three(_470.value0, _470.value1, _470.value2, _470.value3, (_469[0]).value0, (_469[0]).value1, (_469[0]).value2));
                            };
                        };
                        if (_469.length >= 1) {
                            var _1474 = _469.slice(1);
                            if (_469[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_409)(_1474)(new Three((_469[0]).value0, (_469[0]).value1, (_469[0]).value2, _470.value0, _470.value1, _470.value2, _470.value3));
                            };
                        };
                        if (_469.length >= 1) {
                            var _1486 = _469.slice(1);
                            if (_469[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_409 = __dict_Ord_409;
                                var __tco__470 = new KickUp(new Two(_470.value0, _470.value1, _470.value2, _470.value3), (_469[0]).value0, (_469[0]).value1, new Two((_469[0]).value2, (_469[0]).value3, (_469[0]).value4, (_469[0]).value5));
                                __dict_Ord_409 = __tco___dict_Ord_409;
                                _469 = _1486;
                                _470 = __tco__470;
                                continue tco;
                            };
                        };
                        if (_469.length >= 1) {
                            var _1498 = _469.slice(1);
                            if (_469[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_409 = __dict_Ord_409;
                                var __tco__470 = new KickUp(new Two((_469[0]).value0, (_469[0]).value1, (_469[0]).value2, _470.value0), _470.value1, _470.value2, new Two(_470.value3, (_469[0]).value3, (_469[0]).value4, (_469[0]).value5));
                                __dict_Ord_409 = __tco___dict_Ord_409;
                                _469 = _1498;
                                _470 = __tco__470;
                                continue tco;
                            };
                        };
                        if (_469.length >= 1) {
                            var _1510 = _469.slice(1);
                            if (_469[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_409 = __dict_Ord_409;
                                var __tco__470 = new KickUp(new Two((_469[0]).value0, (_469[0]).value1, (_469[0]).value2, (_469[0]).value3), (_469[0]).value4, (_469[0]).value5, new Two(_470.value0, _470.value1, _470.value2, _470.value3));
                                __dict_Ord_409 = __tco___dict_Ord_409;
                                _469 = _1510;
                                _470 = __tco__470;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_410) {
            return function (__copy__465) {
                return function (__copy__466) {
                    return function (__copy__467) {
                        return function (__copy__468) {
                            var __dict_Ord_410 = __copy___dict_Ord_410;
                            var _465 = __copy__465;
                            var _466 = __copy__466;
                            var _467 = __copy__467;
                            var _468 = __copy__468;
                            tco: while (true) {
                                if (_468 instanceof Leaf) {
                                    return up(__dict_Ord_410)(_465)(new KickUp(Leaf.value, _466, _467, Leaf.value));
                                };
                                if (_468 instanceof Two && Prelude["=="](__dict_Ord_410["__superclass_Prelude.Eq_0"]())(_466)(_468.value1)) {
                                    return fromZipper(__dict_Ord_410)(_465)(new Two(_468.value0, _466, _467, _468.value3));
                                };
                                if (_468 instanceof Two && Prelude["<"](__dict_Ord_410)(_466)(_468.value1)) {
                                    var __tco___dict_Ord_410 = __dict_Ord_410;
                                    var __tco__465 = Prelude[":"](new TwoLeft(_468.value1, _468.value2, _468.value3))(_465);
                                    var __tco__466 = _466;
                                    var __tco__467 = _467;
                                    var __tco__468 = _468.value0;
                                    __dict_Ord_410 = __tco___dict_Ord_410;
                                    _465 = __tco__465;
                                    _466 = __tco__466;
                                    _467 = __tco__467;
                                    _468 = __tco__468;
                                    continue tco;
                                };
                                if (_468 instanceof Two) {
                                    var __tco___dict_Ord_410 = __dict_Ord_410;
                                    var __tco__465 = Prelude[":"](new TwoRight(_468.value0, _468.value1, _468.value2))(_465);
                                    var __tco__466 = _466;
                                    var __tco__467 = _467;
                                    var __tco__468 = _468.value3;
                                    __dict_Ord_410 = __tco___dict_Ord_410;
                                    _465 = __tco__465;
                                    _466 = __tco__466;
                                    _467 = __tco__467;
                                    _468 = __tco__468;
                                    continue tco;
                                };
                                if (_468 instanceof Three && Prelude["=="](__dict_Ord_410["__superclass_Prelude.Eq_0"]())(_466)(_468.value1)) {
                                    return fromZipper(__dict_Ord_410)(_465)(new Three(_468.value0, _466, _467, _468.value3, _468.value4, _468.value5, _468.value6));
                                };
                                if (_468 instanceof Three && Prelude["=="](__dict_Ord_410["__superclass_Prelude.Eq_0"]())(_466)(_468.value4)) {
                                    return fromZipper(__dict_Ord_410)(_465)(new Three(_468.value0, _468.value1, _468.value2, _468.value3, _466, _467, _468.value6));
                                };
                                if (_468 instanceof Three && Prelude["<"](__dict_Ord_410)(_466)(_468.value1)) {
                                    var __tco___dict_Ord_410 = __dict_Ord_410;
                                    var __tco__465 = Prelude[":"](new ThreeLeft(_468.value1, _468.value2, _468.value3, _468.value4, _468.value5, _468.value6))(_465);
                                    var __tco__466 = _466;
                                    var __tco__467 = _467;
                                    var __tco__468 = _468.value0;
                                    __dict_Ord_410 = __tco___dict_Ord_410;
                                    _465 = __tco__465;
                                    _466 = __tco__466;
                                    _467 = __tco__467;
                                    _468 = __tco__468;
                                    continue tco;
                                };
                                if (_468 instanceof Three && (Prelude["<"](__dict_Ord_410)(_468.value1)(_466) && Prelude["<="](__dict_Ord_410)(_466)(_468.value4))) {
                                    var __tco___dict_Ord_410 = __dict_Ord_410;
                                    var __tco__465 = Prelude[":"](new ThreeMiddle(_468.value0, _468.value1, _468.value2, _468.value4, _468.value5, _468.value6))(_465);
                                    var __tco__466 = _466;
                                    var __tco__467 = _467;
                                    var __tco__468 = _468.value3;
                                    __dict_Ord_410 = __tco___dict_Ord_410;
                                    _465 = __tco__465;
                                    _466 = __tco__466;
                                    _467 = __tco__467;
                                    _468 = __tco__468;
                                    continue tco;
                                };
                                if (_468 instanceof Three) {
                                    var __tco___dict_Ord_410 = __dict_Ord_410;
                                    var __tco__465 = Prelude[":"](new ThreeRight(_468.value0, _468.value1, _468.value2, _468.value3, _468.value4, _468.value5))(_465);
                                    var __tco__466 = _466;
                                    var __tco__467 = _467;
                                    var __tco__468 = _468.value6;
                                    __dict_Ord_410 = __tco___dict_Ord_410;
                                    _465 = __tco__465;
                                    _466 = __tco__466;
                                    _467 = __tco__467;
                                    _468 = __tco__468;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_408)([  ]);
    };
    var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_411) {
        return function (f) {
            return function (m) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_411)(f)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var eqMap = function (__dict_Eq_412) {
        return function (__dict_Eq_413) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_412)(__dict_Eq_413))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_412)(__dict_Eq_413)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_414) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_452) {
                return insert(__dict_Ord_414)(_452.value0)(_452.value1)(m);
            };
        })(empty);
    };
    var $$delete = function (__dict_Ord_416) {
        var up = function (__copy___dict_Ord_417) {
            return function (__copy__474) {
                return function (__copy__475) {
                    var __dict_Ord_417 = __copy___dict_Ord_417;
                    var _474 = __copy__474;
                    var _475 = __copy__475;
                    tco: while (true) {
                        if (_474.length === 0) {
                            return _475;
                        };
                        if (_474.length >= 1) {
                            var _1571 = _474.slice(1);
                            if (_474[0] instanceof TwoLeft && ((_474[0]).value2 instanceof Leaf && _475 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_417)(_1571)(new Two(Leaf.value, (_474[0]).value0, (_474[0]).value1, Leaf.value));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1576 = _474.slice(1);
                            if (_474[0] instanceof TwoRight && ((_474[0]).value0 instanceof Leaf && _475 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_417)(_1576)(new Two(Leaf.value, (_474[0]).value1, (_474[0]).value2, Leaf.value));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1585 = _474.slice(1);
                            if (_474[0] instanceof TwoLeft && (_474[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_417 = __dict_Ord_417;
                                var __tco__475 = new Three(_475, (_474[0]).value0, (_474[0]).value1, (_474[0]).value2.value0, (_474[0]).value2.value1, (_474[0]).value2.value2, (_474[0]).value2.value3);
                                __dict_Ord_417 = __tco___dict_Ord_417;
                                _474 = _1585;
                                _475 = __tco__475;
                                continue tco;
                            };
                        };
                        if (_474.length >= 1) {
                            var _1594 = _474.slice(1);
                            if (_474[0] instanceof TwoRight && (_474[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_417 = __dict_Ord_417;
                                var __tco__475 = new Three((_474[0]).value0.value0, (_474[0]).value0.value1, (_474[0]).value0.value2, (_474[0]).value0.value3, (_474[0]).value1, (_474[0]).value2, _475);
                                __dict_Ord_417 = __tco___dict_Ord_417;
                                _474 = _1594;
                                _475 = __tco__475;
                                continue tco;
                            };
                        };
                        if (_474.length >= 1) {
                            var _1606 = _474.slice(1);
                            if (_474[0] instanceof TwoLeft && (_474[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1606)(new Two(new Two(_475, (_474[0]).value0, (_474[0]).value1, (_474[0]).value2.value0), (_474[0]).value2.value1, (_474[0]).value2.value2, new Two((_474[0]).value2.value3, (_474[0]).value2.value4, (_474[0]).value2.value5, (_474[0]).value2.value6)));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1618 = _474.slice(1);
                            if (_474[0] instanceof TwoRight && (_474[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1618)(new Two(new Two((_474[0]).value0.value0, (_474[0]).value0.value1, (_474[0]).value0.value2, (_474[0]).value0.value3), (_474[0]).value0.value4, (_474[0]).value0.value5, new Two((_474[0]).value0.value6, (_474[0]).value1, (_474[0]).value2, _475)));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1626 = _474.slice(1);
                            if (_474[0] instanceof ThreeLeft && ((_474[0]).value2 instanceof Leaf && ((_474[0]).value5 instanceof Leaf && _475 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_417)(_1626)(new Three(Leaf.value, (_474[0]).value0, (_474[0]).value1, Leaf.value, (_474[0]).value3, (_474[0]).value4, Leaf.value));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1634 = _474.slice(1);
                            if (_474[0] instanceof ThreeMiddle && ((_474[0]).value0 instanceof Leaf && ((_474[0]).value5 instanceof Leaf && _475 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_417)(_1634)(new Three(Leaf.value, (_474[0]).value1, (_474[0]).value2, Leaf.value, (_474[0]).value3, (_474[0]).value4, Leaf.value));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1642 = _474.slice(1);
                            if (_474[0] instanceof ThreeRight && ((_474[0]).value0 instanceof Leaf && ((_474[0]).value3 instanceof Leaf && _475 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_417)(_1642)(new Three(Leaf.value, (_474[0]).value1, (_474[0]).value2, Leaf.value, (_474[0]).value4, (_474[0]).value5, Leaf.value));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1654 = _474.slice(1);
                            if (_474[0] instanceof ThreeLeft && (_474[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_417)(_1654)(new Two(new Three(_475, (_474[0]).value0, (_474[0]).value1, (_474[0]).value2.value0, (_474[0]).value2.value1, (_474[0]).value2.value2, (_474[0]).value2.value3), (_474[0]).value3, (_474[0]).value4, (_474[0]).value5));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1666 = _474.slice(1);
                            if (_474[0] instanceof ThreeMiddle && (_474[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_417)(_1666)(new Two(new Three((_474[0]).value0.value0, (_474[0]).value0.value1, (_474[0]).value0.value2, (_474[0]).value0.value3, (_474[0]).value1, (_474[0]).value2, _475), (_474[0]).value3, (_474[0]).value4, (_474[0]).value5));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1678 = _474.slice(1);
                            if (_474[0] instanceof ThreeMiddle && (_474[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_417)(_1678)(new Two((_474[0]).value0, (_474[0]).value1, (_474[0]).value2, new Three(_475, (_474[0]).value3, (_474[0]).value4, (_474[0]).value5.value0, (_474[0]).value5.value1, (_474[0]).value5.value2, (_474[0]).value5.value3)));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1690 = _474.slice(1);
                            if (_474[0] instanceof ThreeRight && (_474[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_417)(_1690)(new Two((_474[0]).value0, (_474[0]).value1, (_474[0]).value2, new Three((_474[0]).value3.value0, (_474[0]).value3.value1, (_474[0]).value3.value2, (_474[0]).value3.value3, (_474[0]).value4, (_474[0]).value5, _475)));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1705 = _474.slice(1);
                            if (_474[0] instanceof ThreeLeft && (_474[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1705)(new Three(new Two(_475, (_474[0]).value0, (_474[0]).value1, (_474[0]).value2.value0), (_474[0]).value2.value1, (_474[0]).value2.value2, new Two((_474[0]).value2.value3, (_474[0]).value2.value4, (_474[0]).value2.value5, (_474[0]).value2.value6), (_474[0]).value3, (_474[0]).value4, (_474[0]).value5));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1720 = _474.slice(1);
                            if (_474[0] instanceof ThreeMiddle && (_474[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1720)(new Three(new Two((_474[0]).value0.value0, (_474[0]).value0.value1, (_474[0]).value0.value2, (_474[0]).value0.value3), (_474[0]).value0.value4, (_474[0]).value0.value5, new Two((_474[0]).value0.value6, (_474[0]).value1, (_474[0]).value2, _475), (_474[0]).value3, (_474[0]).value4, (_474[0]).value5));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1735 = _474.slice(1);
                            if (_474[0] instanceof ThreeMiddle && (_474[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1735)(new Three((_474[0]).value0, (_474[0]).value1, (_474[0]).value2, new Two(_475, (_474[0]).value3, (_474[0]).value4, (_474[0]).value5.value0), (_474[0]).value5.value1, (_474[0]).value5.value2, new Two((_474[0]).value5.value3, (_474[0]).value5.value4, (_474[0]).value5.value5, (_474[0]).value5.value6)));
                            };
                        };
                        if (_474.length >= 1) {
                            var _1750 = _474.slice(1);
                            if (_474[0] instanceof ThreeRight && (_474[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_417)(_1750)(new Three((_474[0]).value0, (_474[0]).value1, (_474[0]).value2, new Two((_474[0]).value3.value0, (_474[0]).value3.value1, (_474[0]).value3.value2, (_474[0]).value3.value3), (_474[0]).value3.value4, (_474[0]).value3.value5, new Two((_474[0]).value3.value6, (_474[0]).value4, (_474[0]).value5, _475)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_418) {
            return function (__copy__477) {
                return function (__copy__478) {
                    var __dict_Ord_418 = __copy___dict_Ord_418;
                    var _477 = __copy__477;
                    var _478 = __copy__478;
                    tco: while (true) {
                        if (_478 instanceof Two && (_478.value0 instanceof Leaf && _478.value3 instanceof Leaf)) {
                            return up(__dict_Ord_418)(_477)(Leaf.value);
                        };
                        if (_478 instanceof Two) {
                            var __tco___dict_Ord_418 = __dict_Ord_418;
                            var __tco__477 = Prelude[":"](new TwoRight(_478.value0, _478.value1, _478.value2))(_477);
                            var __tco__478 = _478.value3;
                            __dict_Ord_418 = __tco___dict_Ord_418;
                            _477 = __tco__477;
                            _478 = __tco__478;
                            continue tco;
                        };
                        if (_478 instanceof Three && (_478.value0 instanceof Leaf && (_478.value3 instanceof Leaf && _478.value6 instanceof Leaf))) {
                            return up(__dict_Ord_418)(Prelude[":"](new TwoRight(Leaf.value, _478.value1, _478.value2))(_477))(Leaf.value);
                        };
                        if (_478 instanceof Three) {
                            var __tco___dict_Ord_418 = __dict_Ord_418;
                            var __tco__477 = Prelude[":"](new ThreeRight(_478.value0, _478.value1, _478.value2, _478.value3, _478.value4, _478.value5))(_477);
                            var __tco__478 = _478.value6;
                            __dict_Ord_418 = __tco___dict_Ord_418;
                            _477 = __tco__477;
                            _478 = __tco__478;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_419) {
            return function (__copy__476) {
                var __dict_Ord_419 = __copy___dict_Ord_419;
                var _476 = __copy__476;
                tco: while (true) {
                    if (_476 instanceof Two && _476.value3 instanceof Leaf) {
                        return {
                            key: _476.value1, 
                            value: _476.value2
                        };
                    };
                    if (_476 instanceof Two) {
                        var __tco___dict_Ord_419 = __dict_Ord_419;
                        var __tco__476 = _476.value3;
                        __dict_Ord_419 = __tco___dict_Ord_419;
                        _476 = __tco__476;
                        continue tco;
                    };
                    if (_476 instanceof Three && _476.value6 instanceof Leaf) {
                        return {
                            key: _476.value4, 
                            value: _476.value5
                        };
                    };
                    if (_476 instanceof Three) {
                        var __tco___dict_Ord_419 = __dict_Ord_419;
                        var __tco__476 = _476.value6;
                        __dict_Ord_419 = __tco___dict_Ord_419;
                        _476 = __tco__476;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_420) {
            return function (__copy__471) {
                return function (__copy__472) {
                    return function (__copy__473) {
                        var __dict_Ord_420 = __copy___dict_Ord_420;
                        var _471 = __copy__471;
                        var _472 = __copy__472;
                        var _473 = __copy__473;
                        tco: while (true) {
                            if (_473 instanceof Leaf) {
                                return fromZipper(__dict_Ord_420)(_471)(Leaf.value);
                            };
                            if (_473 instanceof Two && (_473.value0 instanceof Leaf && (_473.value3 instanceof Leaf && Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value1)))) {
                                return up(__dict_Ord_420)(_471)(Leaf.value);
                            };
                            if (_473 instanceof Two) {
                                if (Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value1)) {
                                    var max = maxNode(__dict_Ord_420)(_473.value0);
                                    return removeMaxNode(__dict_Ord_420)(Prelude[":"](new TwoLeft(max.key, max.value, _473.value3))(_471))(_473.value0);
                                };
                                if (Prelude["<"](__dict_Ord_420)(_472)(_473.value1)) {
                                    var __tco___dict_Ord_420 = __dict_Ord_420;
                                    var __tco__471 = Prelude[":"](new TwoLeft(_473.value1, _473.value2, _473.value3))(_471);
                                    var __tco__472 = _472;
                                    var __tco__473 = _473.value0;
                                    __dict_Ord_420 = __tco___dict_Ord_420;
                                    _471 = __tco__471;
                                    _472 = __tco__472;
                                    _473 = __tco__473;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_420 = __dict_Ord_420;
                                    var __tco__471 = Prelude[":"](new TwoRight(_473.value0, _473.value1, _473.value2))(_471);
                                    var __tco__472 = _472;
                                    var __tco__473 = _473.value3;
                                    __dict_Ord_420 = __tco___dict_Ord_420;
                                    _471 = __tco__471;
                                    _472 = __tco__472;
                                    _473 = __tco__473;
                                    continue tco;
                                };
                            };
                            if (_473 instanceof Three && (_473.value0 instanceof Leaf && (_473.value3 instanceof Leaf && _473.value6 instanceof Leaf))) {
                                if (Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value1)) {
                                    return fromZipper(__dict_Ord_420)(_471)(new Two(Leaf.value, _473.value4, _473.value5, Leaf.value));
                                };
                                if (Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value4)) {
                                    return fromZipper(__dict_Ord_420)(_471)(new Two(Leaf.value, _473.value1, _473.value2, Leaf.value));
                                };
                            };
                            if (_473 instanceof Three) {
                                if (Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value1)) {
                                    var max = maxNode(__dict_Ord_420)(_473.value0);
                                    return removeMaxNode(__dict_Ord_420)(Prelude[":"](new ThreeLeft(max.key, max.value, _473.value3, _473.value4, _473.value5, _473.value6))(_471))(_473.value0);
                                };
                                if (Prelude["=="](__dict_Ord_420["__superclass_Prelude.Eq_0"]())(_472)(_473.value4)) {
                                    var max = maxNode(__dict_Ord_420)(_473.value3);
                                    return removeMaxNode(__dict_Ord_420)(Prelude[":"](new ThreeMiddle(_473.value0, _473.value1, _473.value2, max.key, max.value, _473.value6))(_471))(_473.value3);
                                };
                                if (Prelude["<"](__dict_Ord_420)(_472)(_473.value1)) {
                                    var __tco___dict_Ord_420 = __dict_Ord_420;
                                    var __tco__471 = Prelude[":"](new ThreeLeft(_473.value1, _473.value2, _473.value3, _473.value4, _473.value5, _473.value6))(_471);
                                    var __tco__472 = _472;
                                    var __tco__473 = _473.value0;
                                    __dict_Ord_420 = __tco___dict_Ord_420;
                                    _471 = __tco__471;
                                    _472 = __tco__472;
                                    _473 = __tco__473;
                                    continue tco;
                                };
                                if (Prelude["<"](__dict_Ord_420)(_473.value1)(_472) && Prelude["<"](__dict_Ord_420)(_472)(_473.value4)) {
                                    var __tco___dict_Ord_420 = __dict_Ord_420;
                                    var __tco__471 = Prelude[":"](new ThreeMiddle(_473.value0, _473.value1, _473.value2, _473.value4, _473.value5, _473.value6))(_471);
                                    var __tco__472 = _472;
                                    var __tco__473 = _473.value3;
                                    __dict_Ord_420 = __tco___dict_Ord_420;
                                    _471 = __tco__471;
                                    _472 = __tco__472;
                                    _473 = __tco__473;
                                    continue tco;
                                };
                                if (Prelude.otherwise) {
                                    var __tco___dict_Ord_420 = __dict_Ord_420;
                                    var __tco__471 = Prelude[":"](new ThreeRight(_473.value0, _473.value1, _473.value2, _473.value3, _473.value4, _473.value5))(_471);
                                    var __tco__472 = _472;
                                    var __tco__473 = _473.value6;
                                    __dict_Ord_420 = __tco___dict_Ord_420;
                                    _471 = __tco__471;
                                    _472 = __tco__472;
                                    _473 = __tco__473;
                                    continue tco;
                                };
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_416)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_464) {
            if (_464 instanceof Leaf) {
                return [ 0 ];
            };
            if (_464 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_464.value0))(allHeights(_464.value3)));
            };
            if (_464 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_464.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_464.value3))(allHeights(_464.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_421) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _1835 = f(lookup(__dict_Ord_421)(k)(m));
                    if (_1835 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_421)(k)(m);
                    };
                    if (_1835 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_421)(k)(_1835.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var unionWith = function (__dict_Ord_422) {
        return function (f) {
            return function (m1) {
                return function (m2) {
                    var go = function (_479) {
                        return function (_480) {
                            return alter(__dict_Ord_422)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Maybe.maybe(_480.value1)(f(_480.value1))))(_480.value0)(_479);
                        };
                    };
                    return Data_Foldable.foldl(Data_Foldable.foldableArray)(go)(m2)(toList(m1));
                };
            };
        };
    };
    var union = function (__dict_Ord_423) {
        return unionWith(__dict_Ord_423)(Prelude["const"]);
    };
    var semigroupMap = function (__dict_Ord_424) {
        return new Prelude.Semigroup(union(__dict_Ord_424));
    };
    var monoidMap = function (__dict_Ord_415) {
        return new Data_Monoid.Monoid(function () {
            return semigroupMap(__dict_Ord_415);
        }, empty);
    };
    var traversableMap = function (__dict_Ord_425) {
        return new Data_Traversable.Traversable(function () {
            return foldableMap;
        }, function () {
            return functorMap;
        }, function (__dict_Applicative_427) {
            return Data_Traversable.traverse(traversableMap(__dict_Ord_425))(__dict_Applicative_427)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_426) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_426["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_426["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_425))(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_426)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_426["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_426)(f))(toList(ms))));
                };
            };
        });
    };
    var unions = function (__dict_Ord_428) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_428))(empty);
    };
    var update = function (__dict_Ord_429) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_429)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        alter: alter, 
        checkValid: checkValid, 
        "delete": $$delete, 
        empty: empty, 
        eqMap: eqMap, 
        foldableMap: foldableMap, 
        fromList: fromList, 
        functorMap: functorMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        monoidMap: monoidMap, 
        semigroupMap: semigroupMap, 
        showMap: showMap, 
        showTree: showTree, 
        singleton: singleton, 
        size: size, 
        toList: toList, 
        traversableMap: traversableMap, 
        union: union, 
        unionWith: unionWith, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Maybe = PS.Data_Maybe;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Array = PS.Data_Array;
    
  function _copy(m) {
    var r = {};
    for (var k in m) {
      r[k] = m[k];
    }
    return r;
  }
  ;
    
  function _copyEff(m) {
    return function() {
      var r = {};
      for (var k in m) {
        r[k] = m[k];
      }
      return r;
    };
  }
  ;
    
  function runST(f) {
    return f;
  }
  ;
    
  function _fmapStrMap(m0, f) {
    var m = {};
    for (var k in m0) {
      m[k] = f(m0[k]);
    }
    return m;
  }
  ;
    
  function _foldM(bind) {
    return function(f) {
      return function(mz) {
        return function(m) {
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            mz = bind(mz)(g(k));
          }
          return mz;
        };
      };
    };
  }
  ;
    
  function _foldSCStrMap(m, z, f, fromMaybe) {
    for (var k in m) {
      var maybeR = f(z)(k)(m[k]);
      var r = fromMaybe(null)(maybeR);
      if (r === null) return z;
      else z = r;
    }
    return z;
  }
  ;
    
  function all(f) {
    return function(m) {
      for (var k in m) {
        if (!f(k)(m[k])) return false;
      }
      return true;
    };
  }
  ;
    var empty = {};;
    
  function size(m) {
    var s = 0;
    for (var k in m) {
      ++s;
    }
    return s;
  }
  ;
    
  function _lookup(no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  }
  ;
    
  function _unsafeDeleteStrMap(m, k) {
     delete m[k];
     return m;
  }
  ;
    
  function _collect(f) {
    return function(m) {
      var r = [];
      for (var k in m) {
        r.push(f(k)(m[k]));
      }
      return r;
    };
  }
  ;
    
  var keys = Object.keys || _collect(function(k) {
    return function() { return k; };
  });
  ;
    var values = _collect(function (_) {
        return function (v) {
            return v;
        };
    });
    var toList = _collect(Data_Tuple.Tuple.create);
    var thawST = _copyEff;
    var showStrMap = function (__dict_Show_430) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_430)))(toList(m));
        });
    };
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var singleton = function (k) {
        return function (v) {
            return pureST(function __do() {
                var _26 = Data_StrMap_ST["new"]();
                Data_StrMap_ST.poke(_26)(k)(v)();
                return _26;
            });
        };
    };
    var mutate = function (f) {
        return function (m) {
            return pureST(function __do() {
                var _25 = thawST(m)();
                f(_25)();
                return _25;
            });
        };
    };
    var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isSubmap = function (__dict_Eq_431) {
        return function (m1) {
            return function (m2) {
                var f = function (k) {
                    return function (v) {
                        return _lookup(false, Prelude["=="](__dict_Eq_431)(v), k, m2);
                    };
                };
                return all(f)(m1);
            };
        };
    };
    var isEmpty = all(function (_) {
        return function (__1) {
            return false;
        };
    });
    var insert = function (k) {
        return function (v) {
            return mutate(function (s) {
                return Data_StrMap_ST.poke(s)(k)(v);
            });
        };
    };
    var functorStrMap = new Prelude.Functor(function (f) {
        return function (m) {
            return _fmapStrMap(m, f);
        };
    });
    var map = Prelude["<$>"](functorStrMap);
    var fromList = function (l) {
        return pureST(function __do() {
            var _27 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_481) {
                return Data_StrMap_ST.poke(_27)(_481.value0)(_481.value1);
            })();
            return _27;
        });
    };
    var freezeST = _copyEff;
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var foldM = function (__dict_Monad_432) {
        return function (f) {
            return function (z) {
                return _foldM(Prelude[">>="](__dict_Monad_432["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_432["__superclass_Prelude.Applicative_0"]())(z));
            };
        };
    };
    var semigroupStrMap = function (__dict_Semigroup_433) {
        return new Prelude.Semigroup(function (m1) {
            return function (m2) {
                return mutate(function (s) {
                    return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                        return function (k) {
                            return function (v2) {
                                return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                    return Prelude["<>"](__dict_Semigroup_433)(v1)(v2);
                                }, k, m2));
                            };
                        };
                    })(s)(m1);
                })(m2);
            };
        });
    };
    var union = function (m) {
        return mutate(function (s) {
            return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
        });
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
    var fold = _foldM(Prelude["#"]);
    var foldMap = function (__dict_Monoid_436) {
        return function (f) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Prelude["<>"](__dict_Monoid_436["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                    };
                };
            })(Data_Monoid.mempty(__dict_Monoid_436));
        };
    };
    var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_437) {
        return function (f) {
            return foldMap(__dict_Monoid_437)(Prelude["const"](f));
        };
    }, function (f) {
        return fold(function (z) {
            return function (_) {
                return f(z);
            };
        });
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var traversableStrMap = new Data_Traversable.Traversable(function () {
        return foldableStrMap;
    }, function () {
        return functorStrMap;
    }, function (__dict_Applicative_435) {
        return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_435)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_434) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_434["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_434["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_434)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_434["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_434)(f))(toList(ms))));
            };
        };
    });
    var eqStrMap = function (__dict_Eq_438) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_438))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_438)(m1)(m2) && isSubmap(__dict_Eq_438)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return mutate(function (s) {
            return Data_StrMap_ST["delete"](s)(k);
        });
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _1847 = f(lookup(k)(m));
                if (_1847 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_1847 instanceof Data_Maybe.Just) {
                    return insert(k)(_1847.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        all: all, 
        alter: alter, 
        "delete": $$delete, 
        empty: empty, 
        eqStrMap: eqStrMap, 
        fold: fold, 
        foldM: foldM, 
        foldMap: foldMap, 
        foldMaybe: foldMaybe, 
        foldableStrMap: foldableStrMap, 
        freezeST: freezeST, 
        fromList: fromList, 
        functorStrMap: functorStrMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        isSubmap: isSubmap, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        runST: runST, 
        semigroupStrMap: semigroupStrMap, 
        showStrMap: showStrMap, 
        singleton: singleton, 
        size: size, 
        thawST: thawST, 
        toList: toList, 
        traversableStrMap: traversableStrMap, 
        union: union, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function unsafeGet(m) {
    return function() {
      return m;
    }
  }
  ;
    return {
        unsafeGet: unsafeGet
    };
})();
var PS = PS || {};
PS.Data_StrMap_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function unsafeIndex(m) {
    return function(k) {
      return m[k];
    };
  }
  ;
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Test_QuickCheck_Gen = (function () {
    "use strict";
    var Math = PS.Math;
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Traversable = PS.Data_Traversable;
    var Debug_Trace = PS.Debug_Trace;
    function Gen(value0) {
        this.value0 = value0;
    };
    Gen.create = function (value0) {
        return new Gen(value0);
    };
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var runGen = function (_482) {
        return _482.value0;
    };
    var stateful = function (f) {
        return new Gen(function (s) {
            return runGen(f(s))(s);
        });
    };
    var sized = function (f) {
        return stateful(function (s) {
            return f(s.size);
        });
    };
    var variant = function (n) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1851 = {};
                    for (var _1852 in s) {
                        if (s.hasOwnProperty(_1852)) {
                            _1851[_1852] = s[_1852];
                        };
                    };
                    _1851.newSeed = n;
                    return _1851;
                })());
            });
        };
    };
    var resize = function (sz) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1853 = {};
                    for (var _1854 in s) {
                        if (s.hasOwnProperty(_1854)) {
                            _1853[_1854] = s[_1854];
                        };
                    };
                    _1853.size = sz;
                    return _1853;
                })());
            });
        };
    };
    var repeatable = function (f) {
        return Gen.create(function (s) {
            return {
                value: function (a) {
                    return (runGen(f(a))(s)).value;
                }, 
                state: s
            };
        });
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var lcgStep = (function () {
        var f = function (s) {
            return {
                value: s.newSeed, 
                state: (function () {
                    var _1855 = {};
                    for (var _1856 in s) {
                        if (s.hasOwnProperty(_1856)) {
                            _1855[_1856] = s[_1856];
                        };
                    };
                    _1855.newSeed = lcgNext(s.newSeed);
                    return _1855;
                })()
            };
        };
        return new Gen(f);
    })();
    var perturbGen = function (_483) {
        return function (_484) {
            return Gen.create(function (s) {
                return _484.value0((function () {
                    var _1859 = {};
                    for (var _1860 in s) {
                        if (s.hasOwnProperty(_1860)) {
                            _1859[_1860] = s[_1860];
                        };
                    };
                    _1859.newSeed = lcgNext(float32ToInt32(_483)) + s.newSeed;
                    return _1859;
                })());
            });
        };
    };
    var functorGen = new Prelude.Functor(function (_488) {
        return function (_489) {
            return Gen.create(function (s) {
                var _1864 = _489.value0(s);
                return {
                    value: _488(_1864.value), 
                    state: _1864.state
                };
            });
        };
    });
    var uniform = Prelude["<$>"](functorGen)(function (n) {
        return n / (1 << 30);
    })(lcgStep);
    var evalGen = function (gen) {
        return function (st) {
            return (runGen(gen)(st)).value;
        };
    };
    var choose = function (a) {
        return function (b) {
            var min = Math.min(a)(b);
            var max = Math.max(a)(b);
            return Prelude["<$>"](functorGen)(Prelude[">>>"](Prelude.semigroupoidArr)(Prelude["*"](Prelude.numNumber)(max - min))(Prelude["+"](Prelude.numNumber)(min)))(uniform);
        };
    };
    var chooseInt = function (a) {
        return function (b) {
            return Prelude["<$>"](functorGen)(Math.floor)(choose(Math.ceil(a))(Math.floor(b) + 0.9999999989999999));
        };
    };
    var applyGen = new Prelude.Apply(function (_490) {
        return function (_491) {
            return Gen.create(function (s) {
                var _1870 = _490.value0(s);
                var _1871 = _491.value0(_1870.state);
                return {
                    value: _1870.value(_1871.value), 
                    state: _1871.state
                };
            });
        };
    }, function () {
        return functorGen;
    });
    var bindGen = new Prelude.Bind(function (_492) {
        return function (_493) {
            return Gen.create(function (s) {
                var _1880 = _492.value0(s);
                return runGen(_493(_1880.value))(_1880.state);
            });
        };
    }, function () {
        return applyGen;
    });
    var frequency = function (x) {
        return function (xs) {
            var xxs = Prelude[":"](x)(xs);
            var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid_Sum.monoidSum)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Sum.Sum.create)(Data_Tuple.fst))(xxs)));
            var pick = function (_485) {
                return function (_486) {
                    return function (_487) {
                        if (_487.length === 0) {
                            return _486;
                        };
                        if (_487.length >= 1) {
                            var _1890 = _487.slice(1);
                            return _485 <= (_487[0]).value0 ? (_487[0]).value1 : pick(_485 - (_487[0]).value0)(_486)(_1890);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return Prelude[">>="](bindGen)(chooseInt(1)(total))(function (_29) {
                return pick(_29)(Data_Tuple.snd(x))(xxs);
            });
        };
    };
    var oneOf = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_28) {
                return _28 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_28 - 1));
            });
        };
    };
    var applicativeGen = new Prelude.Applicative(function () {
        return applyGen;
    }, function (a) {
        return new Gen(function (s) {
            return {
                value: a, 
                state: s
            };
        });
    });
    var elements = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_34) {
                return Prelude.pure(applicativeGen)(_34 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_34 - 1)));
            });
        };
    };
    var monadGen = new Prelude.Monad(function () {
        return applicativeGen;
    }, function () {
        return bindGen;
    });
    var vectorOf = function (k) {
        return function (g) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(applicativeGen)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](g))(Data_Array.range(1)(k)));
        };
    };
    var arrayOf = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_30) {
                return vectorOf(_30)(g);
            });
        });
    };
    var arrayOf1 = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_33) {
                return Prelude[">>="](bindGen)(g)(function (_32) {
                    return Prelude[">>="](bindGen)(vectorOf(_33 - 1)(g))(function (_31) {
                        return Prelude["return"](monadGen)(new Data_Tuple.Tuple(_32, _31));
                    });
                });
            });
        });
    };
    var sample = function (sz) {
        return function (g) {
            return evalGen(vectorOf(sz)(g))({
                newSeed: 0, 
                size: sz
            });
        };
    };
    var showSample$prime = function (__dict_Show_439) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_439))(sample(n)(g));
            };
        };
    };
    var showSample = function (__dict_Show_440) {
        return showSample$prime(__dict_Show_440)(10);
    };
    return {
        applicativeGen: applicativeGen, 
        applyGen: applyGen, 
        arrayOf: arrayOf, 
        arrayOf1: arrayOf1, 
        bindGen: bindGen, 
        choose: choose, 
        chooseInt: chooseInt, 
        elements: elements, 
        evalGen: evalGen, 
        frequency: frequency, 
        functorGen: functorGen, 
        monadGen: monadGen, 
        oneOf: oneOf, 
        perturbGen: perturbGen, 
        repeatable: repeatable, 
        resize: resize, 
        runGen: runGen, 
        showSample: showSample, 
        "showSample'": showSample$prime, 
        sized: sized, 
        stateful: stateful, 
        uniform: uniform, 
        variant: variant, 
        vectorOf: vectorOf
    };
})();
var PS = PS || {};
PS.Test_QuickCheck = (function () {
    "use strict";
    var Data_Char = PS.Data_Char;
    var Prelude = PS.Prelude;
    var Test_QuickCheck_Gen = PS.Test_QuickCheck_Gen;
    var Data_String = PS.Data_String;
    var Math = PS.Math;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    var Data_Array = PS.Data_Array;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    function Success() {

    };
    Success.value = new Success();
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    var AlphaNumString = {
        create: function (value) {
            return value;
        }
    };
    function Arbitrary(arbitrary) {
        this.arbitrary = arbitrary;
    };
    function CoArbitrary(coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    function Testable(test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_494) {
        return function (_495) {
            if (_494) {
                return Success.value;
            };
            if (!_494) {
                return new Failed(_495);
            };
            throw new Error("Failed pattern match");
        };
    };
    var testableResult = new Testable(Prelude["return"](Test_QuickCheck_Gen.monadGen));
    var testableBoolean = new Testable(function (_503) {
        if (_503) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Success.value);
        };
        if (!_503) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(new Failed("Test returned false"));
        };
        throw new Error("Failed pattern match");
    });
    var test = function (dict) {
        return dict.test;
    };
    var showResult = new Prelude.Show(function (_496) {
        if (_496 instanceof Success) {
            return "Success";
        };
        if (_496 instanceof Failed) {
            return "Failed: " + _496.value0;
        };
        throw new Error("Failed pattern match");
    });
    var quickCheckPure = function (__dict_Testable_441) {
        return function (s) {
            var quickCheckPure$prime = function (st) {
                return function (n) {
                    return function (prop) {
                        var go = function (_504) {
                            if (_504 <= 0) {
                                return Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]);
                            };
                            return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(test(__dict_Testable_441)(prop))(function (_45) {
                                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(go(_504 - 1))(function (_44) {
                                    return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_45)(_44));
                                });
                            });
                        };
                        return Test_QuickCheck_Gen.evalGen(go(n))(st);
                    };
                };
            };
            return quickCheckPure$prime({
                newSeed: s, 
                size: 10
            });
        };
    };
    var quickCheck$prime = function (__dict_Testable_442) {
        return function (n) {
            return function (prop) {
                var throwOnFirstFailure = function (__copy__505) {
                    return function (__copy__506) {
                        var _505 = __copy__505;
                        var _506 = __copy__506;
                        tco: while (true) {
                            if (_506.length === 0) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                            };
                            if (_506.length >= 1) {
                                var _1910 = _506.slice(1);
                                if (_506[0] instanceof Failed) {
                                    return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber)(_505) + (" failed: \n" + (_506[0]).value0))));
                                };
                            };
                            if (_506.length >= 1) {
                                var _1912 = _506.slice(1);
                                var __tco__505 = _505 + 1;
                                _505 = __tco__505;
                                _506 = _1912;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                var countSuccesses = function (_507) {
                    if (_507.length === 0) {
                        return 0;
                    };
                    if (_507.length >= 1) {
                        var _1915 = _507.slice(1);
                        if (_507[0] instanceof Success) {
                            return 1 + countSuccesses(_1915);
                        };
                    };
                    if (_507.length >= 1) {
                        var _1917 = _507.slice(1);
                        return countSuccesses(_1917);
                    };
                    throw new Error("Failed pattern match");
                };
                return function __do() {
                    var _46 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = quickCheckPure(__dict_Testable_442)(_46)(n)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber)(successes) + ("/" + (Prelude.show(Prelude.showNumber)(n) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck = function (__dict_Testable_443) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_443)(100)(prop);
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_444) {
        return function (__dict_CoArbitrary_445) {
            return new CoArbitrary(function (_499) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(coarbitrary(__dict_CoArbitrary_444)(_499.value0))(coarbitrary(__dict_CoArbitrary_445)(_499.value1));
            });
        };
    };
    var coarbNumber = new CoArbitrary(Test_QuickCheck_Gen.perturbGen);
    var coarbMaybe = function (__dict_CoArbitrary_446) {
        return new CoArbitrary(function (_501) {
            if (_501 instanceof Data_Maybe.Nothing) {
                return Test_QuickCheck_Gen.perturbGen(1);
            };
            if (_501 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_446)(_501.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_447) {
        return function (__dict_CoArbitrary_448) {
            return new CoArbitrary(function (_500) {
                if (_500 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_447)(_500.value0);
                };
                if (_500 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_448)(_500.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbChar = new CoArbitrary(function (c) {
        return coarbitrary(coarbNumber)(Data_Char.toCharCode(c));
    });
    var coarbBoolean = new CoArbitrary(function (_497) {
        if (_497) {
            return Test_QuickCheck_Gen.perturbGen(1);
        };
        if (!_497) {
            return Test_QuickCheck_Gen.perturbGen(2);
        };
        throw new Error("Failed pattern match");
    });
    var coarbArray = function (__dict_CoArbitrary_449) {
        return new CoArbitrary(function (_502) {
            if (_502.length === 0) {
                return Prelude.id(Prelude.categoryArr);
            };
            if (_502.length >= 1) {
                var _1930 = _502.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr)(coarbitrary(coarbArray(__dict_CoArbitrary_449))(_1930))(coarbitrary(__dict_CoArbitrary_449)(_502[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = new CoArbitrary(function (s) {
        return coarbitrary(coarbArray(coarbMaybe(coarbNumber)))(Prelude["<$>"](Data_Array.functorArray)(Data_String.charCodeAt(0))(Data_String.split("")(s)));
    });
    var coarbAlphaNumString = new CoArbitrary(function (_498) {
        return coarbitrary(coarbString)(_498);
    });
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_452) {
        return function (__dict_Testable_453) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_452))(function (_43) {
                    return test(__dict_Testable_453)(f(_43));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_454) {
        return function (__dict_Arbitrary_455) {
            return new Arbitrary(Prelude["<*>"](Test_QuickCheck_Gen.applyGen)(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_454)))(arbitrary(__dict_Arbitrary_455)));
        };
    };
    var arbNumber = new Arbitrary(Test_QuickCheck_Gen.uniform);
    var arbFunction = function (__dict_CoArbitrary_457) {
        return function (__dict_Arbitrary_458) {
            return new Arbitrary(Test_QuickCheck_Gen.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_457)(a)(arbitrary(__dict_Arbitrary_458));
            }));
        };
    };
    var arbChar = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["*"](Prelude.numNumber)(65535)))(Test_QuickCheck_Gen.uniform));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Gen.uniform)(function (_35) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)((_35 * 2) < 1);
    }));
    var arbEither = function (__dict_Arbitrary_459) {
        return function (__dict_Arbitrary_460) {
            return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_37) {
                return _37 ? Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_459)) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_460));
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_456) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_38) {
            return _38 ? Prelude.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Maybe.Nothing.value) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_456));
        }));
    };
    var arbArray = function (__dict_Arbitrary_461) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_42) {
            return _42 ? Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]) : Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_461))(function (_41) {
    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_461)))(function (_40) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_41)(_40));
    });
});
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    var coarbFunction = function (__dict_Arbitrary_450) {
        return function (__dict_CoArbitrary_451) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_450)))(function (_39) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_451))(Data_Array.map(f)(_39))(gen);
                    });
                };
            });
        };
    };
    var arbAlphaNumString = new Arbitrary((function () {
        var lookup = function (x) {
            var index = Math.round(x * (Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1));
            return Data_String_Unsafe.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
        };
        return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(arbNumber)))(function (_36) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude["<<<"](Prelude.semigroupoidArr)(AlphaNumString.create)(Data_String.fromCharArray)(Prelude["<$>"](Data_Array.functorArray)(lookup)(_36)));
        });
    })());
    return {
        "<?>": $less$qmark$greater, 
        AlphaNumString: AlphaNumString, 
        Arbitrary: Arbitrary, 
        CoArbitrary: CoArbitrary, 
        Failed: Failed, 
        Success: Success, 
        Testable: Testable, 
        arbAlphaNumString: arbAlphaNumString, 
        arbArray: arbArray, 
        arbBoolean: arbBoolean, 
        arbChar: arbChar, 
        arbEither: arbEither, 
        arbFunction: arbFunction, 
        arbMaybe: arbMaybe, 
        arbNumber: arbNumber, 
        arbString: arbString, 
        arbTuple: arbTuple, 
        arbitrary: arbitrary, 
        coarbAlphaNumString: coarbAlphaNumString, 
        coarbArray: coarbArray, 
        coarbBoolean: coarbBoolean, 
        coarbChar: coarbChar, 
        coarbEither: coarbEither, 
        coarbFunction: coarbFunction, 
        coarbMaybe: coarbMaybe, 
        coarbNumber: coarbNumber, 
        coarbString: coarbString, 
        coarbTuple: coarbTuple, 
        coarbitrary: coarbitrary, 
        quickCheck: quickCheck, 
        "quickCheck'": quickCheck$prime, 
        quickCheckPure: quickCheckPure, 
        showResult: showResult, 
        test: test, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction, 
        testableResult: testableResult
    };
})();
var PS = PS || {};
PS.VirtualDOM_VTree_Typed = (function () {
    "use strict";
    var Data_StrMap = PS.Data_StrMap;
    var Data_Array = PS.Data_Array;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var VirtualDOM_VTree = PS.VirtualDOM_VTree;
    var Data_Foreign = PS.Data_Foreign;
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    function CssProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    CssProperty.create = function (value0) {
        return function (value1) {
            return new CssProperty(value0, value1);
        };
    };
    function StringAttribute(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    StringAttribute.create = function (value0) {
        return function (value1) {
            return new StringAttribute(value0, value1);
        };
    };
    function ToggleAttribute(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ToggleAttribute.create = function (value0) {
        return function (value1) {
            return new ToggleAttribute(value0, value1);
        };
    };
    function HandlerAttribute(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HandlerAttribute.create = function (value0) {
        return function (value1) {
            return new HandlerAttribute(value0, value1);
        };
    };
    
  var vnode$prime = (function() {
    var VNode = require('vtree/vnode');
    return function (name, props, children, key, ns) {
      return new VNode(name, props, children, key, ns);
    };
  }());
  ;
    var unsafeNull = null;;
    
  function handlerWrapper(handler) {
    return function(event) {
      handler(event)();
    };
  }
  ;
    var vtext = VirtualDOM_VTree.vtext;
    var unsafeCoerce = function (x) {
        return Data_Foreign.unsafeFromForeign(Data_Foreign.toForeign(x));
    };
    var toggle = ToggleAttribute.create;
    var handler = function (name) {
        return function (handler_1) {
            return new HandlerAttribute(name, unsafeCoerce(handler_1));
        };
    };
    var css = CssProperty.create;
    var attrValue = function (_510) {
        if (_510 instanceof StringAttribute) {
            return Data_Foreign.toForeign(_510.value1);
        };
        if (_510 instanceof ToggleAttribute) {
            var cssPropertiesToRecord = function (ps) {
                return unsafeCoerce(Data_StrMap.fromList(Data_Array.map(function (_508) {
                    return new Data_Tuple.Tuple(_508.value0, _508.value1);
                })(ps)));
            };
            return Data_Foreign.toForeign(_510.value1);
        };
        if (_510 instanceof HandlerAttribute) {
            return handlerWrapper(_510.value1);
        };
        throw new Error("Failed pattern match");
    };
    var attrName = function (_509) {
        if (_509 instanceof StringAttribute) {
            return _509.value0;
        };
        if (_509 instanceof ToggleAttribute) {
            return _509.value0;
        };
        if (_509 instanceof HandlerAttribute) {
            return _509.value0;
        };
        throw new Error("Failed pattern match");
    };
    var vnode = function (tagName) {
        return function (attrs) {
            return function (children) {
                return function (key) {
                    return function (ns) {
                        var attrToTuple = function (a) {
                            return new Data_Tuple.Tuple(attrName(a), attrValue(a));
                        };
                        var attrsToRecord = function (attrs_1) {
                            return unsafeCoerce(Data_StrMap.fromList(Data_Array.map(attrToTuple)(attrs_1)));
                        };
                        return vnode$prime(tagName, attrsToRecord(attrs), children, Data_Maybe.fromMaybe(unsafeNull)(key), Data_Maybe.fromMaybe(unsafeNull)(ns));
                    };
                };
            };
        };
    };
    var attr = StringAttribute.create;
    return {
        attr: attr, 
        css: css, 
        handler: handler, 
        toggle: toggle, 
        vnode: vnode, 
        vtext: vtext
    };
})();
var PS = PS || {};
PS.Text_Hatter_Runtime_Instances = (function () {
    "use strict";
    var VirtualDOM_VTree_Typed = PS.VirtualDOM_VTree_Typed;
    var Prelude = PS.Prelude;
    var Text_Hatter_Runtime = PS.Text_Hatter_Runtime;
    var stringNodeCoerce = new Text_Hatter_Runtime.Coerce(function (s) {
        return VirtualDOM_VTree_Typed.vtext(s);
    });
    var nodesCoerce = new Text_Hatter_Runtime.Coerce(function (a) {
        return [ a ];
    });
    var attributesCoerce = new Text_Hatter_Runtime.Coerce(function (a) {
        return [ a ];
    });
    return {
        attributesCoerce: attributesCoerce, 
        nodesCoerce: nodesCoerce, 
        stringNodeCoerce: stringNodeCoerce
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Identity = PS.Data_Identity;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    var ParserT = {
        create: function (value) {
            return value;
        }
    };
    var unParserT = function (_511) {
        return _511;
    };
    var showParseError = new Prelude.Show(function (_512) {
        return "ParseError { message: " + (_512.value0.message + " }");
    });
    var runParserT = function (__dict_Monad_462) {
        return function (s) {
            return function (p) {
                return Prelude[">>="](__dict_Monad_462["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_47) {
                    return Prelude["return"](__dict_Monad_462)(_47.result);
                });
            };
        };
    };
    var runParser = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Data_Identity.runIdentity)(runParserT(Data_Identity.monadIdentity)(s));
    };
    var monadTransParserT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_463) {
        return function (m) {
            return ParserT.create(function (s) {
                return Prelude["<$>"](((__dict_Monad_463["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                    return {
                        input: s, 
                        consumed: false, 
                        result: new Data_Either.Right(a)
                    };
                })(m);
            });
        };
    });
    var monadStateParserT = function (__dict_Monad_464) {
        return new Control_Monad_State_Class.MonadState(function (f) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_464)((function () {
                    var _1962 = f(s);
                    return {
                        input: _1962.value1, 
                        consumed: false, 
                        result: new Data_Either.Right(_1962.value0)
                    };
                })());
            });
        });
    };
    var lazy1ParserT = new Control_Lazy.Lazy1(function (f) {
        return ParserT.create(function (s) {
            return unParserT(f(Prelude.unit))(s);
        });
    });
    var functorParserT = function (__dict_Functor_467) {
        return new Prelude.Functor(function (f) {
            return function (p) {
                var f$prime = function (o) {
                    return {
                        input: o.input, 
                        result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                        consumed: o.consumed
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude["<$>"](__dict_Functor_467)(f$prime)(unParserT(p)(s));
                });
            };
        });
    };
    var fail = function (__dict_Monad_468) {
        return function (message) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_468)({
                    input: s, 
                    consumed: false, 
                    result: new Data_Either.Left(new ParseError({
                        message: message
                    }))
                });
            });
        };
    };
    var errorParseError = new Control_Monad_Error.Error(new ParseError({
        message: ""
    }), function (msg) {
        return new ParseError({
            message: msg
        });
    });
    var consume = function (__dict_Monad_470) {
        return ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_470)({
                consumed: true, 
                input: s, 
                result: new Data_Either.Right(Prelude.unit)
            });
        });
    };
    var monadParserT = function (__dict_Monad_466) {
        return new Prelude.Monad(function () {
            return applicativeParserT(__dict_Monad_466);
        }, function () {
            return bindParserT(__dict_Monad_466);
        });
    };
    var bindParserT = function (__dict_Monad_471) {
        return new Prelude.Bind(function (p) {
            return function (f) {
                var updateConsumedFlag = function (c) {
                    return function (o) {
                        return {
                            input: o.input, 
                            consumed: c || o.consumed, 
                            result: o.result
                        };
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_471["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_471)({
                                input: o.input, 
                                result: new Data_Either.Left(o.result.value0), 
                                consumed: o.consumed
                            });
                        };
                        if (o.result instanceof Data_Either.Right) {
                            return Prelude["<$>"](((__dict_Monad_471["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(o.input));
                        };
                        throw new Error("Failed pattern match");
                    });
                });
            };
        }, function () {
            return applyParserT(__dict_Monad_471);
        });
    };
    var applyParserT = function (__dict_Monad_472) {
        return new Prelude.Apply(Prelude.ap(monadParserT(__dict_Monad_472)), function () {
            return functorParserT(((__dict_Monad_472["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeParserT = function (__dict_Monad_473) {
        return new Prelude.Applicative(function () {
            return applyParserT(__dict_Monad_473);
        }, function (a) {
            return ParserT.create(function (s) {
                return Prelude.pure(__dict_Monad_473["__superclass_Prelude.Applicative_0"]())({
                    input: s, 
                    result: new Data_Either.Right(a), 
                    consumed: false
                });
            });
        });
    };
    var altParserT = function (__dict_Monad_475) {
        return new Control_Alt.Alt(function (p1) {
            return function (p2) {
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_475["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left && !o.consumed) {
                            return unParserT(p2)(s);
                        };
                        return Prelude["return"](__dict_Monad_475)(o);
                    });
                });
            };
        }, function () {
            return functorParserT(((__dict_Monad_475["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusParserT = function (__dict_Monad_469) {
        return new Control_Plus.Plus(function () {
            return altParserT(__dict_Monad_469);
        }, fail(__dict_Monad_469)("No alternative"));
    };
    var alternativeParserT = function (__dict_Monad_474) {
        return new Control_Alternative.Alternative(function () {
            return plusParserT(__dict_Monad_474);
        }, function () {
            return applicativeParserT(__dict_Monad_474);
        });
    };
    var monadPlusParserT = function (__dict_Monad_465) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeParserT(__dict_Monad_465);
        }, function () {
            return monadParserT(__dict_Monad_465);
        });
    };
    return {
        ParseError: ParseError, 
        ParserT: ParserT, 
        altParserT: altParserT, 
        alternativeParserT: alternativeParserT, 
        applicativeParserT: applicativeParserT, 
        applyParserT: applyParserT, 
        bindParserT: bindParserT, 
        consume: consume, 
        errorParseError: errorParseError, 
        fail: fail, 
        functorParserT: functorParserT, 
        lazy1ParserT: lazy1ParserT, 
        monadParserT: monadParserT, 
        monadPlusParserT: monadPlusParserT, 
        monadStateParserT: monadStateParserT, 
        monadTransParserT: monadTransParserT, 
        plusParserT: plusParserT, 
        runParser: runParser, 
        runParserT: runParserT, 
        showParseError: showParseError, 
        unParserT: unParserT
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Combinators = (function () {
    "use strict";
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Prelude = PS.Prelude;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Alt = PS.Control_Alt;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Control_Apply = PS.Control_Apply;
    var $less$qmark$greater = function (__dict_Monad_476) {
        return function (p) {
            return function (msg) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_476))(p)(Text_Parsing_Parser.fail(__dict_Monad_476)("Expected " + msg));
            };
        };
    };
    var $$try = function (__dict_Functor_477) {
        return function (p) {
            var try$prime = function (_515) {
                return function (_516) {
                    if (_516.result instanceof Data_Either.Left) {
                        return {
                            input: _515, 
                            result: _516.result, 
                            consumed: false
                        };
                    };
                    return _516;
                };
            };
            return Text_Parsing_Parser.ParserT.create(function (s) {
                return Prelude["<$>"](__dict_Functor_477)(try$prime(s))(Text_Parsing_Parser.unParserT(p)(s));
            });
        };
    };
    var skipMany1 = function (__dict_Monad_478) {
        return function (p) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_478))(p)(function (_62) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_478))(skipMany(__dict_Monad_478)(p))(function (_61) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_478))(Prelude.unit);
                });
            });
        };
    };
    var skipMany = function (__dict_Monad_479) {
        return function (p) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_479))(skipMany1(__dict_Monad_479)(p))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_479))(Prelude.unit));
        };
    };
    var sepEndBy1 = function (__dict_Monad_480) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_480))(p)(function (_52) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_480))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_480))(sep)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_480))(sepEndBy(__dict_Monad_480)(p)(sep))(function (_51) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_480))(Prelude[":"](_52)(_51));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_480))([ _52 ]));
                });
            };
        };
    };
    var sepEndBy = function (__dict_Monad_481) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_481))(sepEndBy1(__dict_Monad_481)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_481))([  ]));
            };
        };
    };
    var sepBy1 = function (__dict_Monad_482) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_482))(p)(function (_50) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_482))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_482))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_482))(sep)(function () {
                        return p;
                    })))(function (_49) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_482))(Prelude[":"](_50)(_49));
                    });
                });
            };
        };
    };
    var sepBy = function (__dict_Monad_483) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_483))(sepBy1(__dict_Monad_483)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_483))([  ]));
            };
        };
    };
    var optional = function (__dict_Monad_484) {
        return function (p) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_484))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_484))(p)(function () {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_484))(Prelude.unit);
            }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_484))(Prelude.unit));
        };
    };
    var option = function (__dict_Monad_485) {
        return function (a) {
            return function (p) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_485))(p)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_485))(a));
            };
        };
    };
    var optionMaybe = function (__dict_Functor_486) {
        return function (__dict_Monad_487) {
            return function (p) {
                return option(__dict_Monad_487)(Data_Maybe.Nothing.value)(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_486))(Data_Maybe.Just.create)(p));
            };
        };
    };
    var notFollowedBy = function (__dict_Monad_488) {
        return function (p) {
            return $$try(((__dict_Monad_488["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_488))(Control_Apply["*>"](Text_Parsing_Parser.applyParserT(__dict_Monad_488))($$try(((__dict_Monad_488["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(p))(Text_Parsing_Parser.fail(__dict_Monad_488)("Negated parser succeeded")))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_488))(Prelude.unit)));
        };
    };
    var manyTill = function (__dict_Monad_489) {
        return function (p) {
            return function (end) {
                var scan = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_489))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_489))(end)(function () {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_489))([  ]);
                }))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_489))(p)(function (_65) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_489))(scan)(function (_64) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_489))(Prelude[":"](_65)(_64));
                    });
                }));
                return scan;
            };
        };
    };
    var many1Till = function (__dict_Monad_490) {
        return function (p) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_490))(p)(function (_67) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_490))(manyTill(__dict_Monad_490)(p)(end))(function (_66) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_490))(Prelude[":"](_67)(_66));
                    });
                });
            };
        };
    };
    var lookAhead = function (__dict_Monad_491) {
        return function (_514) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_491["__superclass_Prelude.Bind_1"]())(_514(s))(function (_63) {
                    return Prelude["return"](__dict_Monad_491)((function () {
                        var _1986 = {};
                        for (var _1987 in _63) {
                            if (_63.hasOwnProperty(_1987)) {
                                _1986[_1987] = _63[_1987];
                            };
                        };
                        _1986.input = s;
                        _1986.consumed = false;
                        return _1986;
                    })());
                });
            };
        };
    };
    var endBy1 = function (__dict_Monad_492) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.some(Text_Parsing_Parser.alternativeParserT(__dict_Monad_492))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_492))(p)(function (_53) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_492))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_492))(_53);
                    });
                }));
            };
        };
    };
    var endBy = function (__dict_Monad_493) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_493))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_493))(p)(function (_54) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_493))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_493))(_54);
                    });
                }));
            };
        };
    };
    var choice = function (__dict_Monad_494) {
        return function (_513) {
            if (_513.length === 0) {
                return Text_Parsing_Parser.fail(__dict_Monad_494)("Nothing to parse");
            };
            if (_513.length === 1) {
                return _513[0];
            };
            if (_513.length >= 1) {
                var _1993 = _513.slice(1);
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_494))(_513[0])(choice(__dict_Monad_494)(_1993));
            };
            throw new Error("Failed pattern match");
        };
    };
    var chainr1$prime = function (__dict_Monad_495) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_495))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_495))(f)(function (_60) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_495))(chainr1(__dict_Monad_495)(p)(f))(function (_59) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_495))(_60(a)(_59));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_495))(a));
                };
            };
        };
    };
    var chainr1 = function (__dict_Monad_496) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_496))(p)(function (_58) {
                    return chainr1$prime(__dict_Monad_496)(p)(f)(_58);
                });
            };
        };
    };
    var chainr = function (__dict_Monad_497) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_497))(chainr1(__dict_Monad_497)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_497))(a));
                };
            };
        };
    };
    var chainl1$prime = function (__dict_Monad_498) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_498))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_498))(f)(function (_57) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_498))(p)(function (_56) {
                            return chainl1$prime(__dict_Monad_498)(p)(f)(_57(a)(_56));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_498))(a));
                };
            };
        };
    };
    var chainl1 = function (__dict_Monad_499) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_499))(p)(function (_55) {
                    return chainl1$prime(__dict_Monad_499)(p)(f)(_55);
                });
            };
        };
    };
    var chainl = function (__dict_Monad_500) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_500))(chainl1(__dict_Monad_500)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_500))(a));
                };
            };
        };
    };
    var between = function (__dict_Monad_501) {
        return function (open) {
            return function (close) {
                return function (p) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_501))(open)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_501))(p)(function (_48) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_501))(close)(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_501))(_48);
                            });
                        });
                    });
                };
            };
        };
    };
    return {
        "<?>": $less$qmark$greater, 
        between: between, 
        chainl: chainl, 
        chainl1: chainl1, 
        "chainl1'": chainl1$prime, 
        chainr: chainr, 
        chainr1: chainr1, 
        "chainr1'": chainr1$prime, 
        choice: choice, 
        endBy: endBy, 
        endBy1: endBy1, 
        lookAhead: lookAhead, 
        many1Till: many1Till, 
        manyTill: manyTill, 
        notFollowedBy: notFollowedBy, 
        option: option, 
        optionMaybe: optionMaybe, 
        optional: optional, 
        sepBy: sepBy, 
        sepBy1: sepBy1, 
        sepEndBy: sepEndBy, 
        sepEndBy1: sepEndBy1, 
        skipMany: skipMany, 
        skipMany1: skipMany1, 
        "try": $$try
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Expr = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Alt = PS.Control_Alt;
    function AssocNone() {

    };
    AssocNone.value = new AssocNone();
    function AssocLeft() {

    };
    AssocLeft.value = new AssocLeft();
    function AssocRight() {

    };
    AssocRight.value = new AssocRight();
    function Infix(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Infix.create = function (value0) {
        return function (value1) {
            return new Infix(value0, value1);
        };
    };
    function Prefix(value0) {
        this.value0 = value0;
    };
    Prefix.create = function (value0) {
        return new Prefix(value0);
    };
    function Postfix(value0) {
        this.value0 = value0;
    };
    Postfix.create = function (value0) {
        return new Postfix(value0);
    };
    var termP = function (__dict_Monad_502) {
        return function (prefixP) {
            return function (term) {
                return function (postfixP) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_502))(prefixP)(function (_77) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_502))(term)(function (_76) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_502))(postfixP)(function (_75) {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_502))(_75(_77(_76)));
                            });
                        });
                    });
                };
            };
        };
    };
    var splitOp = function (_517) {
        return function (_518) {
            if (_517 instanceof Infix && _517.value1 instanceof AssocNone) {
                var _2006 = {};
                for (var _2007 in _518) {
                    if (_518.hasOwnProperty(_2007)) {
                        _2006[_2007] = _518[_2007];
                    };
                };
                _2006.nassoc = Prelude[":"](_517.value0)(_518.nassoc);
                return _2006;
            };
            if (_517 instanceof Infix && _517.value1 instanceof AssocLeft) {
                var _2010 = {};
                for (var _2011 in _518) {
                    if (_518.hasOwnProperty(_2011)) {
                        _2010[_2011] = _518[_2011];
                    };
                };
                _2010.lassoc = Prelude[":"](_517.value0)(_518.lassoc);
                return _2010;
            };
            if (_517 instanceof Infix && _517.value1 instanceof AssocRight) {
                var _2014 = {};
                for (var _2015 in _518) {
                    if (_518.hasOwnProperty(_2015)) {
                        _2014[_2015] = _518[_2015];
                    };
                };
                _2014.rassoc = Prelude[":"](_517.value0)(_518.rassoc);
                return _2014;
            };
            if (_517 instanceof Prefix) {
                var _2018 = {};
                for (var _2019 in _518) {
                    if (_518.hasOwnProperty(_2019)) {
                        _2018[_2019] = _518[_2019];
                    };
                };
                _2018.prefix = Prelude[":"](_517.value0)(_518.prefix);
                return _2018;
            };
            if (_517 instanceof Postfix) {
                var _2021 = {};
                for (var _2022 in _518) {
                    if (_518.hasOwnProperty(_2022)) {
                        _2021[_2022] = _518[_2022];
                    };
                };
                _2021.postfix = Prelude[":"](_517.value0)(_518.postfix);
                return _2021;
            };
            throw new Error("Failed pattern match");
        };
    };
    var rassocP1 = function (__dict_Monad_503) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_503))(rassocP(__dict_Monad_503)(x)(rassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_503))(x));
                        };
                    };
                };
            };
        };
    };
    var rassocP = function (__dict_Monad_504) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_504))(rassocOp)(function (_70) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_504))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_504))(termP(__dict_Monad_504)(prefixP)(term)(postfixP))(function (_68) {
                                    return rassocP1(__dict_Monad_504)(_68)(rassocOp)(prefixP)(term)(postfixP);
                                }))(function (_69) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_504))(_70(x)(_69));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var nassocP = function (__dict_Monad_505) {
        return function (x) {
            return function (nassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_505))(nassocOp)(function (_74) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_505))(termP(__dict_Monad_505)(prefixP)(term)(postfixP))(function (_73) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_505))(_74(x)(_73));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var lassocP1 = function (__dict_Monad_506) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_506))(lassocP(__dict_Monad_506)(x)(lassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_506))(x));
                        };
                    };
                };
            };
        };
    };
    var lassocP = function (__dict_Monad_507) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_507))(lassocOp)(function (_72) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_507))(termP(__dict_Monad_507)(prefixP)(term)(postfixP))(function (_71) {
                                    return lassocP1(__dict_Monad_507)(_72(x)(_71))(lassocOp)(prefixP)(term)(postfixP);
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var buildExprParser = function (__dict_Monad_508) {
        return function (operators) {
            return function (simpleExpr) {
                var makeParser = function (term) {
                    return function (ops) {
                        var accum = Data_Foldable.foldr(Data_Foldable.foldableArray)(splitOp)({
                            rassoc: [  ], 
                            lassoc: [  ], 
                            nassoc: [  ], 
                            prefix: [  ], 
                            postfix: [  ]
                        })(ops);
                        var rassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_508)(accum.rassoc);
                        var lassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_508)(accum.lassoc);
                        var nassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_508)(accum.nassoc);
                        var prefixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_508)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_508)(accum.prefix))("");
                        var postfixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_508)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_508)(accum.postfix))("");
                        var postfixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(postfixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_508))(Prelude.id(Prelude.categoryArr)));
                        var prefixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(prefixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_508))(Prelude.id(Prelude.categoryArr)));
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_508))(termP(__dict_Monad_508)(prefixP)(term)(postfixP))(function (_78) {
                            return Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_508)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(rassocP(__dict_Monad_508)(_78)(rassocOp)(prefixP)(term)(postfixP))(lassocP(__dict_Monad_508)(_78)(lassocOp)(prefixP)(term)(postfixP)))(nassocP(__dict_Monad_508)(_78)(nassocOp)(prefixP)(term)(postfixP)))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_508))(_78)))("operator");
                        });
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(makeParser)(simpleExpr)(operators);
            };
        };
    };
    return {
        AssocLeft: AssocLeft, 
        AssocNone: AssocNone, 
        AssocRight: AssocRight, 
        Infix: Infix, 
        Postfix: Postfix, 
        Prefix: Prefix, 
        buildExprParser: buildExprParser, 
        lassocP: lassocP, 
        lassocP1: lassocP1, 
        nassocP: nassocP, 
        rassocP: rassocP, 
        rassocP1: rassocP1, 
        splitOp: splitOp, 
        termP: termP
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_String = PS.Data_String;
    var Data_Char = PS.Data_Char;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Alternative = PS.Control_Alternative;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Either = PS.Data_Either;
    var Control_Alt = PS.Control_Alt;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var string = function (__dict_Monad_509) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_509)((function () {
                    var _2032 = Data_String.indexOf(s)(s$prime);
                    if (_2032 === 0) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + Prelude.show(Prelude.showString)(s)))
                    };
                })());
            });
        };
    };
    var whiteSpace = function (__dict_Monad_510) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_510))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_510))(Text_Parsing_Parser.lazy1ParserT)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_510))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_510))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_510))(string(__dict_Monad_510)("\n"))(string(__dict_Monad_510)("\r")))(string(__dict_Monad_510)(" ")))(string(__dict_Monad_510)("\t"))))(function (_80) {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_510))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Prelude.id(Prelude.categoryArr))(_80));
        });
    };
    var skipSpaces = function (__dict_Monad_511) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_511))(whiteSpace(__dict_Monad_511))(function () {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_511))(Prelude.unit);
        });
    };
    var eof = function (__dict_Monad_512) {
        return Text_Parsing_Parser.ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_512)((function () {
                if (s === "") {
                    return {
                        consumed: false, 
                        input: s, 
                        result: new Data_Either.Right(Prelude.unit)
                    };
                };
                return {
                    consumed: false, 
                    input: s, 
                    result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected EOF"))
                };
            })());
        });
    };
    var $$char = function (__dict_Monad_513) {
        return Text_Parsing_Parser.ParserT.create(function (s$prime) {
            return Prelude["return"](__dict_Monad_513)((function () {
                var _2035 = Data_String.charAt(0)(s$prime);
                if (_2035 instanceof Data_Maybe.Nothing) {
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Unexpected EOF"))
                    };
                };
                if (_2035 instanceof Data_Maybe.Just) {
                    return {
                        consumed: true, 
                        input: Data_String.drop(1)(s$prime), 
                        result: new Data_Either.Right(Data_Char.charString(_2035.value0))
                    };
                };
                throw new Error("Failed pattern match");
            })());
        });
    };
    var satisfy = function (__dict_Monad_514) {
        return function (f) {
            return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_514["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))($$char(__dict_Monad_514))(function (_79) {
                return f(_79) ? Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_514))(_79) : Text_Parsing_Parser.fail(__dict_Monad_514)("Character did not satisfy predicate");
            }));
        };
    };
    var noneOf = function (__dict_Monad_515) {
        return function (ss) {
            return satisfy(__dict_Monad_515)(Prelude.flip(Data_Foldable.notElem(Prelude.eqString)(Data_Foldable.foldableArray))(ss));
        };
    };
    var oneOf = function (__dict_Monad_516) {
        return function (ss) {
            return satisfy(__dict_Monad_516)(Prelude.flip(Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray))(ss));
        };
    };
    return {
        "char": $$char, 
        eof: eof, 
        noneOf: noneOf, 
        oneOf: oneOf, 
        satisfy: satisfy, 
        skipSpaces: skipSpaces, 
        string: string, 
        whiteSpace: whiteSpace
    };
})();
var PS = PS || {};
PS.Text_Hatter_Parser = (function () {
    "use strict";
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser_String = PS.Text_Parsing_Parser_String;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Data_Array = PS.Data_Array;
    var Data_String = PS.Data_String;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Data_Either = PS.Data_Either;
    var Control_Alt = PS.Control_Alt;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Identity = PS.Data_Identity;
    var HExp = {
        create: function (value) {
            return value;
        }
    };
    function StringLiteral(value0) {
        this.value0 = value0;
    };
    StringLiteral.create = function (value0) {
        return new StringLiteral(value0);
    };
    function StringExp(value0) {
        this.value0 = value0;
    };
    StringExp.create = function (value0) {
        return new StringExp(value0);
    };
    function Attr(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Attr.create = function (value0) {
        return function (value1) {
            return new Attr(value0, value1);
        };
    };
    function Toggle(value0) {
        this.value0 = value0;
    };
    Toggle.create = function (value0) {
        return new Toggle(value0);
    };
    function AttributesExp(value0) {
        this.value0 = value0;
    };
    AttributesExp.create = function (value0) {
        return new AttributesExp(value0);
    };
    function ElementNode(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ElementNode.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ElementNode(value0, value1, value2);
            };
        };
    };
    function TextNode(value0) {
        this.value0 = value0;
    };
    TextNode.create = function (value0) {
        return new TextNode(value0);
    };
    function RawTextNode(value0) {
        this.value0 = value0;
    };
    RawTextNode.create = function (value0) {
        return new RawTextNode(value0);
    };
    function NodeExp(value0) {
        this.value0 = value0;
    };
    NodeExp.create = function (value0) {
        return new NodeExp(value0);
    };
    var Document = {
        create: function (value) {
            return value;
        }
    };
    function consoleLog(x) { console.log(x); return x };
    var voidElementTags = [ "area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr" ];
    var unify = function (__dict_Functor_517) {
        return function (__dict_Monad_518) {
            return function (parser) {
                return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_517))(function (_) {
                    return Prelude.unit;
                })(parser);
            };
        };
    };
    var unescapeHtml = function (html) {
        return Data_String.replace("&amp;")("&")(Data_String.replace("&lt;")("<")(Data_String.replace("&gt;")(">")(html)));
    };
    var stringi = function (__dict_Monad_519) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_519)((function () {
                    var _2038 = Data_String.toLower(Data_String.take(Data_String.length(s))(s$prime));
                    if (_2038 === Data_String.toLower(s)) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + Prelude.show(Prelude.showString)(s)))
                    };
                })());
            });
        };
    };
    var stringTill = function (__dict_Functor_520) {
        return function (__dict_Monad_521) {
            return function (end) {
                return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_520))(Data_String.joinWith(""))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_521)(Text_Parsing_Parser_String["char"](__dict_Monad_521))(end));
            };
        };
    };
    var someWhiteSpaces = function (__dict_Functor_522) {
        return function (__dict_Monad_523) {
            var space = Text_Parsing_Parser_String.oneOf(__dict_Monad_523)([ "\n", "\r", " ", "\t" ]);
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_523))(space)(function (_100) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_523))(Text_Parsing_Parser_String.whiteSpace(__dict_Monad_523))(function (_99) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_523))(_100 + _99);
                });
            });
        };
    };
    var rawElementTags = [ "script", "style" ];
    var pTextNode = function (__dict_Functor_524) {
        return function (__dict_Monad_525) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_525))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_525))(function () {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_525))(stringTill(__dict_Functor_524)(__dict_Monad_525)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_525)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_525))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_525))(function () {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_525))(unify(__dict_Functor_524)(__dict_Monad_525)(Text_Parsing_Parser_String.string(__dict_Monad_525)("<")))(Text_Parsing_Parser_String.eof(__dict_Monad_525));
                }))))(function (_84) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_525))(TextNode.create(unescapeHtml(_84)));
                });
            });
        };
    };
    var pTagNameOneOf = function (__dict_Monad_526) {
        return function (tags) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_526))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_526))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_526))(Text_Parsing_Parser_Combinators.choice(__dict_Monad_526)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_526))(tags)))(function (_94) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_526))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_526)(end))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_526))(_94);
                        });
                    });
                });
            };
        };
    };
    var pTagName = function (__dict_Monad_527) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_527))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_527))(function () {
                return stringTill(((__dict_Monad_527["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_527)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_527)(end));
            });
        };
    };
    var pHExp = function (__dict_Monad_528) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_528))(Text_Parsing_Parser_String.string(__dict_Monad_528)("<%"))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_528))(stringTill(((__dict_Monad_528["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_528)(Text_Parsing_Parser_String.string(__dict_Monad_528)("%>")))(function (_98) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_528))(_98);
            });
        });
    };
    var pHString = function (__dict_Functor_529) {
        return function (__dict_Monad_530) {
            return function (end) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_530))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_529))(StringExp.create)(pHExp(__dict_Monad_530)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_529))(Prelude["<<<"](Prelude.semigroupoidArr)(StringLiteral.create)(unescapeHtml))(stringTill(__dict_Functor_529)(__dict_Monad_530)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_530)(end))));
            };
        };
    };
    var pHStrings = function (__dict_Monad_531) {
        return function (end) {
            return Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_531)(pHString(((__dict_Monad_531["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_531)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_531)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_531))(unify(((__dict_Monad_531["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_531)(Text_Parsing_Parser_String.string(__dict_Monad_531)("<%")))(unify(((__dict_Monad_531["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_531)(end)))))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_531)(end));
        };
    };
    var pRawTextNode = function (__dict_Functor_532) {
        return function (__dict_Monad_533) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_533))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_533))(function () {
                    return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_532))(RawTextNode.create)(pHStrings(__dict_Monad_533)(end));
                });
            };
        };
    };
    var pSingleQuotedHStrings = function (__dict_Monad_534) {
        var sq = Text_Parsing_Parser_String.string(__dict_Monad_534)("'");
        return Text_Parsing_Parser_Combinators.between(__dict_Monad_534)(sq)(sq)(pHStrings(__dict_Monad_534)(sq));
    };
    var pToggle = function (__dict_Monad_535) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_535))(pHStrings(__dict_Monad_535)(end))(function (_97) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_535))(new Toggle(_97));
            });
        };
    };
    var pNodeExp = function (__dict_Functor_536) {
        return function (__dict_Monad_537) {
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_536))(NodeExp.create)(pHExp(__dict_Monad_537));
        };
    };
    var pEndTag = function (__dict_Monad_538) {
        return function (tag) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_538))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_538))(function () {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_538))(Text_Parsing_Parser_String.string(__dict_Monad_538)(Data_String.joinWith("")([ "</", tag, ">" ])))(function () {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_538))(Prelude.unit);
                });
            });
        };
    };
    var pDoubleQuotedHStrings = function (__dict_Monad_539) {
        var dq = Text_Parsing_Parser_String.string(__dict_Monad_539)("\"");
        return Text_Parsing_Parser_Combinators.between(__dict_Monad_539)(dq)(dq)(pHStrings(__dict_Monad_539)(dq));
    };
    var pAttributesExp = function (__dict_Functor_540) {
        return function (__dict_Monad_541) {
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_540))(AttributesExp.create)(pHExp(__dict_Monad_541));
        };
    };
    var pAttributesEnd = function (__dict_Monad_542) {
        return Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_542)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_542))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_542))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_542))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_542))(Text_Parsing_Parser_String.string(__dict_Monad_542)(">"))(Text_Parsing_Parser_String.string(__dict_Monad_542)("/>")))(function () {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_542))(Prelude.unit);
            });
        }));
    };
    var pAttributeValue = function (__dict_Monad_543) {
        return function (end) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_543))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_543))(pDoubleQuotedHStrings(__dict_Monad_543))(pSingleQuotedHStrings(__dict_Monad_543)))(pHStrings(__dict_Monad_543)(end));
        };
    };
    var pAttributeName = function (__dict_Monad_544) {
        return function (end) {
            return pHStrings(__dict_Monad_544)(end);
        };
    };
    var pAttr = function (__dict_Monad_545) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_545))(pHStrings(__dict_Monad_545)(Text_Parsing_Parser_String.string(__dict_Monad_545)("=")))(function (_96) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_545))(Text_Parsing_Parser_String.string(__dict_Monad_545)("="))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_545))(pAttributeValue(__dict_Monad_545)(end))(function (_95) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_545))(new Attr(_96, _95));
                    });
                });
            });
        };
    };
    var pAttribute = function (__dict_Monad_546) {
        return function (attrsEnd) {
            var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_546))(unify(((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_546)(Text_Parsing_Parser_String.string(__dict_Monad_546)(" ")))(unify(((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_546)(attrsEnd));
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_546))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_546))(function () {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_546))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_546))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pAttributesExp(((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_546)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_546["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pAttr(__dict_Monad_546)(end))))(pToggle(__dict_Monad_546)(end));
            });
        };
    };
    var pAttributes = function (__dict_Monad_547) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_547))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_547))(function () {
                return Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_547)(pAttribute(__dict_Monad_547)(end))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_547)(end));
            });
        };
    };
    var pStartTag = function (__dict_Monad_548) {
        return function (pTagName_1) {
            return function (allowSlash) {
                var end = allowSlash ? Text_Parsing_Parser_Combinators.choice(__dict_Monad_548)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_548))([ ">", "/>" ])) : Text_Parsing_Parser_String.string(__dict_Monad_548)(">");
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_548))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(Text_Parsing_Parser_String.string(__dict_Monad_548)("<"))(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(pTagName_1)(function (_93) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(pAttributes(__dict_Monad_548)(end))(function (_92) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_548))(function () {
                                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_548))(end)(function () {
                                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_548))(new Data_Tuple.Tuple(_93, _92));
                                    });
                                });
                            });
                        });
                    });
                });
            };
        };
    };
    var pRawElement = function (__dict_Monad_549) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_549))(someWhiteSpaces(((__dict_Monad_549["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_549))(Text_Parsing_Parser_String.string(__dict_Monad_549)(">"));
        var pStartTagRaw = pStartTag(__dict_Monad_549)(pTagNameOneOf(__dict_Monad_549)(rawElementTags)(end))(false);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_549))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(pStartTagRaw)(function (_87) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_549))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_549)(pRawTextNode(((__dict_Monad_549["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_549)(pEndTag(__dict_Monad_549)(_87.value0)))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_549)(pEndTag(__dict_Monad_549)(_87.value0))))(function (_86) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_549))(pEndTag(__dict_Monad_549)(_87.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_549))(new ElementNode(_87.value0, _87.value1, _86));
                        });
                    });
                });
            });
        });
    };
    var pVoidElement = function (__dict_Monad_550) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_550))(someWhiteSpaces(((__dict_Monad_550["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_550))(Text_Parsing_Parser_Combinators.choice(__dict_Monad_550)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_550))([ ">", "/>" ])));
        var pStartTagVoid = pStartTag(__dict_Monad_550)(pTagNameOneOf(__dict_Monad_550)(voidElementTags)(end))(true);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_550))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_550))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_550))(pStartTagVoid)(function (_85) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_550))(new ElementNode(_85.value0, _85.value1, [  ]));
            });
        });
    };
    var line = function (__dict_Monad_551) {
        return stringTill(((__dict_Monad_551["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_551)(Text_Parsing_Parser_String.string(__dict_Monad_551)("\n"));
    };
    var escapableRawElementTags = [ "textarea", "title" ];
    var pEscapableRawElement = function (__dict_Monad_552) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_552))(someWhiteSpaces(((__dict_Monad_552["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_552))(Text_Parsing_Parser_String.string(__dict_Monad_552)(">"));
        var pStartTagEscapableRaw = pStartTag(__dict_Monad_552)(pTagNameOneOf(__dict_Monad_552)(escapableRawElementTags)(end))(false);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_552))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_552))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_552))(pStartTagEscapableRaw)(function (_89) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_552))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_552))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_552))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_552)(pRawTextNode(((__dict_Monad_552["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_552)(pEndTag(__dict_Monad_552)(_89.value0)))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_552)(pEndTag(__dict_Monad_552)(_89.value0))))(function (_88) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_552))(pEndTag(__dict_Monad_552)(_89.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_552))(new ElementNode(_89.value0, _89.value1, _88));
                        });
                    });
                });
            });
        });
    };
    var pNormalElement = function (__dict_Monad_553) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_553))(someWhiteSpaces(((__dict_Monad_553["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_553))(Text_Parsing_Parser_String.string(__dict_Monad_553)(">"));
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_553))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_553))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_553))(pStartTag(__dict_Monad_553)(pTagName(__dict_Monad_553)(end))(false))(function (_91) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_553))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_553))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_553))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_553)(pNode(__dict_Monad_553))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_553)(pEndTag(__dict_Monad_553)(_91.value0))))(function (_90) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_553))(pEndTag(__dict_Monad_553)(_91.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_553))(new ElementNode(_91.value0, _91.value1, _90));
                        });
                    });
                });
            });
        });
    };
    var pNode = function (__dict_Monad_554) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_554))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_554))(function (_) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_554))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_554))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_554["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pNodeExp(((__dict_Monad_554["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_554)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_554["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pElementNode(__dict_Monad_554))))(pTextNode(((__dict_Monad_554["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_554));
        });
    };
    var pElementNode = function (__dict_Monad_555) {
        return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_555))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_555))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_555))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_555["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pVoidElement(__dict_Monad_555)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_555["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pRawElement(__dict_Monad_555))))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_555["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pEscapableRawElement(__dict_Monad_555))))(pNormalElement(__dict_Monad_555));
    };
    var pDocument = function (__dict_Monad_556) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_556))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(line(__dict_Monad_556))(function (_83) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_556))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(line(__dict_Monad_556))(function (_82) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(pNode(__dict_Monad_556))(function (_81) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_556))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_556))(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_556))({
                                    typeAnnotation: _83, 
                                    args: _82, 
                                    body: _81
                                });
                            });
                        });
                    });
                });
            });
        });
    };
    var parse = function (input) {
        return Text_Parsing_Parser.runParser(input)(pDocument(Data_Identity.monadIdentity));
    };
    var eqHExp = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqHExp)(a)(a$prime);
        };
    }, function (_525) {
        return function (_526) {
            return _525 === _526;
        };
    });
    var eqHString = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqHString)(a)(a$prime);
        };
    }, function (_527) {
        return function (_528) {
            if (_527 instanceof StringLiteral && _528 instanceof StringLiteral) {
                return _527.value0 === _528.value0;
            };
            if (_527 instanceof StringExp && _528 instanceof StringExp) {
                return Prelude["=="](eqHExp)(_527.value0)(_528.value0);
            };
            return false;
        };
    });
    var eqAttribute = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqAttribute)(a)(a$prime);
        };
    }, function (_523) {
        return function (_524) {
            if (_523 instanceof Attr && _524 instanceof Attr) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_523.value0)(_524.value0) && Prelude["=="](Prelude.eqArray(eqHString))(_523.value1)(_524.value1);
            };
            if (_523 instanceof Toggle && _524 instanceof Toggle) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_523.value0)(_524.value0);
            };
            if (_523 instanceof AttributesExp && _524 instanceof AttributesExp) {
                return Prelude["=="](eqHExp)(_523.value0)(_524.value0);
            };
            return false;
        };
    });
    var eqNode = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqNode)(a)(a$prime);
        };
    }, function (_521) {
        return function (_522) {
            if (_521 instanceof ElementNode && _522 instanceof ElementNode) {
                return _521.value0 === _522.value0 && (Prelude["=="](Prelude.eqArray(eqAttribute))(_521.value1)(_522.value1) && Prelude["=="](Prelude.eqArray(eqNode))(_521.value2)(_522.value2));
            };
            if (_521 instanceof TextNode && _522 instanceof TextNode) {
                return _521.value0 === _522.value0;
            };
            if (_521 instanceof RawTextNode && _522 instanceof RawTextNode) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_521.value0)(_522.value0);
            };
            if (_521 instanceof NodeExp && _522 instanceof NodeExp) {
                return Prelude["=="](eqHExp)(_521.value0)(_522.value0);
            };
            return false;
        };
    });
    var eqDocument = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqDocument)(a)(a$prime);
        };
    }, function (_519) {
        return function (_520) {
            return _519.typeAnnotation === _520.typeAnnotation && (_519.args === _520.args && Prelude["=="](eqNode)(_519.body)(_520.body));
        };
    });
    return {
        Attr: Attr, 
        AttributesExp: AttributesExp, 
        Document: Document, 
        ElementNode: ElementNode, 
        HExp: HExp, 
        NodeExp: NodeExp, 
        RawTextNode: RawTextNode, 
        StringExp: StringExp, 
        StringLiteral: StringLiteral, 
        TextNode: TextNode, 
        Toggle: Toggle, 
        eqAttribute: eqAttribute, 
        eqDocument: eqDocument, 
        eqHExp: eqHExp, 
        eqHString: eqHString, 
        eqNode: eqNode, 
        parse: parse
    };
})();
var PS = PS || {};
PS.Text_Hatter_Translator = (function () {
    "use strict";
    var Data_Array = PS.Data_Array;
    var Prelude = PS.Prelude;
    var Text_Hatter_Parser = PS.Text_Hatter_Parser;
    var Text_Hatter_PureScript = PS.Text_Hatter_PureScript;
    var translateHString = function (_531) {
        if (_531 instanceof Text_Hatter_Parser.StringLiteral) {
            return new Text_Hatter_PureScript.StringLitE(_531.value0);
        };
        if (_531 instanceof Text_Hatter_Parser.StringExp) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("Text.Hatter.Runtime.coerce"))(new Text_Hatter_PureScript.RawE(_531.value0));
        };
        throw new Error("Failed pattern match");
    };
    var translateHStrings = function (xs) {
        return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("Data.String.joinWith"), new Text_Hatter_PureScript.StringLitE("")), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateHString)(xs)));
    };
    var translateAttribute = function (_530) {
        if (_530 instanceof Text_Hatter_Parser.Attr) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.Typed.attr"), translateHStrings(_530.value0)), translateHStrings(_530.value1));
        };
        if (_530 instanceof Text_Hatter_Parser.Toggle) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.Typed.toggle"), translateHStrings(_530.value0)), new Text_Hatter_PureScript.VarE("true"));
        };
        if (_530 instanceof Text_Hatter_Parser.AttributesExp) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("Text.Hatter.Runtime.coerce"), new Text_Hatter_PureScript.RawE(_530.value0));
        };
        throw new Error("Failed pattern match");
    };
    var translateNode = function (_529) {
        if (_529 instanceof Text_Hatter_Parser.ElementNode) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.Typed.vnode"), new Text_Hatter_PureScript.StringLitE(_529.value0)), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateAttribute)(_529.value1))), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateNode)(_529.value2))), new Text_Hatter_PureScript.VarE("Data.Maybe.Nothing")), new Text_Hatter_PureScript.VarE("Data.Maybe.Nothing"));
        };
        if (_529 instanceof Text_Hatter_Parser.TextNode) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.Typed.vtext"))(new Text_Hatter_PureScript.StringLitE(_529.value0));
        };
        if (_529 instanceof Text_Hatter_Parser.RawTextNode) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.Typed.vtext"))(translateHStrings(_529.value0));
        };
        if (_529 instanceof Text_Hatter_Parser.NodeExp) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("Text.Hatter.Runtime.coerce"))(new Text_Hatter_PureScript.RawE(_529.value0));
        };
        throw new Error("Failed pattern match");
    };
    var requireModules = [ "VirtualDOM.VTree ()", "VirtualDOM.VTree.Typed ()", "Text.Hatter.Runtime ()", "Data.String ()" ];
    return {
        requireModules: requireModules, 
        translateNode: translateNode
    };
})();
var PS = PS || {};
PS.Text_Hatter = (function () {
    "use strict";
    var Text_Hatter_Translator = PS.Text_Hatter_Translator;
    var Prelude = PS.Prelude;
    var Text_Hatter_Parser = PS.Text_Hatter_Parser;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    var Text_Hatter_PureScript = PS.Text_Hatter_PureScript;
    var Data_Either = PS.Data_Either;
    var hatter = function (moduleName) {
        return function (imports) {
            return function (input) {
                var is = Prelude["++"](Data_Array.semigroupArray)(imports)(Text_Hatter_Translator.requireModules);
                return Prelude[">>="](Data_Either.bindEither)(Text_Hatter_Parser.parse(input))(function (_101) {
                    return Prelude["return"](Data_Either.monadEither)(Data_String.joinWith("")(Prelude["++"](Data_Array.semigroupArray)([ "module ", moduleName, " where \n" ])(Prelude["++"](Data_Array.semigroupArray)(Data_Array.map(function (i) {
                        return "import " + (i + "\n");
                    })(is))([ _101.typeAnnotation, "\n", _101.args, Text_Hatter_PureScript.toCode(Text_Hatter_Translator.translateNode(_101.body)) ]))));
                });
            };
        };
    };
    return {
        hatter: hatter
    };
})();
var PS = PS || {};
PS.Index = (function () {
    "use strict";
    var Text_Hatter = PS.Text_Hatter;
    var Prelude = PS.Prelude;
    function exportModule(x) { return function() { module.exports = x; };  };
    var main = exportModule(Text_Hatter.hatter);
    return {
        exportModule: exportModule, 
        main: main
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Token = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
PS.Index.main();

