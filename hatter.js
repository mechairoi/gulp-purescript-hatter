// Generated by psc version 0.6.0.2
var PS = PS || {};
PS.Prelude = (function () {
    "use strict";
    var Unit = {
        create: function (value) {
            return value;
        }
    };
    function LT() {

    };
    LT.value = new LT();
    function GT() {

    };
    GT.value = new GT();
    function EQ() {

    };
    EQ.value = new EQ();
    function Semigroupoid($less$less$less) {
        this["<<<"] = $less$less$less;
    };
    function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
        this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
        this.id = id;
    };
    function Show(show) {
        this.show = show;
    };
    function Functor($less$dollar$greater) {
        this["<$>"] = $less$dollar$greater;
    };
    function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
        this["<*>"] = $less$times$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    function Applicative(__superclass_Prelude$dotApply_0, pure) {
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
        this.pure = pure;
    };
    function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
        this[">>="] = $greater$greater$eq;
        this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    };
    function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
        this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
    };
    function Num($percent, $times, $plus, $minus, $div, negate) {
        this["%"] = $percent;
        this["*"] = $times;
        this["+"] = $plus;
        this["-"] = $minus;
        this["/"] = $div;
        this.negate = negate;
    };
    function Eq($div$eq, $eq$eq) {
        this["/="] = $div$eq;
        this["=="] = $eq$eq;
    };
    function Ord(__superclass_Prelude$dotEq_0, compare) {
        this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
        this.compare = compare;
    };
    function Bits($amp, $up, complement, shl, shr, zshr, $bar) {
        this["&"] = $amp;
        this["^"] = $up;
        this.complement = complement;
        this.shl = shl;
        this.shr = shr;
        this.zshr = zshr;
        this["|"] = $bar;
    };
    function BoolLike($amp$amp, not, $bar$bar) {
        this["&&"] = $amp$amp;
        this.not = not;
        this["||"] = $bar$bar;
    };
    function Semigroup($less$greater) {
        this["<>"] = $less$greater;
    };
    function cons(e) {  return function(l) {    return [e].concat(l);  };};
    function showStringImpl(s) {  return JSON.stringify(s);};
    function showNumberImpl(n) {  return n.toString();};
    function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
    function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
    function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
    function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
    function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
    function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
    function numNegate(n) {  return -n;};
    function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
    function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
    function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
    function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
    function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
    function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
    function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
    function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
    function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
    function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
    function numComplement(n) {  return ~n;};
    function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
    function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
    function boolNot(b) {  return !b;};
    function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
    var $bar$bar = function (dict) {
        return dict["||"];
    };
    var $bar = function (dict) {
        return dict["|"];
    };
    var $up = function (dict) {
        return dict["^"];
    };
    var $greater$greater$eq = function (dict) {
        return dict[">>="];
    };
    var $eq$eq = function (dict) {
        return dict["=="];
    };
    var $less$greater = function (dict) {
        return dict["<>"];
    };
    var $less$less$less = function (dict) {
        return dict["<<<"];
    };
    var $greater$greater$greater = function (__dict_Semigroupoid_0) {
        return function (f) {
            return function (g) {
                return $less$less$less(__dict_Semigroupoid_0)(g)(f);
            };
        };
    };
    var $less$times$greater = function (dict) {
        return dict["<*>"];
    };
    var $less$dollar$greater = function (dict) {
        return dict["<$>"];
    };
    var $colon = cons;
    var $div$eq = function (dict) {
        return dict["/="];
    };
    var $div = function (dict) {
        return dict["/"];
    };
    var $minus = function (dict) {
        return dict["-"];
    };
    var $plus$plus = function (__dict_Semigroup_1) {
        return $less$greater(__dict_Semigroup_1);
    };
    var $plus = function (dict) {
        return dict["+"];
    };
    var $times = function (dict) {
        return dict["*"];
    };
    var $amp$amp = function (dict) {
        return dict["&&"];
    };
    var $amp = function (dict) {
        return dict["&"];
    };
    var $percent = function (dict) {
        return dict["%"];
    };
    var $dollar = function (f) {
        return function (x) {
            return f(x);
        };
    };
    var $hash = function (x) {
        return function (f) {
            return f(x);
        };
    };
    var zshr = function (dict) {
        return dict.zshr;
    };
    var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
    var unit = {};
    var shr = function (dict) {
        return dict.shr;
    };
    var showUnit = new Show(function (_106) {
        return "Unit {}";
    });
    var showString = new Show(showStringImpl);
    var showOrdering = new Show(function (_114) {
        if (_114 instanceof LT) {
            return "LT";
        };
        if (_114 instanceof GT) {
            return "GT";
        };
        if (_114 instanceof EQ) {
            return "EQ";
        };
        throw new Error("Failed pattern match");
    });
    var showNumber = new Show(showNumberImpl);
    var showBoolean = new Show(function (_107) {
        if (_107) {
            return "true";
        };
        if (!_107) {
            return "false";
        };
        throw new Error("Failed pattern match");
    });
    var show = function (dict) {
        return dict.show;
    };
    var showArray = function (__dict_Show_2) {
        return new Show(showArrayImpl(show(__dict_Show_2)));
    };
    var shl = function (dict) {
        return dict.shl;
    };
    var semigroupoidArr = new Semigroupoid(function (f) {
        return function (g) {
            return function (x) {
                return f(g(x));
            };
        };
    });
    var semigroupUnit = new Semigroup(function (_121) {
        return function (_122) {
            return {};
        };
    });
    var semigroupString = new Semigroup(concatString);
    var semigroupArr = function (__dict_Semigroup_3) {
        return new Semigroup(function (f) {
            return function (g) {
                return function (x) {
                    return $less$greater(__dict_Semigroup_3)(f(x))(g(x));
                };
            };
        });
    };
    var pure = function (dict) {
        return dict.pure;
    };
    var $$return = function (__dict_Monad_4) {
        return pure(__dict_Monad_4["__superclass_Prelude.Applicative_0"]());
    };
    var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
    var not = function (dict) {
        return dict.not;
    };
    var negate = function (dict) {
        return dict.negate;
    };
    var liftM1 = function (__dict_Monad_5) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_5["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                    return $$return(__dict_Monad_5)(f(_0));
                });
            };
        };
    };
    var liftA1 = function (__dict_Applicative_6) {
        return function (f) {
            return function (a) {
                return $less$times$greater(__dict_Applicative_6["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_6)(f))(a);
            };
        };
    };
    var id = function (dict) {
        return dict.id;
    };
    var functorArr = new Functor($less$less$less(semigroupoidArr));
    var flip = function (f) {
        return function (b) {
            return function (a) {
                return f(a)(b);
            };
        };
    };
    var eqUnit = new Eq(function (_110) {
        return function (_111) {
            return false;
        };
    }, function (_108) {
        return function (_109) {
            return true;
        };
    });
    var ordUnit = new Ord(function () {
        return eqUnit;
    }, function (_115) {
        return function (_116) {
            return EQ.value;
        };
    });
    var eqString = new Eq(refIneq, refEq);
    var ordString = new Ord(function () {
        return eqString;
    }, unsafeCompare);
    var eqNumber = new Eq(refIneq, refEq);
    var ordNumber = new Ord(function () {
        return eqNumber;
    }, unsafeCompare);
    var eqBoolean = new Eq(refIneq, refEq);
    var ordBoolean = new Ord(function () {
        return eqBoolean;
    }, function (_117) {
        return function (_118) {
            if (!_117 && !_118) {
                return EQ.value;
            };
            if (!_117 && _118) {
                return LT.value;
            };
            if (_117 && _118) {
                return EQ.value;
            };
            if (_117 && !_118) {
                return GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
    var $$const = function (_102) {
        return function (_103) {
            return _102;
        };
    };
    var $$void = function (__dict_Functor_8) {
        return function (fa) {
            return $less$dollar$greater(__dict_Functor_8)($$const(unit))(fa);
        };
    };
    var complement = function (dict) {
        return dict.complement;
    };
    var compare = function (dict) {
        return dict.compare;
    };
    var $less = function (__dict_Ord_10) {
        return function (a1) {
            return function (a2) {
                var _503 = compare(__dict_Ord_10)(a1)(a2);
                if (_503 instanceof LT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $less$eq = function (__dict_Ord_11) {
        return function (a1) {
            return function (a2) {
                var _504 = compare(__dict_Ord_11)(a1)(a2);
                if (_504 instanceof GT) {
                    return false;
                };
                return true;
            };
        };
    };
    var $greater = function (__dict_Ord_12) {
        return function (a1) {
            return function (a2) {
                var _505 = compare(__dict_Ord_12)(a1)(a2);
                if (_505 instanceof GT) {
                    return true;
                };
                return false;
            };
        };
    };
    var $greater$eq = function (__dict_Ord_13) {
        return function (a1) {
            return function (a2) {
                var _506 = compare(__dict_Ord_13)(a1)(a2);
                if (_506 instanceof LT) {
                    return false;
                };
                return true;
            };
        };
    };
    var categoryArr = new Category(function () {
        return semigroupoidArr;
    }, function (x) {
        return x;
    });
    var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
    var eqArray = function (__dict_Eq_7) {
        return new Eq(function (xs) {
            return function (ys) {
                return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_7))(xs)(ys));
            };
        }, function (xs) {
            return function (ys) {
                return eqArrayImpl($eq$eq(__dict_Eq_7))(xs)(ys);
            };
        });
    };
    var ordArray = function (__dict_Ord_9) {
        return new Ord(function () {
            return eqArray(__dict_Ord_9["__superclass_Prelude.Eq_0"]());
        }, function (_119) {
            return function (_120) {
                if (_119.length === 0 && _120.length === 0) {
                    return EQ.value;
                };
                if (_119.length === 0) {
                    return LT.value;
                };
                if (_120.length === 0) {
                    return GT.value;
                };
                if (_119.length >= 1) {
                    var _513 = _119.slice(1);
                    if (_120.length >= 1) {
                        var _511 = _120.slice(1);
                        var _509 = compare(__dict_Ord_9)(_119[0])(_120[0]);
                        if (_509 instanceof EQ) {
                            return compare(ordArray(__dict_Ord_9))(_513)(_511);
                        };
                        return _509;
                    };
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var eqOrdering = new Eq(function (x) {
        return function (y) {
            return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
        };
    }, function (_112) {
        return function (_113) {
            if (_112 instanceof LT && _113 instanceof LT) {
                return true;
            };
            if (_112 instanceof GT && _113 instanceof GT) {
                return true;
            };
            if (_112 instanceof EQ && _113 instanceof EQ) {
                return true;
            };
            return false;
        };
    });
    var bitsNumber = new Bits(numAnd, numXor, numComplement, numShl, numShr, numZshr, numOr);
    var asTypeOf = function (_104) {
        return function (_105) {
            return _104;
        };
    };
    var applyArr = new Apply(function (f) {
        return function (g) {
            return function (x) {
                return f(x)(g(x));
            };
        };
    }, function () {
        return functorArr;
    });
    var bindArr = new Bind(function (m) {
        return function (f) {
            return function (x) {
                return f(m(x))(x);
            };
        };
    }, function () {
        return applyArr;
    });
    var applicativeArr = new Applicative(function () {
        return applyArr;
    }, $$const);
    var monadArr = new Monad(function () {
        return applicativeArr;
    }, function () {
        return bindArr;
    });
    var ap = function (__dict_Monad_14) {
        return function (f) {
            return function (a) {
                return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                    return $greater$greater$eq(__dict_Monad_14["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                        return $$return(__dict_Monad_14)(_2(_1));
                    });
                });
            };
        };
    };
    return {
        "#": $hash, 
        "$": $dollar, 
        "%": $percent, 
        "&": $amp, 
        "&&": $amp$amp, 
        "*": $times, 
        "+": $plus, 
        "++": $plus$plus, 
        "-": $minus, 
        "/": $div, 
        "/=": $div$eq, 
        ":": $colon, 
        "<": $less, 
        "<$>": $less$dollar$greater, 
        "<*>": $less$times$greater, 
        "<<<": $less$less$less, 
        "<=": $less$eq, 
        "<>": $less$greater, 
        "==": $eq$eq, 
        ">": $greater, 
        ">=": $greater$eq, 
        ">>=": $greater$greater$eq, 
        ">>>": $greater$greater$greater, 
        Applicative: Applicative, 
        Apply: Apply, 
        Bind: Bind, 
        Bits: Bits, 
        BoolLike: BoolLike, 
        Category: Category, 
        EQ: EQ, 
        Eq: Eq, 
        Functor: Functor, 
        GT: GT, 
        LT: LT, 
        Monad: Monad, 
        Num: Num, 
        Ord: Ord, 
        Semigroup: Semigroup, 
        Semigroupoid: Semigroupoid, 
        Show: Show, 
        Unit: Unit, 
        "^": $up, 
        ap: ap, 
        applicativeArr: applicativeArr, 
        applyArr: applyArr, 
        asTypeOf: asTypeOf, 
        bindArr: bindArr, 
        bitsNumber: bitsNumber, 
        boolLikeBoolean: boolLikeBoolean, 
        categoryArr: categoryArr, 
        compare: compare, 
        complement: complement, 
        cons: cons, 
        "const": $$const, 
        eqArray: eqArray, 
        eqBoolean: eqBoolean, 
        eqNumber: eqNumber, 
        eqOrdering: eqOrdering, 
        eqString: eqString, 
        eqUnit: eqUnit, 
        flip: flip, 
        functorArr: functorArr, 
        id: id, 
        liftA1: liftA1, 
        liftM1: liftM1, 
        monadArr: monadArr, 
        negate: negate, 
        not: not, 
        numNumber: numNumber, 
        ordArray: ordArray, 
        ordBoolean: ordBoolean, 
        ordNumber: ordNumber, 
        ordString: ordString, 
        ordUnit: ordUnit, 
        pure: pure, 
        refEq: refEq, 
        refIneq: refIneq, 
        "return": $$return, 
        semigroupArr: semigroupArr, 
        semigroupString: semigroupString, 
        semigroupUnit: semigroupUnit, 
        semigroupoidArr: semigroupoidArr, 
        shl: shl, 
        show: show, 
        showArray: showArray, 
        showBoolean: showBoolean, 
        showNumber: showNumber, 
        showOrdering: showOrdering, 
        showString: showString, 
        showUnit: showUnit, 
        shr: shr, 
        unit: unit, 
        "void": $$void, 
        zshr: zshr, 
        "|": $bar, 
        "||": $bar$bar
    };
})();
var PS = PS || {};
PS.Prelude_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(xs) {  return function(n) {    return xs[n];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Math = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var abs = Math.abs;;
    var acos = Math.acos;;
    var asin = Math.asin;;
    var atan = Math.atan;;
    function atan2(y){  return function (x) {    return Math.atan2(y, x);  };};
    var ceil = Math.ceil;;
    var cos = Math.cos;;
    var exp = Math.exp;;
    var floor = Math.floor;;
    var log = Math.log;;
    function max(n1){  return function(n2) {    return Math.max(n1, n2);  }};
    function min(n1){  return function(n2) {    return Math.min(n1, n2);  }};
    function pow(n){  return function(p) {    return Math.pow(n, p);  }};
    var round = Math.round;;
    var sin = Math.sin;;
    var sqrt = Math.sqrt;;
    var tan = Math.tan;;
    var e       = Math.E;;
    var ln2     = Math.LN2;;
    var ln10    = Math.LN10;;
    var log2e   = Math.LOG2E;;
    var log10e  = Math.LOG10E;;
    var pi      = Math.PI;;
    var sqrt1_2 = Math.SQRT1_2;;
    var sqrt2   = Math.SQRT2;;
    return {
        abs: abs, 
        acos: acos, 
        asin: asin, 
        atan: atan, 
        atan2: atan2, 
        ceil: ceil, 
        cos: cos, 
        e: e, 
        exp: exp, 
        floor: floor, 
        ln10: ln10, 
        ln2: ln2, 
        log: log, 
        log10e: log10e, 
        log2e: log2e, 
        max: max, 
        min: min, 
        pi: pi, 
        pow: pow, 
        round: round, 
        sin: sin, 
        sqrt: sqrt, 
        sqrt1_2: sqrt1_2, 
        sqrt2: sqrt2, 
        tan: tan
    };
})();
var PS = PS || {};
PS.Data_Function = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function mkFn0(fn) {  return function() {    return fn({});  };};
    function mkFn1(fn) {  return function(a) {    return fn(a);  };};
    function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
    function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
    function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
    function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
    function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
    function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
    function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
    function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
    function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
    function runFn0(fn) {  return fn();};
    function runFn1(fn) {  return function(a) {    return fn(a);  };};
    function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
    function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
    function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
    function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
    function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
    function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
    function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
    function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
    function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
    var on = function (f) {
        return function (g) {
            return function (x) {
                return function (y) {
                    return f(g(x))(g(y));
                };
            };
        };
    };
    return {
        mkFn0: mkFn0, 
        mkFn1: mkFn1, 
        mkFn10: mkFn10, 
        mkFn2: mkFn2, 
        mkFn3: mkFn3, 
        mkFn4: mkFn4, 
        mkFn5: mkFn5, 
        mkFn6: mkFn6, 
        mkFn7: mkFn7, 
        mkFn8: mkFn8, 
        mkFn9: mkFn9, 
        on: on, 
        runFn0: runFn0, 
        runFn1: runFn1, 
        runFn10: runFn10, 
        runFn2: runFn2, 
        runFn3: runFn3, 
        runFn4: runFn4, 
        runFn5: runFn5, 
        runFn6: runFn6, 
        runFn7: runFn7, 
        runFn8: runFn8, 
        runFn9: runFn9
    };
})();
var PS = PS || {};
PS.Data_Eq = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Ref = {
        create: function (value) {
            return value;
        }
    };
    var liftRef = function (_123) {
        return function (_124) {
            return function (_125) {
                return _123(_124)(_125);
            };
        };
    };
    var functorRef = new Prelude.Functor(function (_126) {
        return function (_127) {
            return _126(_127);
        };
    });
    var eqRef = new Prelude.Eq(liftRef(Prelude.refIneq), liftRef(Prelude.refEq));
    return {
        Ref: Ref, 
        eqRef: eqRef, 
        functorRef: functorRef, 
        liftRef: liftRef
    };
})();
var PS = PS || {};
PS.Data_Char = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Char = {
        create: function (value) {
            return value;
        }
    };
    
    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;
    
    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
    var showChar = new Prelude.Show(function (_133) {
        return "Char " + Prelude.show(Prelude.showString)(_133);
    });
    var eqChar = new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqChar)(a)(b);
        };
    }, function (_129) {
        return function (_130) {
            return _129 === _130;
        };
    });
    var ordChar = new Prelude.Ord(function () {
        return eqChar;
    }, function (_131) {
        return function (_132) {
            return Prelude.compare(Prelude.ordString)(_131)(_132);
        };
    });
    var charString = function (_128) {
        return _128;
    };
    return {
        charString: charString, 
        eqChar: eqChar, 
        fromCharCode: fromCharCode, 
        ordChar: ordChar, 
        showChar: showChar, 
        toCharCode: toCharCode
    };
})();
var PS = PS || {};
PS.Data_String_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;
    
    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt
    };
})();
var PS = PS || {};
PS.Control_Monad_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function MonadTrans(lift) {
        this.lift = lift;
    };
    var lift = function (dict) {
        return dict.lift;
    };
    return {
        MonadTrans: MonadTrans, 
        lift: lift
    };
})();
var PS = PS || {};
PS.Control_Monad_Error = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Error(noMsg, strMsg) {
        this.noMsg = noMsg;
        this.strMsg = strMsg;
    };
    var strMsg = function (dict) {
        return dict.strMsg;
    };
    var noMsg = function (dict) {
        return dict.noMsg;
    };
    var errorString = new Error("", Prelude.id(Prelude.categoryArr));
    return {
        Error: Error, 
        errorString: errorString, 
        noMsg: noMsg, 
        strMsg: strMsg
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function returnE(a) {  return function() {    return a;  };};
    function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
    function runPure(f) {  return f();};
    function untilE(f) {  return function() {    while (!f());    return {};  };};
    function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
    function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
    function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
    var monadEff = new Prelude.Monad(function () {
        return applicativeEff;
    }, function () {
        return bindEff;
    });
    var bindEff = new Prelude.Bind(bindE, function () {
        return applyEff;
    });
    var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
        return functorEff;
    });
    var applicativeEff = new Prelude.Applicative(function () {
        return applyEff;
    }, returnE);
    var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
    return {
        applicativeEff: applicativeEff, 
        applyEff: applyEff, 
        bindE: bindE, 
        bindEff: bindEff, 
        forE: forE, 
        foreachE: foreachE, 
        functorEff: functorEff, 
        monadEff: monadEff, 
        returnE: returnE, 
        runPure: runPure, 
        untilE: untilE, 
        whileE: whileE
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Exception = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function showErrorImpl(err) {
    return err.stack || err.toString();
  }
  ;
    
  function error(msg) {
    return new Error(msg);
  }
  ;
    
  function message(e) {
    return e.message;
  }
  ;
    
  function throwException(e) {
    return function() {
      throw e;
    };
  }
  ;
    
  function catchException(c) {
    return function(t) {
      return function() {
        try {
          return t();
        } catch(e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === '[object Error]') {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  }
  ;
    var showError = new Prelude.Show(showErrorImpl);
    return {
        catchException: catchException, 
        error: error, 
        message: message, 
        showError: showError, 
        showErrorImpl: showErrorImpl, 
        throwException: throwException
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Random = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function random() {  return Math.random();};
    return {
        random: random
    };
})();
var PS = PS || {};
PS.Control_Monad_Eff_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeInterleaveEff(f) {  return f;};
    return {
        unsafeInterleaveEff: unsafeInterleaveEff
    };
})();
var PS = PS || {};
PS.Control_Monad_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function newSTRef(val) {  return function() {    return { value: val };  };};
    function readSTRef(ref) {  return function() {    return ref.value;  };};
    function modifySTRef(ref) {  return function(f) {    return function() {      return ref.value = f(ref.value);    };  };};
    function writeSTRef(ref) {  return function(a) {    return function() {      return ref.value = a;    };  };};
    function newSTArray(len) {  return function(a) {    return function() {      var arr = [];      for (var i = 0; i < len; i++) {        arr[i] = a;      };      return arr;    };  };};
    function peekSTArray(arr) {  return function(i) {    return function() {      return arr[i];    };  };};
    function pokeSTArray(arr) {  return function(i) {    return function(a) {      return function() {        return arr[i] = a;      };    };  };};
    function runST(f) {  return f;};
    function runSTArray(f) {  return f;};
    return {
        modifySTRef: modifySTRef, 
        newSTArray: newSTArray, 
        newSTRef: newSTRef, 
        peekSTArray: peekSTArray, 
        pokeSTArray: pokeSTArray, 
        readSTRef: readSTRef, 
        runST: runST, 
        runSTArray: runSTArray, 
        writeSTRef: writeSTRef
    };
})();
var PS = PS || {};
PS.Debug_Trace = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function trace(s) {  return function() {    console.log(s);    return {};  };};
    var print = function (__dict_Show_15) {
        return function (o) {
            return trace(Prelude.show(__dict_Show_15)(o));
        };
    };
    return {
        print: print, 
        trace: trace
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var ContT = {
        create: function (value) {
            return value;
        }
    };
    var runContT = function (_134) {
        return function (_135) {
            return _134(_135);
        };
    };
    var withContT = function (f) {
        return function (m) {
            return function (k) {
                return runContT(m)(f(k));
            };
        };
    };
    var monadTransContT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_16) {
        return function (m) {
            return function (k) {
                return Prelude[">>="](__dict_Monad_16["__superclass_Prelude.Bind_1"]())(m)(k);
            };
        };
    });
    var mapContT = function (f) {
        return function (m) {
            return function (k) {
                return f(runContT(m)(k));
            };
        };
    };
    var functorContT = function (__dict_Monad_18) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (k) {
                    return runContT(m)(function (a) {
                        return k(f(a));
                    });
                };
            };
        });
    };
    var callCC = function (f) {
        return function (k) {
            return runContT(f(function (a) {
                return function (_) {
                    return k(a);
                };
            }))(k);
        };
    };
    var applyContT = function (__dict_Functor_20) {
        return function (__dict_Monad_21) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return function (k) {
                        return runContT(f)(function (g) {
                            return runContT(v)(function (a) {
                                return k(g(a));
                            });
                        });
                    };
                };
            }, function () {
                return functorContT(__dict_Monad_21);
            });
        };
    };
    var bindContT = function (__dict_Monad_19) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (k$prime) {
                    return runContT(m)(function (a) {
                        return runContT(k(a))(k$prime);
                    });
                };
            };
        }, function () {
            return applyContT(((__dict_Monad_19["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_19);
        });
    };
    var applicativeContT = function (__dict_Functor_22) {
        return function (__dict_Monad_23) {
            return new Prelude.Applicative(function () {
                return applyContT(__dict_Functor_22)(__dict_Monad_23);
            }, function (a) {
                return function (k) {
                    return k(a);
                };
            });
        };
    };
    var monadContT = function (__dict_Monad_17) {
        return new Prelude.Monad(function () {
            return applicativeContT(((__dict_Monad_17["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_17);
        }, function () {
            return bindContT(__dict_Monad_17);
        });
    };
    return {
        ContT: ContT, 
        applicativeContT: applicativeContT, 
        applyContT: applyContT, 
        bindContT: bindContT, 
        callCC: callCC, 
        functorContT: functorContT, 
        mapContT: mapContT, 
        monadContT: monadContT, 
        monadTransContT: monadTransContT, 
        runContT: runContT, 
        withContT: withContT
    };
})();
var PS = PS || {};
PS.Control_Monad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var when = function (__dict_Monad_24) {
        return function (_141) {
            return function (_142) {
                if (_141) {
                    return _142;
                };
                if (!_141) {
                    return Prelude["return"](__dict_Monad_24)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var unless = function (__dict_Monad_25) {
        return function (_143) {
            return function (_144) {
                if (!_143) {
                    return _144;
                };
                if (_143) {
                    return Prelude["return"](__dict_Monad_25)(Prelude.unit);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var replicateM = function (__dict_Monad_26) {
        return function (_136) {
            return function (_137) {
                if (_136 === 0) {
                    return Prelude["return"](__dict_Monad_26)([  ]);
                };
                return Prelude[">>="](__dict_Monad_26["__superclass_Prelude.Bind_1"]())(_137)(function (_4) {
                    return Prelude[">>="](__dict_Monad_26["__superclass_Prelude.Bind_1"]())(replicateM(__dict_Monad_26)(_136 - 1)(_137))(function (_3) {
                        return Prelude["return"](__dict_Monad_26)(Prelude[":"](_4)(_3));
                    });
                });
            };
        };
    };
    var foldM = function (__dict_Monad_27) {
        return function (_138) {
            return function (_139) {
                return function (_140) {
                    if (_140.length === 0) {
                        return Prelude["return"](__dict_Monad_27)(_139);
                    };
                    if (_140.length >= 1) {
                        var _545 = _140.slice(1);
                        return Prelude[">>="](__dict_Monad_27["__superclass_Prelude.Bind_1"]())(_138(_139)(_140[0]))(function (a$prime) {
                            return foldM(__dict_Monad_27)(_138)(a$prime)(_545);
                        });
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    return {
        foldM: foldM, 
        replicateM: replicateM, 
        unless: unless, 
        when: when
    };
})();
var PS = PS || {};
PS.Control_Lazy = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Lazy(defer) {
        this.defer = defer;
    };
    function Lazy1(defer1) {
        this.defer1 = defer1;
    };
    function Lazy2(defer2) {
        this.defer2 = defer2;
    };
    var defer2 = function (dict) {
        return dict.defer2;
    };
    var fix2 = function (__dict_Lazy2_28) {
        return function (f) {
            return defer2(__dict_Lazy2_28)(function (_) {
                return f(fix2(__dict_Lazy2_28)(f));
            });
        };
    };
    var defer1 = function (dict) {
        return dict.defer1;
    };
    var fix1 = function (__dict_Lazy1_29) {
        return function (f) {
            return defer1(__dict_Lazy1_29)(function (_) {
                return f(fix1(__dict_Lazy1_29)(f));
            });
        };
    };
    var defer = function (dict) {
        return dict.defer;
    };
    var fix = function (__dict_Lazy_30) {
        return function (f) {
            return defer(__dict_Lazy_30)(function (_) {
                return f(fix(__dict_Lazy_30)(f));
            });
        };
    };
    return {
        Lazy: Lazy, 
        Lazy1: Lazy1, 
        Lazy2: Lazy2, 
        defer: defer, 
        defer1: defer1, 
        defer2: defer2, 
        fix: fix, 
        fix1: fix1, 
        fix2: fix2
    };
})();
var PS = PS || {};
PS.Control_Extend = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
        this["<<="] = $less$less$eq;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$less$eq = function (dict) {
        return dict["<<="];
    };
    var $eq$less$eq = function (__dict_Extend_31) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return f($less$less$eq(__dict_Extend_31)(g)(w));
                };
            };
        };
    };
    var $eq$greater$eq = function (__dict_Extend_32) {
        return function (f) {
            return function (g) {
                return function (w) {
                    return g($less$less$eq(__dict_Extend_32)(f)(w));
                };
            };
        };
    };
    var $eq$greater$greater = function (__dict_Extend_33) {
        return function (w) {
            return function (f) {
                return $less$less$eq(__dict_Extend_33)(f)(w);
            };
        };
    };
    var extendArr = function (__dict_Semigroup_34) {
        return new Extend(function (f) {
            return function (g) {
                return function (w) {
                    return f(function (w$prime) {
                        return g(Prelude["<>"](__dict_Semigroup_34)(w)(w$prime));
                    });
                };
            };
        }, function () {
            return Prelude.functorArr;
        });
    };
    var duplicate = function (__dict_Extend_35) {
        return function (w) {
            return $less$less$eq(__dict_Extend_35)(Prelude.id(Prelude.categoryArr))(w);
        };
    };
    return {
        "<<=": $less$less$eq, 
        "=<=": $eq$less$eq, 
        "=>=": $eq$greater$eq, 
        "=>>": $eq$greater$greater, 
        Extend: Extend, 
        duplicate: duplicate, 
        extendArr: extendArr
    };
})();
var PS = PS || {};
PS.Control_Comonad = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Comonad(__superclass_Control$dotExtend$dotExtend_0, extract) {
        this["__superclass_Control.Extend.Extend_0"] = __superclass_Control$dotExtend$dotExtend_0;
        this.extract = extract;
    };
    var extract = function (dict) {
        return dict.extract;
    };
    return {
        Comonad: Comonad, 
        extract: extract
    };
})();
var PS = PS || {};
PS.Control_Monad_Identity = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    var Identity = {
        create: function (value) {
            return value;
        }
    };
    var runIdentity = function (_145) {
        return _145;
    };
    var functorIdentity = new Prelude.Functor(function (f) {
        return function (m) {
            return Identity.create(f(runIdentity(m)));
        };
    });
    var extendIdentity = new Control_Extend.Extend(function (f) {
        return function (m) {
            return Identity.create(f(m));
        };
    }, function () {
        return functorIdentity;
    });
    var comonadIdentity = new Control_Comonad.Comonad(function () {
        return extendIdentity;
    }, function (_148) {
        return _148;
    });
    var applyIdentity = new Prelude.Apply(function (_146) {
        return function (_147) {
            return Identity.create(_146(_147));
        };
    }, function () {
        return functorIdentity;
    });
    var bindIdentity = new Prelude.Bind(function (m) {
        return function (f) {
            return f(runIdentity(m));
        };
    }, function () {
        return applyIdentity;
    });
    var applicativeIdentity = new Prelude.Applicative(function () {
        return applyIdentity;
    }, Identity.create);
    var monadIdentity = new Prelude.Monad(function () {
        return applicativeIdentity;
    }, function () {
        return bindIdentity;
    });
    return {
        Identity: Identity, 
        applicativeIdentity: applicativeIdentity, 
        applyIdentity: applyIdentity, 
        bindIdentity: bindIdentity, 
        comonadIdentity: comonadIdentity, 
        extendIdentity: extendIdentity, 
        functorIdentity: functorIdentity, 
        monadIdentity: monadIdentity, 
        runIdentity: runIdentity
    };
})();
var PS = PS || {};
PS.Control_Bind = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $greater$eq$greater = function (__dict_Bind_36) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return Prelude[">>="](__dict_Bind_36)(f(a))(g);
                };
            };
        };
    };
    var $eq$less$less = function (__dict_Bind_37) {
        return function (f) {
            return function (m) {
                return Prelude[">>="](__dict_Bind_37)(m)(f);
            };
        };
    };
    var $less$eq$less = function (__dict_Bind_38) {
        return function (f) {
            return function (g) {
                return function (a) {
                    return $eq$less$less(__dict_Bind_38)(f)(g(a));
                };
            };
        };
    };
    var join = function (__dict_Bind_39) {
        return function (m) {
            return Prelude[">>="](__dict_Bind_39)(m)(Prelude.id(Prelude.categoryArr));
        };
    };
    var ifM = function (__dict_Bind_40) {
        return function (cond) {
            return function (t) {
                return function (f) {
                    return Prelude[">>="](__dict_Bind_40)(cond)(function (cond$prime) {
                        return cond$prime ? t : f;
                    });
                };
            };
        };
    };
    return {
        "<=<": $less$eq$less, 
        "=<<": $eq$less$less, 
        ">=>": $greater$eq$greater, 
        ifM: ifM, 
        join: join
    };
})();
var PS = PS || {};
PS.Control_Apply = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var $less$times = function (__dict_Apply_41) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_41)(Prelude["<$>"](__dict_Apply_41["__superclass_Prelude.Functor_0"]())(Prelude["const"])(a))(b);
            };
        };
    };
    var $times$greater = function (__dict_Apply_42) {
        return function (a) {
            return function (b) {
                return Prelude["<*>"](__dict_Apply_42)(Prelude["<$>"](__dict_Apply_42["__superclass_Prelude.Functor_0"]())(Prelude["const"](Prelude.id(Prelude.categoryArr)))(a))(b);
            };
        };
    };
    var lift5 = function (__dict_Apply_43) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return function (e) {
                                return Prelude["<*>"](__dict_Apply_43)(Prelude["<*>"](__dict_Apply_43)(Prelude["<*>"](__dict_Apply_43)(Prelude["<*>"](__dict_Apply_43)(Prelude["<$>"](__dict_Apply_43["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d))(e);
                            };
                        };
                    };
                };
            };
        };
    };
    var lift4 = function (__dict_Apply_44) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return function (d) {
                            return Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<*>"](__dict_Apply_44)(Prelude["<$>"](__dict_Apply_44["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c))(d);
                        };
                    };
                };
            };
        };
    };
    var lift3 = function (__dict_Apply_45) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return function (c) {
                        return Prelude["<*>"](__dict_Apply_45)(Prelude["<*>"](__dict_Apply_45)(Prelude["<$>"](__dict_Apply_45["__superclass_Prelude.Functor_0"]())(f)(a))(b))(c);
                    };
                };
            };
        };
    };
    var lift2 = function (__dict_Apply_46) {
        return function (f) {
            return function (a) {
                return function (b) {
                    return Prelude["<*>"](__dict_Apply_46)(Prelude["<$>"](__dict_Apply_46["__superclass_Prelude.Functor_0"]())(f)(a))(b);
                };
            };
        };
    };
    var forever = function (__dict_Apply_47) {
        return function (a) {
            return $times$greater(__dict_Apply_47)(a)(forever(__dict_Apply_47)(a));
        };
    };
    return {
        "*>": $times$greater, 
        "<*": $less$times, 
        forever: forever, 
        lift2: lift2, 
        lift3: lift3, 
        lift4: lift4, 
        lift5: lift5
    };
})();
var PS = PS || {};
PS.Control_Alt = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
        this["<|>"] = $less$bar$greater;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
    };
    var $less$bar$greater = function (dict) {
        return dict["<|>"];
    };
    return {
        "<|>": $less$bar$greater, 
        Alt: Alt
    };
})();
var PS = PS || {};
PS.Control_Plus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
        this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
        this.empty = empty;
    };
    var empty = function (dict) {
        return dict.empty;
    };
    return {
        Plus: Plus, 
        empty: empty
    };
})();
var PS = PS || {};
PS.Control_Alternative = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
        this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
        this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    };
    var some = function (__dict_Alternative_48) {
        return function (__dict_Lazy1_49) {
            return function (v) {
                return Prelude["<*>"]((__dict_Alternative_48["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_48["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_49)(function (_) {
                    return many(__dict_Alternative_48)(__dict_Lazy1_49)(v);
                }));
            };
        };
    };
    var many = function (__dict_Alternative_50) {
        return function (__dict_Lazy1_51) {
            return function (v) {
                return Control_Alt["<|>"]((__dict_Alternative_50["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_50)(__dict_Lazy1_51)(v))(Prelude.pure(__dict_Alternative_50["__superclass_Prelude.Applicative_0"]())([  ]));
            };
        };
    };
    return {
        Alternative: Alternative, 
        many: many, 
        some: some
    };
})();
var PS = PS || {};
PS.Control_MonadPlus = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Plus = PS.Control_Plus;
    function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var guard = function (__dict_MonadPlus_52) {
        return function (_149) {
            if (_149) {
                return Prelude["return"](__dict_MonadPlus_52["__superclass_Prelude.Monad_0"]())(Prelude.unit);
            };
            if (!_149) {
                return Control_Plus.empty((__dict_MonadPlus_52["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
            };
            throw new Error("Failed pattern match");
        };
    };
    return {
        MonadPlus: MonadPlus, 
        guard: guard
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ReaderT = {
        create: function (value) {
            return value;
        }
    };
    var runReaderT = function (_150) {
        return _150;
    };
    var withReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runReaderT(m))(f));
        };
    };
    var mapReaderT = function (f) {
        return function (m) {
            return ReaderT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runReaderT(m)));
        };
    };
    var liftReaderT = function (m) {
        return Prelude["const"](m);
    };
    var monadTransReaderT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_55) {
        return liftReaderT;
    });
    var liftCatchReader = function ($$catch) {
        return function (m) {
            return function (h) {
                return ReaderT.create(function (r) {
                    return $$catch(runReaderT(m)(r))(function (e) {
                        return runReaderT(h(e))(r);
                    });
                });
            };
        };
    };
    var liftCallCCReader = function (callCC) {
        return function (f) {
            return ReaderT.create(function (r) {
                return callCC(function (c) {
                    return runReaderT(f(function (a) {
                        return ReaderT.create(Prelude["const"](c(a)));
                    }))(r);
                });
            });
        };
    };
    var functorReaderT = function (__dict_Functor_57) {
        return new Prelude.Functor(function (f) {
            return mapReaderT(Prelude["<$>"](__dict_Functor_57)(f));
        });
    };
    var applyReaderT = function (__dict_Applicative_59) {
        return new Prelude.Apply(function (f) {
            return function (v) {
                return function (r) {
                    return Prelude["<*>"](__dict_Applicative_59["__superclass_Prelude.Apply_0"]())(runReaderT(f)(r))(runReaderT(v)(r));
                };
            };
        }, function () {
            return functorReaderT((__dict_Applicative_59["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindReaderT = function (__dict_Monad_58) {
        return new Prelude.Bind(function (m) {
            return function (k) {
                return function (r) {
                    return Prelude[">>="](__dict_Monad_58["__superclass_Prelude.Bind_1"]())(runReaderT(m)(r))(function (_5) {
                        return runReaderT(k(_5))(r);
                    });
                };
            };
        }, function () {
            return applyReaderT(__dict_Monad_58["__superclass_Prelude.Applicative_0"]());
        });
    };
    var applicativeReaderT = function (__dict_Applicative_60) {
        return new Prelude.Applicative(function () {
            return applyReaderT(__dict_Applicative_60);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(liftReaderT)(Prelude.pure(__dict_Applicative_60)));
    };
    var monadReaderT = function (__dict_Monad_53) {
        return new Prelude.Monad(function () {
            return applicativeReaderT(__dict_Monad_53["__superclass_Prelude.Applicative_0"]());
        }, function () {
            return bindReaderT(__dict_Monad_53);
        });
    };
    var altReaderT = function (__dict_Alt_62) {
        return new Control_Alt.Alt(function (m) {
            return function (n) {
                return function (r) {
                    return Control_Alt["<|>"](__dict_Alt_62)(runReaderT(m)(r))(runReaderT(n)(r));
                };
            };
        }, function () {
            return functorReaderT(__dict_Alt_62["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusReaderT = function (__dict_Plus_56) {
        return new Control_Plus.Plus(function () {
            return altReaderT(__dict_Plus_56["__superclass_Control.Alt.Alt_0"]());
        }, liftReaderT(Control_Plus.empty(__dict_Plus_56)));
    };
    var alternativeReaderT = function (__dict_Alternative_61) {
        return new Control_Alternative.Alternative(function () {
            return plusReaderT(__dict_Alternative_61["__superclass_Control.Plus.Plus_1"]());
        }, function () {
            return applicativeReaderT(__dict_Alternative_61["__superclass_Prelude.Applicative_0"]());
        });
    };
    var monadPlusReaderT = function (__dict_MonadPlus_54) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeReaderT(__dict_MonadPlus_54["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadReaderT(__dict_MonadPlus_54["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        ReaderT: ReaderT, 
        altReaderT: altReaderT, 
        alternativeReaderT: alternativeReaderT, 
        applicativeReaderT: applicativeReaderT, 
        applyReaderT: applyReaderT, 
        bindReaderT: bindReaderT, 
        functorReaderT: functorReaderT, 
        liftCallCCReader: liftCallCCReader, 
        liftCatchReader: liftCatchReader, 
        liftReaderT: liftReaderT, 
        mapReaderT: mapReaderT, 
        monadPlusReaderT: monadPlusReaderT, 
        monadReaderT: monadReaderT, 
        monadTransReaderT: monadTransReaderT, 
        plusReaderT: plusReaderT, 
        runReaderT: runReaderT, 
        withReaderT: withReaderT
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var withReader = Control_Monad_Reader_Trans.withReaderT;
    var runReader = function (m) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(Control_Monad_Reader_Trans.runReaderT(m));
    };
    var mapReader = function (f) {
        return Control_Monad_Reader_Trans.mapReaderT(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Control_Monad_Identity.runIdentity)));
    };
    return {
        mapReader: mapReader, 
        runReader: runReader, 
        withReader: withReader
    };
})();
var PS = PS || {};
PS.Data_Either = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    function Left(value0) {
        this.value0 = value0;
    };
    Left.create = function (value0) {
        return new Left(value0);
    };
    function Right(value0) {
        this.value0 = value0;
    };
    Right.create = function (value0) {
        return new Right(value0);
    };
    var showEither = function (__dict_Show_63) {
        return function (__dict_Show_64) {
            return new Prelude.Show(function (_160) {
                if (_160 instanceof Left) {
                    return "Left (" + (Prelude.show(__dict_Show_63)(_160.value0) + ")");
                };
                if (_160 instanceof Right) {
                    return "Right (" + (Prelude.show(__dict_Show_64)(_160.value0) + ")");
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var functorEither = new Prelude.Functor(function (_154) {
        return function (_155) {
            if (_155 instanceof Left) {
                return new Left(_155.value0);
            };
            if (_155 instanceof Right) {
                return new Right(_154(_155.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
    var eqEither = function (__dict_Eq_67) {
        return function (__dict_Eq_68) {
            return new Prelude.Eq(function (a) {
                return function (b) {
                    return !Prelude["=="](eqEither(__dict_Eq_67)(__dict_Eq_68))(a)(b);
                };
            }, function (_161) {
                return function (_162) {
                    if (_161 instanceof Left && _162 instanceof Left) {
                        return Prelude["=="](__dict_Eq_67)(_161.value0)(_162.value0);
                    };
                    if (_161 instanceof Right && _162 instanceof Right) {
                        return Prelude["=="](__dict_Eq_68)(_161.value0)(_162.value0);
                    };
                    return false;
                };
            });
        };
    };
    var ordEither = function (__dict_Ord_65) {
        return function (__dict_Ord_66) {
            return new Prelude.Ord(function () {
                return eqEither(__dict_Ord_65["__superclass_Prelude.Eq_0"]())(__dict_Ord_66["__superclass_Prelude.Eq_0"]());
            }, function (_163) {
                return function (_164) {
                    if (_163 instanceof Left && _164 instanceof Left) {
                        return Prelude.compare(__dict_Ord_65)(_163.value0)(_164.value0);
                    };
                    if (_163 instanceof Right && _164 instanceof Right) {
                        return Prelude.compare(__dict_Ord_66)(_163.value0)(_164.value0);
                    };
                    if (_163 instanceof Left) {
                        return Prelude.LT.value;
                    };
                    if (_164 instanceof Left) {
                        return Prelude.GT.value;
                    };
                    throw new Error("Failed pattern match");
                };
            });
        };
    };
    var either = function (_151) {
        return function (_152) {
            return function (_153) {
                if (_153 instanceof Left) {
                    return _151(_153.value0);
                };
                if (_153 instanceof Right) {
                    return _152(_153.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isLeft = either(Prelude["const"](true))(Prelude["const"](false));
    var isRight = either(Prelude["const"](false))(Prelude["const"](true));
    var applyEither = new Prelude.Apply(function (_156) {
        return function (_157) {
            if (_156 instanceof Left) {
                return new Left(_156.value0);
            };
            if (_156 instanceof Right) {
                return Prelude["<$>"](functorEither)(_156.value0)(_157);
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorEither;
    });
    var bindEither = new Prelude.Bind(either(function (e) {
        return function (_) {
            return new Left(e);
        };
    })(function (a) {
        return function (f) {
            return f(a);
        };
    }), function () {
        return applyEither;
    });
    var applicativeEither = new Prelude.Applicative(function () {
        return applyEither;
    }, Right.create);
    var monadEither = new Prelude.Monad(function () {
        return applicativeEither;
    }, function () {
        return bindEither;
    });
    var altEither = new Control_Alt.Alt(function (_158) {
        return function (_159) {
            if (_158 instanceof Left) {
                return _159;
            };
            return _158;
        };
    }, function () {
        return functorEither;
    });
    return {
        Left: Left, 
        Right: Right, 
        altEither: altEither, 
        applicativeEither: applicativeEither, 
        applyEither: applyEither, 
        bindEither: bindEither, 
        either: either, 
        eqEither: eqEither, 
        functorEither: functorEither, 
        isLeft: isLeft, 
        isRight: isRight, 
        monadEither: monadEither, 
        ordEither: ordEither, 
        showEither: showEither
    };
})();
var PS = PS || {};
PS.Data_Either_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var choice2 = Data_Either.either;
    var choice3 = function (a) {
        return function (b) {
            return function (c) {
                return Data_Either.either(a)(choice2(b)(c));
            };
        };
    };
    var choice4 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return Data_Either.either(a)(choice3(b)(c)(d));
                };
            };
        };
    };
    var choice5 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return Data_Either.either(a)(choice4(b)(c)(d)(e));
                    };
                };
            };
        };
    };
    var choice6 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return Data_Either.either(a)(choice5(b)(c)(d)(e)(f));
                        };
                    };
                };
            };
        };
    };
    var choice7 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return Data_Either.either(a)(choice6(b)(c)(d)(e)(f)(g));
                            };
                        };
                    };
                };
            };
        };
    };
    var choice8 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return Data_Either.either(a)(choice7(b)(c)(d)(e)(f)(g)(h));
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice9 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return Data_Either.either(a)(choice8(b)(c)(d)(e)(f)(g)(h)(i));
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    var choice10 = function (a) {
        return function (b) {
            return function (c) {
                return function (d) {
                    return function (e) {
                        return function (f) {
                            return function (g) {
                                return function (h) {
                                    return function (i) {
                                        return function (j) {
                                            return Data_Either.either(a)(choice9(b)(c)(d)(e)(f)(g)(h)(i)(j));
                                        };
                                    };
                                };
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        choice10: choice10, 
        choice2: choice2, 
        choice3: choice3, 
        choice4: choice4, 
        choice5: choice5, 
        choice6: choice6, 
        choice7: choice7, 
        choice8: choice8, 
        choice9: choice9
    };
})();
var PS = PS || {};
PS.Data_Maybe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Extend = PS.Control_Extend;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function Nothing() {

    };
    Nothing.value = new Nothing();
    function Just(value0) {
        this.value0 = value0;
    };
    Just.create = function (value0) {
        return new Just(value0);
    };
    var showMaybe = function (__dict_Show_69) {
        return new Prelude.Show(function (_180) {
            if (_180 instanceof Just) {
                return "Just (" + (Prelude.show(__dict_Show_69)(_180.value0) + ")");
            };
            if (_180 instanceof Nothing) {
                return "Nothing";
            };
            throw new Error("Failed pattern match");
        });
    };
    var semigroupMaybe = function (__dict_Semigroup_70) {
        return new Prelude.Semigroup(function (_178) {
            return function (_179) {
                if (_178 instanceof Nothing) {
                    return _179;
                };
                if (_179 instanceof Nothing) {
                    return _178;
                };
                if (_178 instanceof Just && _179 instanceof Just) {
                    return new Just(Prelude["<>"](__dict_Semigroup_70)(_178.value0)(_179.value0));
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var maybe = function (_165) {
        return function (_166) {
            return function (_167) {
                if (_167 instanceof Nothing) {
                    return _165;
                };
                if (_167 instanceof Just) {
                    return _166(_167.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var isNothing = maybe(true)(Prelude["const"](false));
    var isJust = maybe(false)(Prelude["const"](true));
    var functorMaybe = new Prelude.Functor(function (_168) {
        return function (_169) {
            if (_169 instanceof Just) {
                return new Just(_168(_169.value0));
            };
            return Nothing.value;
        };
    });
    var fromMaybe = function (a) {
        return maybe(a)(Prelude.id(Prelude.categoryArr));
    };
    var extendMaybe = new Control_Extend.Extend(function (_176) {
        return function (_177) {
            if (_177 instanceof Nothing) {
                return Nothing.value;
            };
            return Just.create(_176(_177));
        };
    }, function () {
        return functorMaybe;
    });
    var eqMaybe = function (__dict_Eq_72) {
        return new Prelude.Eq(function (a) {
            return function (b) {
                return !Prelude["=="](eqMaybe(__dict_Eq_72))(a)(b);
            };
        }, function (_181) {
            return function (_182) {
                if (_181 instanceof Nothing && _182 instanceof Nothing) {
                    return true;
                };
                if (_181 instanceof Just && _182 instanceof Just) {
                    return Prelude["=="](__dict_Eq_72)(_181.value0)(_182.value0);
                };
                return false;
            };
        });
    };
    var ordMaybe = function (__dict_Ord_71) {
        return new Prelude.Ord(function () {
            return eqMaybe(__dict_Ord_71["__superclass_Prelude.Eq_0"]());
        }, function (_183) {
            return function (_184) {
                if (_183 instanceof Just && _184 instanceof Just) {
                    return Prelude.compare(__dict_Ord_71)(_183.value0)(_184.value0);
                };
                if (_183 instanceof Nothing && _184 instanceof Nothing) {
                    return Prelude.EQ.value;
                };
                if (_183 instanceof Nothing) {
                    return Prelude.LT.value;
                };
                if (_184 instanceof Nothing) {
                    return Prelude.GT.value;
                };
                throw new Error("Failed pattern match");
            };
        });
    };
    var applyMaybe = new Prelude.Apply(function (_170) {
        return function (_171) {
            if (_170 instanceof Just) {
                return Prelude["<$>"](functorMaybe)(_170.value0)(_171);
            };
            if (_170 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return functorMaybe;
    });
    var bindMaybe = new Prelude.Bind(function (_174) {
        return function (_175) {
            if (_174 instanceof Just) {
                return _175(_174.value0);
            };
            if (_174 instanceof Nothing) {
                return Nothing.value;
            };
            throw new Error("Failed pattern match");
        };
    }, function () {
        return applyMaybe;
    });
    var applicativeMaybe = new Prelude.Applicative(function () {
        return applyMaybe;
    }, Just.create);
    var monadMaybe = new Prelude.Monad(function () {
        return applicativeMaybe;
    }, function () {
        return bindMaybe;
    });
    var altMaybe = new Control_Alt.Alt(function (_172) {
        return function (_173) {
            if (_172 instanceof Nothing) {
                return _173;
            };
            return _172;
        };
    }, function () {
        return functorMaybe;
    });
    var plusMaybe = new Control_Plus.Plus(function () {
        return altMaybe;
    }, Nothing.value);
    var alternativeMaybe = new Control_Alternative.Alternative(function () {
        return plusMaybe;
    }, function () {
        return applicativeMaybe;
    });
    var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
        return alternativeMaybe;
    }, function () {
        return monadMaybe;
    });
    return {
        Just: Just, 
        Nothing: Nothing, 
        altMaybe: altMaybe, 
        alternativeMaybe: alternativeMaybe, 
        applicativeMaybe: applicativeMaybe, 
        applyMaybe: applyMaybe, 
        bindMaybe: bindMaybe, 
        eqMaybe: eqMaybe, 
        extendMaybe: extendMaybe, 
        fromMaybe: fromMaybe, 
        functorMaybe: functorMaybe, 
        isJust: isJust, 
        isNothing: isNothing, 
        maybe: maybe, 
        monadMaybe: monadMaybe, 
        monadPlusMaybe: monadPlusMaybe, 
        ordMaybe: ordMaybe, 
        plusMaybe: plusMaybe, 
        semigroupMaybe: semigroupMaybe, 
        showMaybe: showMaybe
    };
})();
var PS = PS || {};
PS.Data_Array = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function snoc(l) {  return function (e) {    var l1 = l.slice();    l1.push(e);     return l1;  };};
    function length (xs) {  return xs.length;};
    function findIndex (f) {  return function (arr) {    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function findLastIndex (f) {  return function (arr) {    for (var i = arr.length - 1; i >= 0; i--) {      if (f(arr[i])) {        return i;      }    }    return -1;  };};
    function append (l1) {  return function (l2) {    return l1.concat(l2);  };};
    function concat (xss) {  var result = [];  for (var i = 0, l = xss.length; i < l; i++) {    result.push.apply(result, xss[i]);  }  return result;};
    function reverse (l) {  return l.slice().reverse();};
    function drop (n) {  return function (l) {    return l.slice(n);  };};
    function slice (s) {  return function (e) {    return function (l) {      return l.slice(s, e);    };  };};
    function insertAt (index) {  return function (a) {    return function (l) {      var l1 = l.slice();      l1.splice(index, 0, a);      return l1;    };   };};
    function deleteAt (index) {  return function (n) {    return function (l) {      var l1 = l.slice();      l1.splice(index, n);      return l1;    };   };};
    function updateAt (index) {  return function (a) {    return function (l) {      var i = ~~index;      if (i < 0 || i >= l.length) return l;      var l1 = l.slice();      l1[i] = a;      return l1;    };   };};
    function concatMap (f) {  return function (arr) {    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      Array.prototype.push.apply(result, f(arr[i]));    }    return result;  };};
    function map (f) {  return function (arr) {    var l = arr.length;    var result = new Array(l);    for (var i = 0; i < l; i++) {      result[i] = f(arr[i]);    }    return result;  };};
    function filter (f) {  return function (arr) {    var n = 0;    var result = [];    for (var i = 0, l = arr.length; i < l; i++) {      if (f(arr[i])) {        result[n++] = arr[i];      }    }    return result;  };};
    function range (start) {  return function (end) {    var i = ~~start, e = ~~end;    var step = i > e ? -1 : 1;    var result = [i], n = 1;    while (i !== e) {      i += step;      result[n++] = i;    }    return result;  };};
    function zipWith (f) {  return function (xs) {    return function (ys) {      var l = xs.length < ys.length ? xs.length : ys.length;      var result = new Array(l);      for (var i = 0; i < l; i++) {        result[i] = f(xs[i])(ys[i]);      }      return result;    };  };};
    function sortJS (f) {  return function (l) {    return l.slice().sort(function (x, y) {      return f(x)(y);    });  };};
    var $dot$dot = range;
    var $bang$bang = function (xs) {
        return function (n) {
            var isInt = function (n_1) {
                return n_1 !== ~~n_1;
            };
            return n < 0 || (n >= length(xs) || isInt(n)) ? Data_Maybe.Nothing.value : new Data_Maybe.Just(xs[n]);
        };
    };
    var take = function (n) {
        return slice(0)(n);
    };
    var tail = function (_187) {
        if (_187.length >= 1) {
            var _619 = _187.slice(1);
            return new Data_Maybe.Just(_619);
        };
        return Data_Maybe.Nothing.value;
    };
    var span = (function () {
        var go = function (__copy__203) {
            return function (__copy__204) {
                return function (__copy__205) {
                    var _203 = __copy__203;
                    var _204 = __copy__204;
                    var _205 = __copy__205;
                    tco: while (true) {
                        if (_205.length >= 1) {
                            var _624 = _205.slice(1);
                            if (_204(_205[0])) {
                                var __tco__203 = Prelude[":"](_205[0])(_203);
                                var __tco__204 = _204;
                                _203 = __tco__203;
                                _204 = __tco__204;
                                _205 = _624;
                                continue tco;
                            };
                        };
                        return {
                            init: reverse(_203), 
                            rest: _205
                        };
                    };
                };
            };
        };
        return go([  ]);
    })();
    var sortBy = function (comp) {
        return function (xs) {
            var comp$prime = function (x) {
                return function (y) {
                    var _625 = comp(x)(y);
                    if (_625 instanceof Prelude.GT) {
                        return 1;
                    };
                    if (_625 instanceof Prelude.EQ) {
                        return 0;
                    };
                    if (_625 instanceof Prelude.LT) {
                        return -1;
                    };
                    throw new Error("Failed pattern match");
                };
            };
            return sortJS(comp$prime)(xs);
        };
    };
    var sort = function (__dict_Ord_73) {
        return function (xs) {
            return sortBy(Prelude.compare(__dict_Ord_73))(xs);
        };
    };
    var singleton = function (a) {
        return [ a ];
    };
    var semigroupArray = new Prelude.Semigroup(append);
    var $$null = function (_189) {
        if (_189.length === 0) {
            return true;
        };
        return false;
    };
    var nubBy = function (_196) {
        return function (_197) {
            if (_197.length === 0) {
                return [  ];
            };
            if (_197.length >= 1) {
                var _630 = _197.slice(1);
                return Prelude[":"](_197[0])(nubBy(_196)(filter(function (y) {
                    return !_196(_197[0])(y);
                })(_630)));
            };
            throw new Error("Failed pattern match");
        };
    };
    var nub = function (__dict_Eq_74) {
        return nubBy(Prelude["=="](__dict_Eq_74));
    };
    var mapMaybe = function (f) {
        return concatMap(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.maybe([  ])(singleton))(f));
    };
    var last = function (__copy__186) {
        var _186 = __copy__186;
        tco: while (true) {
            if (_186.length >= 1) {
                var _633 = _186.slice(1);
                if (_633.length === 0) {
                    return new Data_Maybe.Just(_186[0]);
                };
            };
            if (_186.length >= 1) {
                var _635 = _186.slice(1);
                _186 = _635;
                continue tco;
            };
            return Data_Maybe.Nothing.value;
        };
    };
    var intersectBy = function (_193) {
        return function (_194) {
            return function (_195) {
                if (_194.length === 0) {
                    return [  ];
                };
                if (_195.length === 0) {
                    return [  ];
                };
                var el = function (x) {
                    return findIndex(_193(x))(_195) >= 0;
                };
                return filter(el)(_194);
            };
        };
    };
    var intersect = function (__dict_Eq_75) {
        return intersectBy(Prelude["=="](__dict_Eq_75));
    };
    var init = function (_188) {
        if (_188.length === 0) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(slice(0)(length(_188) - 1)(_188));
    };
    var head = function (_185) {
        if (_185.length >= 1) {
            var _642 = _185.slice(1);
            return new Data_Maybe.Just(_185[0]);
        };
        return Data_Maybe.Nothing.value;
    };
    var groupBy = (function () {
        var go = function (__copy__200) {
            return function (__copy__201) {
                return function (__copy__202) {
                    var _200 = __copy__200;
                    var _201 = __copy__201;
                    var _202 = __copy__202;
                    tco: while (true) {
                        if (_202.length === 0) {
                            return reverse(_200);
                        };
                        if (_202.length >= 1) {
                            var _647 = _202.slice(1);
                            var sp = span(_201(_202[0]))(_647);
                            var __tco__200 = Prelude[":"](Prelude[":"](_202[0])(sp.init))(_200);
                            var __tco__201 = _201;
                            _200 = __tco__200;
                            _201 = __tco__201;
                            _202 = sp.rest;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        return go([  ]);
    })();
    var group = function (__dict_Eq_76) {
        return function (xs) {
            return groupBy(Prelude["=="](__dict_Eq_76))(xs);
        };
    };
    var group$prime = function (__dict_Ord_77) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(group(__dict_Ord_77["__superclass_Prelude.Eq_0"]()))(sort(__dict_Ord_77));
    };
    var functorArray = new Prelude.Functor(map);
    var elemLastIndex = function (__dict_Eq_78) {
        return function (x) {
            return findLastIndex(Prelude["=="](__dict_Eq_78)(x));
        };
    };
    var elemIndex = function (__dict_Eq_79) {
        return function (x) {
            return findIndex(Prelude["=="](__dict_Eq_79)(x));
        };
    };
    var deleteBy = function (_190) {
        return function (_191) {
            return function (_192) {
                if (_192.length === 0) {
                    return [  ];
                };
                var _651 = findIndex(_190(_191))(_192);
                if (_651 < 0) {
                    return _192;
                };
                return deleteAt(_651)(1)(_192);
            };
        };
    };
    var $$delete = function (__dict_Eq_80) {
        return deleteBy(Prelude["=="](__dict_Eq_80));
    };
    var $bslash$bslash = function (__dict_Eq_81) {
        return function (xs) {
            return function (ys) {
                var go = function (__copy__198) {
                    return function (__copy__199) {
                        var _198 = __copy__198;
                        var _199 = __copy__199;
                        tco: while (true) {
                            if (_199.length === 0) {
                                return _198;
                            };
                            if (_198.length === 0) {
                                return [  ];
                            };
                            if (_199.length >= 1) {
                                var _655 = _199.slice(1);
                                var __tco__198 = $$delete(__dict_Eq_81)(_199[0])(_198);
                                _198 = __tco__198;
                                _199 = _655;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                return go(xs)(ys);
            };
        };
    };
    var catMaybes = concatMap(Data_Maybe.maybe([  ])(singleton));
    var monadArray = new Prelude.Monad(function () {
        return applicativeArray;
    }, function () {
        return bindArray;
    });
    var bindArray = new Prelude.Bind(Prelude.flip(concatMap), function () {
        return applyArray;
    });
    var applyArray = new Prelude.Apply(Prelude.ap(monadArray), function () {
        return functorArray;
    });
    var applicativeArray = new Prelude.Applicative(function () {
        return applyArray;
    }, singleton);
    var altArray = new Control_Alt.Alt(append, function () {
        return functorArray;
    });
    var plusArray = new Control_Plus.Plus(function () {
        return altArray;
    }, [  ]);
    var alternativeArray = new Control_Alternative.Alternative(function () {
        return plusArray;
    }, function () {
        return applicativeArray;
    });
    var monadPlusArray = new Control_MonadPlus.MonadPlus(function () {
        return alternativeArray;
    }, function () {
        return monadArray;
    });
    return {
        "!!": $bang$bang, 
        "..": $dot$dot, 
        "\\\\": $bslash$bslash, 
        altArray: altArray, 
        alternativeArray: alternativeArray, 
        append: append, 
        applicativeArray: applicativeArray, 
        applyArray: applyArray, 
        bindArray: bindArray, 
        catMaybes: catMaybes, 
        concat: concat, 
        concatMap: concatMap, 
        "delete": $$delete, 
        deleteAt: deleteAt, 
        deleteBy: deleteBy, 
        drop: drop, 
        elemIndex: elemIndex, 
        elemLastIndex: elemLastIndex, 
        filter: filter, 
        findIndex: findIndex, 
        findLastIndex: findLastIndex, 
        functorArray: functorArray, 
        group: group, 
        "group'": group$prime, 
        groupBy: groupBy, 
        head: head, 
        init: init, 
        insertAt: insertAt, 
        intersect: intersect, 
        intersectBy: intersectBy, 
        last: last, 
        length: length, 
        map: map, 
        mapMaybe: mapMaybe, 
        monadArray: monadArray, 
        monadPlusArray: monadPlusArray, 
        nub: nub, 
        nubBy: nubBy, 
        "null": $$null, 
        plusArray: plusArray, 
        range: range, 
        reverse: reverse, 
        semigroupArray: semigroupArray, 
        singleton: singleton, 
        snoc: snoc, 
        sort: sort, 
        sortBy: sortBy, 
        span: span, 
        tail: tail, 
        take: take, 
        updateAt: updateAt, 
        zipWith: zipWith
    };
})();
var PS = PS || {};
PS.Data_Foreign = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Either = PS.Data_Either;
    var Data_Function = PS.Data_Function;
    function TypeMismatch(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    TypeMismatch.create = function (value0) {
        return function (value1) {
            return new TypeMismatch(value0, value1);
        };
    };
    function ErrorAtIndex(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtIndex.create = function (value0) {
        return function (value1) {
            return new ErrorAtIndex(value0, value1);
        };
    };
    function ErrorAtProperty(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ErrorAtProperty.create = function (value0) {
        return function (value1) {
            return new ErrorAtProperty(value0, value1);
        };
    };
    function JSONError(value0) {
        this.value0 = value0;
    };
    JSONError.create = function (value0) {
        return new JSONError(value0);
    };
    function parseJSONImpl(left, right, str) {  try {    return right(JSON.parse(str));  } catch (e) {    return left(e.toString());  } };
    function toForeign(value) {  return value;};
    function unsafeFromForeign(value) {  return value;};
    function typeOf(value) {  return typeof value;};
    function tagOf(value) {  return Object.prototype.toString.call(value).slice(8, -1);};
    function isNull(value) {  return value === null;};
    function isUndefined(value) {  return value === undefined;};
    function isArray(value) {  return Array.isArray(value);};
    var unsafeReadPrim = function (_206) {
        return function (_207) {
            if (tagOf(_207) === _206) {
                return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_207));
            };
            return new Data_Either.Left(new TypeMismatch(_206, tagOf(_207)));
        };
    };
    var showForeignError = new Prelude.Show(function (_209) {
        if (_209 instanceof TypeMismatch) {
            return "Type mismatch: expected " + (_209.value0 + (", found " + _209.value1));
        };
        if (_209 instanceof ErrorAtIndex) {
            return "Error at array index " + (Prelude.show(Prelude.showNumber)(_209.value0) + (": " + Prelude.show(showForeignError)(_209.value1)));
        };
        if (_209 instanceof ErrorAtProperty) {
            return "Error at property " + (Prelude.show(Prelude.showString)(_209.value0) + (": " + Prelude.show(showForeignError)(_209.value1)));
        };
        if (_209 instanceof JSONError) {
            return "JSON error: " + _209.value0;
        };
        throw new Error("Failed pattern match");
    });
    var readString = unsafeReadPrim("String");
    var readNumber = unsafeReadPrim("Number");
    var readBoolean = unsafeReadPrim("Boolean");
    var readArray = function (_208) {
        if (isArray(_208)) {
            return Prelude.pure(Data_Either.applicativeEither)(unsafeFromForeign(_208));
        };
        return new Data_Either.Left(new TypeMismatch("array", tagOf(_208)));
    };
    var parseJSON = function (json) {
        return parseJSONImpl(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(JSONError.create), Data_Either.Right.create, json);
    };
    return {
        ErrorAtIndex: ErrorAtIndex, 
        ErrorAtProperty: ErrorAtProperty, 
        JSONError: JSONError, 
        TypeMismatch: TypeMismatch, 
        isArray: isArray, 
        isNull: isNull, 
        isUndefined: isUndefined, 
        parseJSON: parseJSON, 
        readArray: readArray, 
        readBoolean: readBoolean, 
        readNumber: readNumber, 
        readString: readString, 
        showForeignError: showForeignError, 
        tagOf: tagOf, 
        toForeign: toForeign, 
        typeOf: typeOf, 
        unsafeFromForeign: unsafeFromForeign
    };
})();
var PS = PS || {};
PS.Data_Foreign_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Function = PS.Data_Function;
    var Data_Either = PS.Data_Either;
    var Data_Foreign = PS.Data_Foreign;
    function Index($bang, errorAt, hasOwnProperty, hasProperty) {
        this["!"] = $bang;
        this.errorAt = errorAt;
        this.hasOwnProperty = hasOwnProperty;
        this.hasProperty = hasProperty;
    };
    function unsafeReadPropImpl(f, s, key, value) {   if (value && typeof value === 'object') {    return s(value[key]);  } else {    return f;  }};
    function unsafeHasOwnProperty(prop, value) {  return value.hasOwnProperty(prop);};
    function unsafeHasProperty(prop, value) {  return prop in value;};
    var $bang = function (dict) {
        return dict["!"];
    };
    var unsafeReadProp = function (k) {
        return function (value) {
            return unsafeReadPropImpl(new Data_Either.Left(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(value))), Prelude.pure(Data_Either.applicativeEither), k, value);
        };
    };
    var prop = unsafeReadProp;
    var index = unsafeReadProp;
    var hasPropertyImpl = function (_212) {
        return function (_213) {
            if (Data_Foreign.isNull(_213)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_213)) {
                return false;
            };
            if (Data_Foreign.typeOf(_213) === "object" || Data_Foreign.typeOf(_213) === "function") {
                return unsafeHasProperty(_212, _213);
            };
            return false;
        };
    };
    var hasProperty = function (dict) {
        return dict.hasProperty;
    };
    var hasOwnPropertyImpl = function (_210) {
        return function (_211) {
            if (Data_Foreign.isNull(_211)) {
                return false;
            };
            if (Data_Foreign.isUndefined(_211)) {
                return false;
            };
            if (Data_Foreign.typeOf(_211) === "object" || Data_Foreign.typeOf(_211) === "function") {
                return unsafeHasOwnProperty(_210, _211);
            };
            return false;
        };
    };
    var indexNumber = new Index(Prelude.flip(index), Data_Foreign.ErrorAtIndex.create, hasOwnPropertyImpl, hasPropertyImpl);
    var indexString = new Index(Prelude.flip(prop), Data_Foreign.ErrorAtProperty.create, hasOwnPropertyImpl, hasPropertyImpl);
    var hasOwnProperty = function (dict) {
        return dict.hasOwnProperty;
    };
    var errorAt = function (dict) {
        return dict.errorAt;
    };
    return {
        "!": $bang, 
        Index: Index, 
        errorAt: errorAt, 
        hasOwnProperty: hasOwnProperty, 
        hasProperty: hasProperty, 
        index: index, 
        indexNumber: indexNumber, 
        indexString: indexString, 
        prop: prop
    };
})();
var PS = PS || {};
PS.Data_Foreign_Keys = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    function unsafeKeys(value) {   return Object.keys(value);};
    var keys = function (_214) {
        if (Data_Foreign.isNull(_214)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "null"));
        };
        if (Data_Foreign.isUndefined(_214)) {
            return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", "undefined"));
        };
        if (Data_Foreign.typeOf(_214) === "object") {
            return Data_Either.Right.create(unsafeKeys(_214));
        };
        return Data_Either.Left.create(new Data_Foreign.TypeMismatch("object", Data_Foreign.typeOf(_214)));
    };
    return {
        keys: keys
    };
})();
var PS = PS || {};
PS.Data_Foreign_Null = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Null = {
        create: function (value) {
            return value;
        }
    };
    var runNull = function (_215) {
        return _215;
    };
    var readNull = function (_216) {
        return function (_217) {
            if (Data_Foreign.isNull(_217)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Null.create)(Data_Maybe.Just.create))(_216(_217));
        };
    };
    return {
        Null: Null, 
        readNull: readNull, 
        runNull: runNull
    };
})();
var PS = PS || {};
PS.Data_Foreign_NullOrUndefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var NullOrUndefined = {
        create: function (value) {
            return value;
        }
    };
    var runNullOrUndefined = function (_218) {
        return _218;
    };
    var readNullOrUndefined = function (_219) {
        return function (_220) {
            if (Data_Foreign.isNull(_220) || Data_Foreign.isUndefined(_220)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(NullOrUndefined.create)(Data_Maybe.Just.create))(_219(_220));
        };
    };
    return {
        NullOrUndefined: NullOrUndefined, 
        readNullOrUndefined: readNullOrUndefined, 
        runNullOrUndefined: runNullOrUndefined
    };
})();
var PS = PS || {};
PS.Data_Foreign_Undefined = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Maybe = PS.Data_Maybe;
    var Undefined = {
        create: function (value) {
            return value;
        }
    };
    var runUndefined = function (_221) {
        return _221;
    };
    var readUndefined = function (_222) {
        return function (_223) {
            if (Data_Foreign.isUndefined(_223)) {
                return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
            };
            return Prelude["<$>"](Data_Either.functorEither)(Prelude["<<<"](Prelude.semigroupoidArr)(Undefined.create)(Data_Maybe.Just.create))(_222(_223));
        };
    };
    return {
        Undefined: Undefined, 
        readUndefined: readUndefined, 
        runUndefined: runUndefined
    };
})();
var PS = PS || {};
PS.Data_Maybe_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var fromJust = function (_224) {
        if (_224 instanceof Data_Maybe.Just) {
            return _224.value0;
        };
        throw new Error("Failed pattern match");
    };
    return {
        fromJust: fromJust
    };
})();
var PS = PS || {};
PS.Data_Array_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Prelude_Unsafe = PS.Prelude_Unsafe;
    var Data_Array = PS.Data_Array;
    var Data_Maybe_Unsafe = PS.Data_Maybe_Unsafe;
    var tail = function (_226) {
        if (_226.length >= 1) {
            var _685 = _226.slice(1);
            return _685;
        };
        throw new Error("Failed pattern match");
    };
    var last = function (xs) {
        return xs[Data_Array.length(xs) - 1];
    };
    var init = Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe_Unsafe.fromJust)(Data_Array.init);
    var head = function (_225) {
        if (_225.length >= 1) {
            var _688 = _225.slice(1);
            return _225[0];
        };
        throw new Error("Failed pattern match");
    };
    return {
        head: head, 
        init: init, 
        last: last, 
        tail: tail
    };
})();
var PS = PS || {};
PS.Data_Monoid = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Array = PS.Data_Array;
    function Monoid(__superclass_Prelude$dotSemigroup_0, mempty) {
        this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
        this.mempty = mempty;
    };
    var monoidUnit = new Monoid(function () {
        return Prelude.semigroupUnit;
    }, Prelude.unit);
    var monoidString = new Monoid(function () {
        return Prelude.semigroupString;
    }, "");
    var monoidMaybe = function (__dict_Semigroup_82) {
        return new Monoid(function () {
            return Data_Maybe.semigroupMaybe(__dict_Semigroup_82);
        }, Data_Maybe.Nothing.value);
    };
    var monoidArray = new Monoid(function () {
        return Data_Array.semigroupArray;
    }, [  ]);
    var mempty = function (dict) {
        return dict.mempty;
    };
    var monoidArr = function (__dict_Monoid_83) {
        return new Monoid(function () {
            return Prelude.semigroupArr(__dict_Monoid_83["__superclass_Prelude.Semigroup_0"]());
        }, Prelude["const"](mempty(__dict_Monoid_83)));
    };
    return {
        Monoid: Monoid, 
        mempty: mempty, 
        monoidArr: monoidArr, 
        monoidArray: monoidArray, 
        monoidMaybe: monoidMaybe, 
        monoidString: monoidString, 
        monoidUnit: monoidUnit
    };
})();
var PS = PS || {};
PS.Data_Monoid_All = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var All = {
        create: function (value) {
            return value;
        }
    };
    var showAll = new Prelude.Show(function (_232) {
        return "All (" + (Prelude.show(Prelude.showBoolean)(_232) + ")");
    });
    var semigroupAll = new Prelude.Semigroup(function (_233) {
        return function (_234) {
            return _233 && _234;
        };
    });
    var runAll = function (_227) {
        return _227;
    };
    var monoidAll = new Data_Monoid.Monoid(function () {
        return semigroupAll;
    }, true);
    var eqAll = new Prelude.Eq(function (_230) {
        return function (_231) {
            return _230 !== _231;
        };
    }, function (_228) {
        return function (_229) {
            return _228 === _229;
        };
    });
    return {
        All: All, 
        eqAll: eqAll, 
        monoidAll: monoidAll, 
        runAll: runAll, 
        semigroupAll: semigroupAll, 
        showAll: showAll
    };
})();
var PS = PS || {};
PS.Data_Monoid_Any = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Any = {
        create: function (value) {
            return value;
        }
    };
    var showAny = new Prelude.Show(function (_240) {
        return "Any (" + (Prelude.show(Prelude.showBoolean)(_240) + ")");
    });
    var semigroupAny = new Prelude.Semigroup(function (_241) {
        return function (_242) {
            return _241 || _242;
        };
    });
    var runAny = function (_235) {
        return _235;
    };
    var monoidAny = new Data_Monoid.Monoid(function () {
        return semigroupAny;
    }, false);
    var eqAny = new Prelude.Eq(function (_238) {
        return function (_239) {
            return _238 !== _239;
        };
    }, function (_236) {
        return function (_237) {
            return _236 === _237;
        };
    });
    return {
        Any: Any, 
        eqAny: eqAny, 
        monoidAny: monoidAny, 
        runAny: runAny, 
        semigroupAny: semigroupAny, 
        showAny: showAny
    };
})();
var PS = PS || {};
PS.Data_Monoid_Dual = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Dual = {
        create: function (value) {
            return value;
        }
    };
    var showDual = function (__dict_Show_84) {
        return new Prelude.Show(function (_250) {
            return "Dual (" + (Prelude.show(__dict_Show_84)(_250) + ")");
        });
    };
    var semigroupDual = function (__dict_Semigroup_85) {
        return new Prelude.Semigroup(function (_251) {
            return function (_252) {
                return Prelude["<>"](__dict_Semigroup_85)(_252)(_251);
            };
        });
    };
    var runDual = function (_243) {
        return _243;
    };
    var monoidDual = function (__dict_Monoid_87) {
        return new Data_Monoid.Monoid(function () {
            return semigroupDual(__dict_Monoid_87["__superclass_Prelude.Semigroup_0"]());
        }, Data_Monoid.mempty(__dict_Monoid_87));
    };
    var eqDual = function (__dict_Eq_88) {
        return new Prelude.Eq(function (_246) {
            return function (_247) {
                return Prelude["/="](__dict_Eq_88)(_246)(_247);
            };
        }, function (_244) {
            return function (_245) {
                return Prelude["=="](__dict_Eq_88)(_244)(_245);
            };
        });
    };
    var ordDual = function (__dict_Ord_86) {
        return new Prelude.Ord(function () {
            return eqDual(__dict_Ord_86["__superclass_Prelude.Eq_0"]());
        }, function (_248) {
            return function (_249) {
                return Prelude.compare(__dict_Ord_86)(_248)(_249);
            };
        });
    };
    return {
        Dual: Dual, 
        eqDual: eqDual, 
        monoidDual: monoidDual, 
        ordDual: ordDual, 
        runDual: runDual, 
        semigroupDual: semigroupDual, 
        showDual: showDual
    };
})();
var PS = PS || {};
PS.Data_Monoid_Endo = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Endo = {
        create: function (value) {
            return value;
        }
    };
    var semigroupEndo = new Prelude.Semigroup(function (_254) {
        return function (_255) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(_254)(_255);
        };
    });
    var runEndo = function (_253) {
        return _253;
    };
    var monoidEndo = new Data_Monoid.Monoid(function () {
        return semigroupEndo;
    }, Prelude.id(Prelude.categoryArr));
    return {
        Endo: Endo, 
        monoidEndo: monoidEndo, 
        runEndo: runEndo, 
        semigroupEndo: semigroupEndo
    };
})();
var PS = PS || {};
PS.Data_Monoid_Product = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Product = {
        create: function (value) {
            return value;
        }
    };
    var showProduct = new Prelude.Show(function (_263) {
        return "Product (" + (Prelude.show(Prelude.showNumber)(_263) + ")");
    });
    var semigroupProduct = new Prelude.Semigroup(function (_264) {
        return function (_265) {
            return _264 * _265;
        };
    });
    var runProduct = function (_256) {
        return _256;
    };
    var monoidProduct = new Data_Monoid.Monoid(function () {
        return semigroupProduct;
    }, 1);
    var eqProduct = new Prelude.Eq(function (_259) {
        return function (_260) {
            return _259 !== _260;
        };
    }, function (_257) {
        return function (_258) {
            return _257 === _258;
        };
    });
    var ordProduct = new Prelude.Ord(function () {
        return eqProduct;
    }, function (_261) {
        return function (_262) {
            return Prelude.compare(Prelude.ordNumber)(_261)(_262);
        };
    });
    return {
        Product: Product, 
        eqProduct: eqProduct, 
        monoidProduct: monoidProduct, 
        ordProduct: ordProduct, 
        runProduct: runProduct, 
        semigroupProduct: semigroupProduct, 
        showProduct: showProduct
    };
})();
var PS = PS || {};
PS.Data_Monoid_Sum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Monoid = PS.Data_Monoid;
    var Sum = {
        create: function (value) {
            return value;
        }
    };
    var showSum = new Prelude.Show(function (_273) {
        return "Sum (" + (Prelude.show(Prelude.showNumber)(_273) + ")");
    });
    var semigroupSum = new Prelude.Semigroup(function (_274) {
        return function (_275) {
            return _274 + _275;
        };
    });
    var runSum = function (_266) {
        return _266;
    };
    var monoidSum = new Data_Monoid.Monoid(function () {
        return semigroupSum;
    }, 0);
    var eqSum = new Prelude.Eq(function (_269) {
        return function (_270) {
            return _269 !== _270;
        };
    }, function (_267) {
        return function (_268) {
            return _267 === _268;
        };
    });
    var ordSum = new Prelude.Ord(function () {
        return eqSum;
    }, function (_271) {
        return function (_272) {
            return Prelude.compare(Prelude.ordNumber)(_271)(_272);
        };
    });
    return {
        Sum: Sum, 
        eqSum: eqSum, 
        monoidSum: monoidSum, 
        ordSum: ordSum, 
        runSum: runSum, 
        semigroupSum: semigroupSum, 
        showSum: showSum
    };
})();
var PS = PS || {};
PS.Data_Tuple = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Extend = PS.Control_Extend;
    var Control_Comonad = PS.Control_Comonad;
    function Tuple(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Tuple.create = function (value0) {
        return function (value1) {
            return new Tuple(value0, value1);
        };
    };
    var zip = Data_Array.zipWith(Tuple.create);
    var unzip = function (_280) {
        if (_280.length >= 1) {
            var _745 = _280.slice(1);
            var _739 = unzip(_745);
            return new Tuple(Prelude[":"]((_280[0]).value0)(_739.value0), Prelude[":"]((_280[0]).value1)(_739.value1));
        };
        if (_280.length === 0) {
            return new Tuple([  ], [  ]);
        };
        throw new Error("Failed pattern match");
    };
    var uncurry = function (_278) {
        return function (_279) {
            return _278(_279.value0)(_279.value1);
        };
    };
    var swap = function (_281) {
        return new Tuple(_281.value1, _281.value0);
    };
    var snd = function (_277) {
        return _277.value1;
    };
    var showTuple = function (__dict_Show_89) {
        return function (__dict_Show_90) {
            return new Prelude.Show(function (_282) {
                return "Tuple (" + (Prelude.show(__dict_Show_89)(_282.value0) + (") (" + (Prelude.show(__dict_Show_90)(_282.value1) + ")")));
            });
        };
    };
    var semigroupoidTuple = new Prelude.Semigroupoid(function (_287) {
        return function (_288) {
            return new Tuple(_288.value0, _287.value1);
        };
    });
    var semigroupTuple = function (__dict_Semigroup_91) {
        return function (__dict_Semigroup_92) {
            return new Prelude.Semigroup(function (_289) {
                return function (_290) {
                    return new Tuple(Prelude["<>"](__dict_Semigroup_91)(_289.value0)(_290.value0), Prelude["<>"](__dict_Semigroup_92)(_289.value1)(_290.value1));
                };
            });
        };
    };
    var monoidTuple = function (__dict_Monoid_95) {
        return function (__dict_Monoid_96) {
            return new Data_Monoid.Monoid(function () {
                return semigroupTuple(__dict_Monoid_95["__superclass_Prelude.Semigroup_0"]())(__dict_Monoid_96["__superclass_Prelude.Semigroup_0"]());
            }, new Tuple(Data_Monoid.mempty(__dict_Monoid_95), Data_Monoid.mempty(__dict_Monoid_96)));
        };
    };
    var functorTuple = new Prelude.Functor(function (_291) {
        return function (_292) {
            return new Tuple(_292.value0, _291(_292.value1));
        };
    });
    var fst = function (_276) {
        return _276.value0;
    };
    var lazyLazy1Tuple = function (__dict_Lazy1_98) {
        return function (__dict_Lazy1_99) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer1(__dict_Lazy1_98)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer1(__dict_Lazy1_99)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyLazy2Tuple = function (__dict_Lazy2_100) {
        return function (__dict_Lazy2_101) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer2(__dict_Lazy2_100)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer2(__dict_Lazy2_101)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var lazyTuple = function (__dict_Lazy_102) {
        return function (__dict_Lazy_103) {
            return new Control_Lazy.Lazy(function (f) {
                return new Tuple(Control_Lazy.defer(__dict_Lazy_102)(function (_) {
                    return fst(f(Prelude.unit));
                }), Control_Lazy.defer(__dict_Lazy_103)(function (_) {
                    return snd(f(Prelude.unit));
                }));
            });
        };
    };
    var extendTuple = new Control_Extend.Extend(function (_297) {
        return function (_298) {
            return new Tuple(_298.value0, _297(_298));
        };
    }, function () {
        return functorTuple;
    });
    var eqTuple = function (__dict_Eq_104) {
        return function (__dict_Eq_105) {
            return new Prelude.Eq(function (t1) {
                return function (t2) {
                    return !Prelude["=="](eqTuple(__dict_Eq_104)(__dict_Eq_105))(t1)(t2);
                };
            }, function (_283) {
                return function (_284) {
                    return Prelude["=="](__dict_Eq_104)(_283.value0)(_284.value0) && Prelude["=="](__dict_Eq_105)(_283.value1)(_284.value1);
                };
            });
        };
    };
    var ordTuple = function (__dict_Ord_93) {
        return function (__dict_Ord_94) {
            return new Prelude.Ord(function () {
                return eqTuple(__dict_Ord_93["__superclass_Prelude.Eq_0"]())(__dict_Ord_94["__superclass_Prelude.Eq_0"]());
            }, function (_285) {
                return function (_286) {
                    var _790 = Prelude.compare(__dict_Ord_93)(_285.value0)(_286.value0);
                    if (_790 instanceof Prelude.EQ) {
                        return Prelude.compare(__dict_Ord_94)(_285.value1)(_286.value1);
                    };
                    return _790;
                };
            });
        };
    };
    var curry = function (f) {
        return function (a) {
            return function (b) {
                return f(new Tuple(a, b));
            };
        };
    };
    var comonadTuple = new Control_Comonad.Comonad(function () {
        return extendTuple;
    }, snd);
    var applyTuple = function (__dict_Semigroup_107) {
        return new Prelude.Apply(function (_293) {
            return function (_294) {
                return new Tuple(Prelude["<>"](__dict_Semigroup_107)(_293.value0)(_294.value0), _293.value1(_294.value1));
            };
        }, function () {
            return functorTuple;
        });
    };
    var bindTuple = function (__dict_Semigroup_106) {
        return new Prelude.Bind(function (_295) {
            return function (_296) {
                var _803 = _296(_295.value1);
                return new Tuple(Prelude["<>"](__dict_Semigroup_106)(_295.value0)(_803.value0), _803.value1);
            };
        }, function () {
            return applyTuple(__dict_Semigroup_106);
        });
    };
    var applicativeTuple = function (__dict_Monoid_108) {
        return new Prelude.Applicative(function () {
            return applyTuple(__dict_Monoid_108["__superclass_Prelude.Semigroup_0"]());
        }, Tuple.create(Data_Monoid.mempty(__dict_Monoid_108)));
    };
    var monadTuple = function (__dict_Monoid_97) {
        return new Prelude.Monad(function () {
            return applicativeTuple(__dict_Monoid_97);
        }, function () {
            return bindTuple(__dict_Monoid_97["__superclass_Prelude.Semigroup_0"]());
        });
    };
    return {
        Tuple: Tuple, 
        applicativeTuple: applicativeTuple, 
        applyTuple: applyTuple, 
        bindTuple: bindTuple, 
        comonadTuple: comonadTuple, 
        curry: curry, 
        eqTuple: eqTuple, 
        extendTuple: extendTuple, 
        fst: fst, 
        functorTuple: functorTuple, 
        lazyLazy1Tuple: lazyLazy1Tuple, 
        lazyLazy2Tuple: lazyLazy2Tuple, 
        lazyTuple: lazyTuple, 
        monadTuple: monadTuple, 
        monoidTuple: monoidTuple, 
        ordTuple: ordTuple, 
        semigroupTuple: semigroupTuple, 
        semigroupoidTuple: semigroupoidTuple, 
        showTuple: showTuple, 
        snd: snd, 
        swap: swap, 
        uncurry: uncurry, 
        unzip: unzip, 
        zip: zip
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Apply = PS.Control_Apply;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var ErrorT = {
        create: function (value) {
            return value;
        }
    };
    var runErrorT = function (_299) {
        return _299;
    };
    var monadTransErrorT = function (__dict_Error_111) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_112) {
            return function (m) {
                return ErrorT.create(Prelude[">>="](__dict_Monad_112["__superclass_Prelude.Bind_1"]())(m)(function (_7) {
                    return Prelude["return"](__dict_Monad_112)(new Data_Either.Right(_7));
                }));
            };
        });
    };
    var mapErrorT = function (f) {
        return function (m) {
            return ErrorT.create(f(runErrorT(m)));
        };
    };
    var liftPassError = function (__dict_Monad_117) {
        return function (pass) {
            return mapErrorT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_117["__superclass_Prelude.Bind_1"]())(m)(function (_9) {
                    return Prelude["return"](__dict_Monad_117)((function () {
                        if (_9 instanceof Data_Either.Left) {
                            return new Data_Tuple.Tuple(new Data_Either.Left(_9.value0), Prelude.id(Prelude.categoryArr));
                        };
                        if (_9 instanceof Data_Either.Right) {
                            return new Data_Tuple.Tuple(new Data_Either.Right(_9.value0.value0), _9.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenError = function (__dict_Monad_118) {
        return function (listen) {
            return mapErrorT(function (m) {
                return Prelude[">>="](__dict_Monad_118["__superclass_Prelude.Bind_1"]())(listen(m))(function (_8) {
                    return Prelude["return"](__dict_Monad_118)(Prelude["<$>"](Data_Either.functorEither)(function (r) {
                        return new Data_Tuple.Tuple(r, _8.value1);
                    })(_8.value0));
                });
            });
        };
    };
    var liftCallCCError = function (callCC) {
        return function (f) {
            return ErrorT.create(callCC(function (c) {
                return runErrorT(f(function (a) {
                    return ErrorT.create(c(new Data_Either.Right(a)));
                }));
            }));
        };
    };
    var functorErrorT = function (__dict_Functor_119) {
        return new Prelude.Functor(function (f) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(ErrorT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["<$>"](__dict_Functor_119)(Prelude["<$>"](Data_Either.functorEither)(f)))(runErrorT));
        });
    };
    var applyErrorT = function (__dict_Apply_122) {
        return new Prelude.Apply(function (_300) {
            return function (_301) {
                return ErrorT.create(Prelude["<*>"](__dict_Apply_122)(Prelude["<$>"](__dict_Apply_122["__superclass_Prelude.Functor_0"]())(Control_Apply.lift2(Data_Either.applyEither)(Prelude["$"]))(_300))(_301));
            };
        }, function () {
            return functorErrorT(__dict_Apply_122["__superclass_Prelude.Functor_0"]());
        });
    };
    var bindErrorT = function (__dict_Monad_120) {
        return function (__dict_Error_121) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_120["__superclass_Prelude.Bind_1"]())(runErrorT(m))(function (_6) {
                        if (_6 instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_120)(new Data_Either.Left(_6.value0));
                        };
                        if (_6 instanceof Data_Either.Right) {
                            return runErrorT(f(_6.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function () {
                return applyErrorT((__dict_Monad_120["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeErrorT = function (__dict_Applicative_123) {
        return new Prelude.Applicative(function () {
            return applyErrorT(__dict_Applicative_123["__superclass_Prelude.Apply_0"]());
        }, function (a) {
            return ErrorT.create(Prelude.pure(__dict_Applicative_123)(new Data_Either.Right(a)));
        });
    };
    var monadErrorT = function (__dict_Monad_115) {
        return function (__dict_Error_116) {
            return new Prelude.Monad(function () {
                return applicativeErrorT(__dict_Monad_115["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindErrorT(__dict_Monad_115)(__dict_Error_116);
            });
        };
    };
    var altErrorT = function (__dict_Monad_126) {
        return function (__dict_Error_127) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return ErrorT.create(Prelude[">>="](__dict_Monad_126["__superclass_Prelude.Bind_1"]())(runErrorT(x))(function (e) {
                        if (e instanceof Data_Either.Left) {
                            return runErrorT(y);
                        };
                        return Prelude["return"](__dict_Monad_126)(e);
                    }));
                };
            }, function () {
                return functorErrorT(((__dict_Monad_126["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusErrorT = function (__dict_Monad_109) {
        return function (__dict_Error_110) {
            return new Control_Plus.Plus(function () {
                return altErrorT(__dict_Monad_109)(__dict_Error_110);
            }, Prelude["return"](__dict_Monad_109)(Data_Either.Left.create(Control_Monad_Error.strMsg(__dict_Error_110)("No alternative"))));
        };
    };
    var alternativeErrorT = function (__dict_Monad_124) {
        return function (__dict_Error_125) {
            return new Control_Alternative.Alternative(function () {
                return plusErrorT(__dict_Monad_124)(__dict_Error_125);
            }, function () {
                return applicativeErrorT(__dict_Monad_124["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusErrorT = function (__dict_Monad_113) {
        return function (__dict_Error_114) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeErrorT(__dict_Monad_113)(__dict_Error_114);
            }, function () {
                return monadErrorT(__dict_Monad_113)(__dict_Error_114);
            });
        };
    };
    return {
        ErrorT: ErrorT, 
        altErrorT: altErrorT, 
        alternativeErrorT: alternativeErrorT, 
        applicativeErrorT: applicativeErrorT, 
        applyErrorT: applyErrorT, 
        bindErrorT: bindErrorT, 
        functorErrorT: functorErrorT, 
        liftCallCCError: liftCallCCError, 
        liftListenError: liftListenError, 
        liftPassError: liftPassError, 
        mapErrorT: mapErrorT, 
        monadErrorT: monadErrorT, 
        monadPlusErrorT: monadPlusErrorT, 
        monadTransErrorT: monadTransErrorT, 
        plusErrorT: plusErrorT, 
        runErrorT: runErrorT
    };
})();
var PS = PS || {};
PS.Control_Monad_Maybe_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Tuple = PS.Data_Tuple;
    var MaybeT = {
        create: function (value) {
            return value;
        }
    };
    var runMaybeT = function (_302) {
        return _302;
    };
    var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_128) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude.liftM1(__dict_Monad_128)(Data_Maybe.Just.create));
    });
    var mapMaybeT = function (f) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runMaybeT));
    };
    var liftPassMaybe = function (__dict_Monad_130) {
        return function (pass) {
            return mapMaybeT(function (m) {
                return pass(Prelude[">>="](__dict_Monad_130["__superclass_Prelude.Bind_1"]())(m)(function (_12) {
                    return Prelude["return"](__dict_Monad_130)((function () {
                        if (_12 instanceof Data_Maybe.Nothing) {
                            return new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Prelude.id(Prelude.categoryArr));
                        };
                        if (_12 instanceof Data_Maybe.Just) {
                            return new Data_Tuple.Tuple(new Data_Maybe.Just(_12.value0.value0), _12.value0.value1);
                        };
                        throw new Error("Failed pattern match");
                    })());
                }));
            });
        };
    };
    var liftListenMaybe = function (__dict_Monad_131) {
        return function (listen) {
            return mapMaybeT(function (m) {
                return Prelude[">>="](__dict_Monad_131["__superclass_Prelude.Bind_1"]())(listen(m))(function (_11) {
                    return Prelude["return"](__dict_Monad_131)(Prelude["<$>"](Data_Maybe.functorMaybe)(function (r) {
                        return new Data_Tuple.Tuple(r, _11.value1);
                    })(_11.value0));
                });
            });
        };
    };
    var liftCatchMaybe = function ($$catch) {
        return function (m) {
            return function (h) {
                return MaybeT.create($$catch(runMaybeT(m))(Prelude["<<<"](Prelude.semigroupoidArr)(runMaybeT)(h)));
            };
        };
    };
    var liftCallCCMaybe = function (callCC) {
        return function (f) {
            return MaybeT.create(callCC(function (c) {
                return runMaybeT(f(function (a) {
                    return MaybeT.create(c(new Data_Maybe.Just(a)));
                }));
            }));
        };
    };
    var monadMaybeT = function (__dict_Monad_129) {
        return new Prelude.Monad(function () {
            return applicativeMaybeT(__dict_Monad_129);
        }, function () {
            return bindMaybeT(__dict_Monad_129);
        });
    };
    var functorMaybeT = function (__dict_Monad_132) {
        return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(__dict_Monad_132)));
    };
    var bindMaybeT = function (__dict_Monad_133) {
        return new Prelude.Bind(function (x) {
            return function (f) {
                return MaybeT.create(Prelude[">>="](__dict_Monad_133["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (_10) {
                    if (_10 instanceof Data_Maybe.Nothing) {
                        return Prelude["return"](__dict_Monad_133)(Data_Maybe.Nothing.value);
                    };
                    if (_10 instanceof Data_Maybe.Just) {
                        return runMaybeT(f(_10.value0));
                    };
                    throw new Error("Failed pattern match");
                }));
            };
        }, function () {
            return applyMaybeT(__dict_Monad_133);
        });
    };
    var applyMaybeT = function (__dict_Monad_134) {
        return new Prelude.Apply(Prelude.ap(monadMaybeT(__dict_Monad_134)), function () {
            return functorMaybeT(__dict_Monad_134);
        });
    };
    var applicativeMaybeT = function (__dict_Monad_135) {
        return new Prelude.Applicative(function () {
            return applyMaybeT(__dict_Monad_135);
        }, Prelude["<<<"](Prelude.semigroupoidArr)(MaybeT.create)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.pure(__dict_Monad_135["__superclass_Prelude.Applicative_0"]()))(Data_Maybe.Just.create)));
    };
    return {
        MaybeT: MaybeT, 
        applicativeMaybeT: applicativeMaybeT, 
        applyMaybeT: applyMaybeT, 
        bindMaybeT: bindMaybeT, 
        functorMaybeT: functorMaybeT, 
        liftCallCCMaybe: liftCallCCMaybe, 
        liftCatchMaybe: liftCatchMaybe, 
        liftListenMaybe: liftListenMaybe, 
        liftPassMaybe: liftPassMaybe, 
        mapMaybeT: mapMaybeT, 
        monadMaybeT: monadMaybeT, 
        monadTransMaybeT: monadTransMaybeT, 
        runMaybeT: runMaybeT
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var RWST = {
        create: function (value) {
            return value;
        }
    };
    var runRWST = function (_305) {
        return _305;
    };
    var withRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Data_Tuple.uncurry(runRWST(m))(f(r)(s));
                };
            };
        };
    };
    var mkSee = function (__dict_Monoid_138) {
        return function (s) {
            return function (a) {
                return function (w) {
                    return {
                        state: s, 
                        result: a, 
                        log: w
                    };
                };
            };
        };
    };
    var monadTransRWST = function (__dict_Monoid_139) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_140) {
            return function (m) {
                return function (_) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_140["__superclass_Prelude.Bind_1"]())(m)(function (a) {
                            return Prelude["return"](__dict_Monad_140)(mkSee(__dict_Monoid_139)(s)(a)(Data_Monoid.mempty(__dict_Monoid_139)));
                        });
                    };
                };
            };
        });
    };
    var mapRWST = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return f(runRWST(m)(r)(s));
                };
            };
        };
    };
    var functorRWST = function (__dict_Functor_141) {
        return new Prelude.Functor(function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude["<$>"](__dict_Functor_141)(function (see) {
                            var _840 = {};
                            for (var _841 in see) {
                                if (see.hasOwnProperty(_841)) {
                                    _840[_841] = see[_841];
                                };
                            };
                            _840.result = f(see.result);
                            return _840;
                        })(runRWST(m)(r)(s));
                    };
                };
            };
        });
    };
    var execRWST = function (__dict_Monad_142) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_142["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_142)(new Data_Tuple.Tuple(see.state, see.log));
                    });
                };
            };
        };
    };
    var evalRWST = function (__dict_Monad_143) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_143["__superclass_Prelude.Bind_1"]())(runRWST(m)(r)(s))(function (see) {
                        return Prelude["return"](__dict_Monad_143)(new Data_Tuple.Tuple(see.result, see.log));
                    });
                };
            };
        };
    };
    var applyRWST = function (__dict_Apply_146) {
        return function (__dict_Semigroup_147) {
            return new Prelude.Apply(function (f) {
                return function (m) {
                    return function (r) {
                        return function (s) {
                            return Prelude["<*>"](__dict_Apply_146)(Prelude["<$>"](__dict_Apply_146["__superclass_Prelude.Functor_0"]())(function (_303) {
                                return function (see) {
                                    var _843 = {};
                                    for (var _844 in see) {
                                        if (see.hasOwnProperty(_844)) {
                                            _843[_844] = see[_844];
                                        };
                                    };
                                    _843.result = _303.result(see.result);
                                    _843.log = Prelude["<>"](__dict_Semigroup_147)(_303.log)(see.log);
                                    return _843;
                                };
                            })(runRWST(f)(r)(s)))(runRWST(m)(r)(s));
                        };
                    };
                };
            }, function () {
                return functorRWST(__dict_Apply_146["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindRWST = function (__dict_Bind_144) {
        return function (__dict_Semigroup_145) {
            return new Prelude.Bind(function (m) {
                return function (f) {
                    return function (r) {
                        return function (s) {
                            return Prelude[">>="](__dict_Bind_144)(runRWST(m)(r)(s))(function (_304) {
                                return Prelude["<$>"]((__dict_Bind_144["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (see$prime) {
                                    var _848 = {};
                                    for (var _849 in see$prime) {
                                        if (see$prime.hasOwnProperty(_849)) {
                                            _848[_849] = see$prime[_849];
                                        };
                                    };
                                    _848.log = Prelude["<>"](__dict_Semigroup_145)(_304.log)(see$prime.log);
                                    return _848;
                                })(runRWST(f(_304.result))(r)(_304.state));
                            });
                        };
                    };
                };
            }, function () {
                return applyRWST(__dict_Bind_144["__superclass_Prelude.Apply_0"]())(__dict_Semigroup_145);
            });
        };
    };
    var applicativeRWST = function (__dict_Applicative_148) {
        return function (__dict_Monoid_149) {
            return new Prelude.Applicative(function () {
                return applyRWST(__dict_Applicative_148["__superclass_Prelude.Apply_0"]())(__dict_Monoid_149["__superclass_Prelude.Semigroup_0"]());
            }, function (a) {
                return function (_) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_148)(mkSee(__dict_Monoid_149)(s)(a)(Data_Monoid.mempty(__dict_Monoid_149)));
                    };
                };
            });
        };
    };
    var monadRWST = function (__dict_Monad_136) {
        return function (__dict_Monoid_137) {
            return new Prelude.Monad(function () {
                return applicativeRWST(__dict_Monad_136["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_137);
            }, function () {
                return bindRWST(__dict_Monad_136["__superclass_Prelude.Bind_1"]())(__dict_Monoid_137["__superclass_Prelude.Semigroup_0"]());
            });
        };
    };
    return {
        RWST: RWST, 
        applicativeRWST: applicativeRWST, 
        applyRWST: applyRWST, 
        bindRWST: bindRWST, 
        evalRWST: evalRWST, 
        execRWST: execRWST, 
        functorRWST: functorRWST, 
        mapRWST: mapRWST, 
        mkSee: mkSee, 
        monadRWST: monadRWST, 
        monadTransRWST: monadTransRWST, 
        runRWST: runRWST, 
        withRWST: withRWST
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var writer = function (__dict_Applicative_150) {
        return function (_309) {
            return function (_) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_150)({
                        state: s, 
                        result: _309.value0, 
                        log: _309.value1
                    });
                };
            };
        };
    };
    var withRWS = Control_Monad_RWS_Trans.withRWST;
    var tell = function (__dict_Applicative_151) {
        return function (w) {
            return writer(__dict_Applicative_151)(new Data_Tuple.Tuple(Prelude.unit, w));
        };
    };
    var state = function (__dict_Applicative_152) {
        return function (__dict_Monoid_153) {
            return function (f) {
                return function (_) {
                    return function (s) {
                        var _856 = f(s);
                        return Prelude.pure(__dict_Applicative_152)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_153)(_856.value1)(_856.value0)(Data_Monoid.mempty(__dict_Monoid_153)));
                    };
                };
            };
        };
    };
    var rws = function (f) {
        return function (r) {
            return function (s) {
                return Prelude["return"](Control_Monad_Identity.monadIdentity)(f(r)(s));
            };
        };
    };
    var runRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.runRWST(m)(r)(s));
            };
        };
    };
    var reader = function (__dict_Applicative_154) {
        return function (__dict_Monoid_155) {
            return function (f) {
                return function (r) {
                    return function (s) {
                        return Prelude.pure(__dict_Applicative_154)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_155)(s)(f(r))(Data_Monoid.mempty(__dict_Monoid_155)));
                    };
                };
            };
        };
    };
    var put = function (__dict_Applicative_156) {
        return function (__dict_Monoid_157) {
            return function (s) {
                return state(__dict_Applicative_156)(__dict_Monoid_157)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var pass = function (__dict_Monad_158) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_158["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_307) {
                        return Prelude.pure(__dict_Monad_158["__superclass_Prelude.Applicative_0"]())({
                            state: _307.state, 
                            result: _307.result.value0, 
                            log: _307.result.value1(_307.log)
                        });
                    });
                };
            };
        };
    };
    var modify = function (__dict_Applicative_159) {
        return function (__dict_Monoid_160) {
            return function (f) {
                return state(__dict_Applicative_159)(__dict_Monoid_160)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var mapRWS = function (f) {
        return Control_Monad_RWS_Trans.mapRWST(Prelude[">>>"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(Prelude[">>>"](Prelude.semigroupoidArr)(f)(Control_Monad_Identity.Identity.create)));
    };
    var local = function (f) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Control_Monad_RWS_Trans.runRWST(m)(f(r))(s);
                };
            };
        };
    };
    var listens = function (__dict_Monad_161) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_161["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_308) {
                            return Prelude.pure(__dict_Monad_161["__superclass_Prelude.Applicative_0"]())({
                                state: _308.state, 
                                result: new Data_Tuple.Tuple(_308.result, f(_308.log)), 
                                log: _308.log
                            });
                        });
                    };
                };
            };
        };
    };
    var listen = function (__dict_Monad_162) {
        return function (m) {
            return function (r) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_162["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (_306) {
                        return Prelude.pure(__dict_Monad_162["__superclass_Prelude.Applicative_0"]())({
                            state: _306.state, 
                            result: new Data_Tuple.Tuple(_306.result, _306.log), 
                            log: _306.log
                        });
                    });
                };
            };
        };
    };
    var gets = function (__dict_Applicative_163) {
        return function (__dict_Monoid_164) {
            return function (f) {
                return state(__dict_Applicative_163)(__dict_Monoid_164)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Applicative_165) {
        return function (__dict_Monoid_166) {
            return state(__dict_Applicative_165)(__dict_Monoid_166)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    var execRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.execRWST(Control_Monad_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var evalRWS = function (m) {
        return function (r) {
            return function (s) {
                return Control_Monad_Identity.runIdentity(Control_Monad_RWS_Trans.evalRWST(Control_Monad_Identity.monadIdentity)(m)(r)(s));
            };
        };
    };
    var censor = function (__dict_Monad_167) {
        return function (f) {
            return function (m) {
                return function (r) {
                    return function (s) {
                        return Prelude[">>="](__dict_Monad_167["__superclass_Prelude.Bind_1"]())(Control_Monad_RWS_Trans.runRWST(m)(r)(s))(function (see) {
                            return Prelude.pure(__dict_Monad_167["__superclass_Prelude.Applicative_0"]())((function () {
                                var _873 = {};
                                for (var _874 in see) {
                                    if (see.hasOwnProperty(_874)) {
                                        _873[_874] = see[_874];
                                    };
                                };
                                _873.log = f(see.log);
                                return _873;
                            })());
                        });
                    };
                };
            };
        };
    };
    var ask = function (__dict_Applicative_168) {
        return function (__dict_Monoid_169) {
            return function (r) {
                return function (s) {
                    return Prelude.pure(__dict_Applicative_168)(Control_Monad_RWS_Trans.mkSee(__dict_Monoid_169)(s)(r)(Data_Monoid.mempty(__dict_Monoid_169)));
                };
            };
        };
    };
    return {
        ask: ask, 
        censor: censor, 
        evalRWS: evalRWS, 
        execRWS: execRWS, 
        get: get, 
        gets: gets, 
        listen: listen, 
        listens: listens, 
        local: local, 
        mapRWS: mapRWS, 
        modify: modify, 
        pass: pass, 
        put: put, 
        reader: reader, 
        runRWS: runRWS, 
        rws: rws, 
        state: state, 
        tell: tell, 
        withRWS: withRWS, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var StateT = {
        create: function (value) {
            return value;
        }
    };
    var runStateT = function (_312) {
        return _312;
    };
    var withStateT = function (f) {
        return function (s) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(runStateT(s))(f));
        };
    };
    var monadTransStateT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_172) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_172["__superclass_Prelude.Bind_1"]())(m)(function (_14) {
                    return Prelude["return"](__dict_Monad_172)(new Data_Tuple.Tuple(_14, s));
                });
            };
        };
    });
    var mapStateT = function (f) {
        return function (m) {
            return StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(f)(runStateT(m)));
        };
    };
    var liftPassState = function (__dict_Monad_175) {
        return function (pass) {
            return function (m) {
                return StateT.create(function (s) {
                    return pass(Prelude[">>="](__dict_Monad_175["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_16) {
                        return Prelude["return"](__dict_Monad_175)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_16.value0.value0, _16.value1), _16.value0.value1));
                    }));
                });
            };
        };
    };
    var liftListenState = function (__dict_Monad_176) {
        return function (listen) {
            return function (m) {
                return StateT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_176["__superclass_Prelude.Bind_1"]())(listen(runStateT(m)(s)))(function (_15) {
                        return Prelude["return"](__dict_Monad_176)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_15.value0.value0, _15.value1), _15.value0.value1));
                    });
                });
            };
        };
    };
    var liftCatchState = function ($$catch) {
        return function (m) {
            return function (h) {
                return StateT.create(function (s) {
                    return $$catch(runStateT(m)(s))(function (e) {
                        return runStateT(h(e))(s);
                    });
                });
            };
        };
    };
    var liftCallCCState$prime = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (s$prime) {
                            return c(new Data_Tuple.Tuple(a, s$prime));
                        });
                    }))(s);
                });
            });
        };
    };
    var liftCallCCState = function (callCC) {
        return function (f) {
            return StateT.create(function (s) {
                return callCC(function (c) {
                    return runStateT(f(function (a) {
                        return StateT.create(function (_) {
                            return c(new Data_Tuple.Tuple(a, s));
                        });
                    }))(s);
                });
            });
        };
    };
    var lazy1StateT = new Control_Lazy.Lazy1(function (f) {
        return StateT.create(function (s) {
            return runStateT(f(Prelude.unit))(s);
        });
    });
    var execStateT = function (__dict_Monad_178) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_178["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_311) {
                    return Prelude["return"](__dict_Monad_178)(_311.value1);
                });
            };
        };
    };
    var evalStateT = function (__dict_Monad_179) {
        return function (m) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_179["__superclass_Prelude.Bind_1"]())(runStateT(m)(s))(function (_310) {
                    return Prelude["return"](__dict_Monad_179)(_310.value0);
                });
            };
        };
    };
    var monadStateT = function (__dict_Monad_173) {
        return new Prelude.Monad(function () {
            return applicativeStateT(__dict_Monad_173);
        }, function () {
            return bindStateT(__dict_Monad_173);
        });
    };
    var functorStateT = function (__dict_Monad_177) {
        return new Prelude.Functor(Prelude.liftM1(monadStateT(__dict_Monad_177)));
    };
    var bindStateT = function (__dict_Monad_180) {
        return new Prelude.Bind(function (_313) {
            return function (_314) {
                return function (s) {
                    return Prelude[">>="](__dict_Monad_180["__superclass_Prelude.Bind_1"]())(_313(s))(function (_13) {
                        return runStateT(_314(_13.value0))(_13.value1);
                    });
                };
            };
        }, function () {
            return applyStateT(__dict_Monad_180);
        });
    };
    var applyStateT = function (__dict_Monad_181) {
        return new Prelude.Apply(Prelude.ap(monadStateT(__dict_Monad_181)), function () {
            return functorStateT(__dict_Monad_181);
        });
    };
    var applicativeStateT = function (__dict_Monad_182) {
        return new Prelude.Applicative(function () {
            return applyStateT(__dict_Monad_182);
        }, function (a) {
            return StateT.create(function (s) {
                return Prelude["return"](__dict_Monad_182)(new Data_Tuple.Tuple(a, s));
            });
        });
    };
    var altStateT = function (__dict_Monad_185) {
        return function (__dict_Alt_186) {
            return new Control_Alt.Alt(function (x) {
                return function (y) {
                    return StateT.create(function (s) {
                        return Control_Alt["<|>"](__dict_Alt_186)(runStateT(x)(s))(runStateT(y)(s));
                    });
                };
            }, function () {
                return functorStateT(__dict_Monad_185);
            });
        };
    };
    var plusStateT = function (__dict_Monad_170) {
        return function (__dict_Plus_171) {
            return new Control_Plus.Plus(function () {
                return altStateT(__dict_Monad_170)(__dict_Plus_171["__superclass_Control.Alt.Alt_0"]());
            }, StateT.create(function (_) {
                return Control_Plus.empty(__dict_Plus_171);
            }));
        };
    };
    var alternativeStateT = function (__dict_Monad_183) {
        return function (__dict_Alternative_184) {
            return new Control_Alternative.Alternative(function () {
                return plusStateT(__dict_Monad_183)(__dict_Alternative_184["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeStateT(__dict_Monad_183);
            });
        };
    };
    var monadPlusStateT = function (__dict_MonadPlus_174) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeStateT(__dict_MonadPlus_174["__superclass_Prelude.Monad_0"]())(__dict_MonadPlus_174["__superclass_Control.Alternative.Alternative_1"]());
        }, function () {
            return monadStateT(__dict_MonadPlus_174["__superclass_Prelude.Monad_0"]());
        });
    };
    return {
        StateT: StateT, 
        altStateT: altStateT, 
        alternativeStateT: alternativeStateT, 
        applicativeStateT: applicativeStateT, 
        applyStateT: applyStateT, 
        bindStateT: bindStateT, 
        evalStateT: evalStateT, 
        execStateT: execStateT, 
        functorStateT: functorStateT, 
        lazy1StateT: lazy1StateT, 
        liftCallCCState: liftCallCCState, 
        "liftCallCCState'": liftCallCCState$prime, 
        liftCatchState: liftCatchState, 
        liftListenState: liftListenState, 
        liftPassState: liftPassState, 
        mapStateT: mapStateT, 
        monadPlusStateT: monadPlusStateT, 
        monadStateT: monadStateT, 
        monadTransStateT: monadTransStateT, 
        plusStateT: plusStateT, 
        runStateT: runStateT, 
        withStateT: withStateT
    };
})();
var PS = PS || {};
PS.Control_Monad_State = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Data_Tuple = PS.Data_Tuple;
    var withState = Control_Monad_State_Trans.withStateT;
    var runState = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(Control_Monad_State_Trans.runStateT(s));
    };
    var mapState = function (f) {
        return Control_Monad_State_Trans.mapStateT(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Control_Monad_Identity.runIdentity)));
    };
    var execState = function (m) {
        return function (s) {
            return Data_Tuple.snd(runState(m)(s));
        };
    };
    var evalState = function (m) {
        return function (s) {
            return Data_Tuple.fst(runState(m)(s));
        };
    };
    return {
        evalState: evalState, 
        execState: execState, 
        mapState: mapState, 
        runState: runState, 
        withState: withState
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Trans = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Monoid = PS.Data_Monoid;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    var WriterT = {
        create: function (value) {
            return value;
        }
    };
    var runWriterT = function (_316) {
        return _316;
    };
    var monadTransWriterT = function (__dict_Monoid_191) {
        return new Control_Monad_Trans.MonadTrans(function (__dict_Monad_192) {
            return function (m) {
                return WriterT.create(Prelude[">>="](__dict_Monad_192["__superclass_Prelude.Bind_1"]())(m)(function (_19) {
                    return Prelude["return"](__dict_Monad_192)(new Data_Tuple.Tuple(_19, Data_Monoid.mempty(__dict_Monoid_191)));
                }));
            };
        });
    };
    var mapWriterT = function (f) {
        return function (m) {
            return WriterT.create(f(runWriterT(m)));
        };
    };
    var liftCatchWriter = function ($$catch) {
        return function (m) {
            return function (h) {
                return WriterT.create($$catch(runWriterT(m))(function (e) {
                    return runWriterT(h(e));
                }));
            };
        };
    };
    var liftCallCCWriter = function (__dict_Monoid_195) {
        return function (callCC) {
            return function (f) {
                return WriterT.create(callCC(function (c) {
                    return runWriterT(f(function (a) {
                        return WriterT.create(c(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_195))));
                    }));
                }));
            };
        };
    };
    var functorWriterT = function (__dict_Functor_196) {
        return new Prelude.Functor(function (f) {
            return mapWriterT(Prelude["<$>"](__dict_Functor_196)(function (_315) {
                return new Data_Tuple.Tuple(f(_315.value0), _315.value1);
            }));
        });
    };
    var applyWriterT = function (__dict_Monoid_199) {
        return function (__dict_Apply_200) {
            return new Prelude.Apply(function (f) {
                return function (v) {
                    return WriterT.create((function () {
                        var k = function (_317) {
                            return function (_318) {
                                return new Data_Tuple.Tuple(_317.value0(_318.value0), Prelude["<>"](__dict_Monoid_199["__superclass_Prelude.Semigroup_0"]())(_317.value1)(_318.value1));
                            };
                        };
                        return Prelude["<*>"](__dict_Apply_200)(Prelude["<$>"](__dict_Apply_200["__superclass_Prelude.Functor_0"]())(k)(runWriterT(f)))(runWriterT(v));
                    })());
                };
            }, function () {
                return functorWriterT(__dict_Apply_200["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var bindWriterT = function (__dict_Monoid_197) {
        return function (__dict_Monad_198) {
            return new Prelude.Bind(function (m) {
                return function (k) {
                    return WriterT.create(Prelude[">>="](__dict_Monad_198["__superclass_Prelude.Bind_1"]())(runWriterT(m))(function (_18) {
                        return Prelude[">>="](__dict_Monad_198["__superclass_Prelude.Bind_1"]())(runWriterT(k(_18.value0)))(function (_17) {
                            return Prelude["return"](__dict_Monad_198)(new Data_Tuple.Tuple(_17.value0, Prelude["<>"](__dict_Monoid_197["__superclass_Prelude.Semigroup_0"]())(_18.value1)(_17.value1)));
                        });
                    }));
                };
            }, function () {
                return applyWriterT(__dict_Monoid_197)((__dict_Monad_198["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]());
            });
        };
    };
    var applicativeWriterT = function (__dict_Monoid_201) {
        return function (__dict_Applicative_202) {
            return new Prelude.Applicative(function () {
                return applyWriterT(__dict_Monoid_201)(__dict_Applicative_202["__superclass_Prelude.Apply_0"]());
            }, function (a) {
                return WriterT.create(Prelude.pure(__dict_Applicative_202)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(__dict_Monoid_201))));
            });
        };
    };
    var monadWriterT = function (__dict_Monoid_189) {
        return function (__dict_Monad_190) {
            return new Prelude.Monad(function () {
                return applicativeWriterT(__dict_Monoid_189)(__dict_Monad_190["__superclass_Prelude.Applicative_0"]());
            }, function () {
                return bindWriterT(__dict_Monoid_189)(__dict_Monad_190);
            });
        };
    };
    var altWriterT = function (__dict_Monoid_205) {
        return function (__dict_Alt_206) {
            return new Control_Alt.Alt(function (m) {
                return function (n) {
                    return WriterT.create(Control_Alt["<|>"](__dict_Alt_206)(runWriterT(m))(runWriterT(n)));
                };
            }, function () {
                return functorWriterT(__dict_Alt_206["__superclass_Prelude.Functor_0"]());
            });
        };
    };
    var plusWriterT = function (__dict_Monoid_187) {
        return function (__dict_Plus_188) {
            return new Control_Plus.Plus(function () {
                return altWriterT(__dict_Monoid_187)(__dict_Plus_188["__superclass_Control.Alt.Alt_0"]());
            }, Control_Plus.empty(__dict_Plus_188));
        };
    };
    var alternativeWriterT = function (__dict_Monoid_203) {
        return function (__dict_Alternative_204) {
            return new Control_Alternative.Alternative(function () {
                return plusWriterT(__dict_Monoid_203)(__dict_Alternative_204["__superclass_Control.Plus.Plus_1"]());
            }, function () {
                return applicativeWriterT(__dict_Monoid_203)(__dict_Alternative_204["__superclass_Prelude.Applicative_0"]());
            });
        };
    };
    var monadPlusWriterT = function (__dict_Monoid_193) {
        return function (__dict_MonadPlus_194) {
            return new Control_MonadPlus.MonadPlus(function () {
                return alternativeWriterT(__dict_Monoid_193)(__dict_MonadPlus_194["__superclass_Control.Alternative.Alternative_1"]());
            }, function () {
                return monadWriterT(__dict_Monoid_193)(__dict_MonadPlus_194["__superclass_Prelude.Monad_0"]());
            });
        };
    };
    return {
        WriterT: WriterT, 
        altWriterT: altWriterT, 
        alternativeWriterT: alternativeWriterT, 
        applicativeWriterT: applicativeWriterT, 
        applyWriterT: applyWriterT, 
        bindWriterT: bindWriterT, 
        functorWriterT: functorWriterT, 
        liftCallCCWriter: liftCallCCWriter, 
        liftCatchWriter: liftCatchWriter, 
        mapWriterT: mapWriterT, 
        monadPlusWriterT: monadPlusWriterT, 
        monadTransWriterT: monadTransWriterT, 
        monadWriterT: monadWriterT, 
        plusWriterT: plusWriterT, 
        runWriterT: runWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Cont_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Cont_Trans = PS.Control_Monad_Cont_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadCont(callCC) {
        this.callCC = callCC;
    };
    var monadContContT = function (__dict_Monad_207) {
        return new MonadCont(Control_Monad_Cont_Trans.callCC);
    };
    var callCC = function (dict) {
        return dict.callCC;
    };
    var monadContErrorT = function (__dict_Error_208) {
        return function (__dict_MonadCont_209) {
            return new MonadCont(Control_Monad_Error_Trans.liftCallCCError(callCC(__dict_MonadCont_209)));
        };
    };
    var monadContMaybeT = function (__dict_MonadCont_210) {
        return new MonadCont(Control_Monad_Maybe_Trans.liftCallCCMaybe(callCC(__dict_MonadCont_210)));
    };
    var monadContReaderT = function (__dict_MonadCont_211) {
        return new MonadCont(Control_Monad_Reader_Trans.liftCallCCReader(callCC(__dict_MonadCont_211)));
    };
    var monadContStateT = function (__dict_MonadCont_212) {
        return new MonadCont(Control_Monad_State_Trans["liftCallCCState'"](callCC(__dict_MonadCont_212)));
    };
    var monadWriterT = function (__dict_Monoid_213) {
        return function (__dict_MonadCont_214) {
            return new MonadCont(Control_Monad_Writer_Trans.liftCallCCWriter(__dict_Monoid_213)(callCC(__dict_MonadCont_214)));
        };
    };
    return {
        MonadCont: MonadCont, 
        callCC: callCC, 
        monadContContT: monadContContT, 
        monadContErrorT: monadContErrorT, 
        monadContMaybeT: monadContMaybeT, 
        monadContReaderT: monadContReaderT, 
        monadContStateT: monadContStateT, 
        monadWriterT: monadWriterT
    };
})();
var PS = PS || {};
PS.Control_Monad_Error_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadError(catchError, throwError) {
        this.catchError = catchError;
        this.throwError = throwError;
    };
    var throwError = function (dict) {
        return dict.throwError;
    };
    var monadErrorErrorT = function (__dict_Monad_215) {
        return function (__dict_Error_216) {
            return new MonadError(function (m) {
                return function (h) {
                    return Control_Monad_Error_Trans.ErrorT.create(Prelude[">>="](__dict_Monad_215["__superclass_Prelude.Bind_1"]())(Control_Monad_Error_Trans.runErrorT(m))(function (_20) {
                        if (_20 instanceof Data_Either.Left) {
                            return Control_Monad_Error_Trans.runErrorT(h(_20.value0));
                        };
                        if (_20 instanceof Data_Either.Right) {
                            return Prelude["return"](__dict_Monad_215)(new Data_Either.Right(_20.value0));
                        };
                        throw new Error("Failed pattern match");
                    }));
                };
            }, function (e) {
                return Control_Monad_Error_Trans.ErrorT.create(Prelude["return"](__dict_Monad_215)(new Data_Either.Left(e)));
            });
        };
    };
    var monadErrorError = function (__dict_Error_217) {
        return new MonadError(function (_319) {
            return function (_320) {
                if (_319 instanceof Data_Either.Left) {
                    return _320(_319.value0);
                };
                if (_319 instanceof Data_Either.Right) {
                    return new Data_Either.Right(_319.value0);
                };
                throw new Error("Failed pattern match");
            };
        }, Data_Either.Left.create);
    };
    var catchError = function (dict) {
        return dict.catchError;
    };
    var monadErrorMaybeT = function (__dict_Monad_218) {
        return function (__dict_MonadError_219) {
            return new MonadError(Control_Monad_Maybe_Trans.liftCatchMaybe(catchError(__dict_MonadError_219)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_218)(throwError(__dict_MonadError_219)(e));
            });
        };
    };
    var monadErrorReaderT = function (__dict_Monad_220) {
        return function (__dict_MonadError_221) {
            return new MonadError(Control_Monad_Reader_Trans.liftCatchReader(catchError(__dict_MonadError_221)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_220)(throwError(__dict_MonadError_221)(e));
            });
        };
    };
    var monadErrorStateT = function (__dict_Monad_222) {
        return function (__dict_MonadError_223) {
            return new MonadError(Control_Monad_State_Trans.liftCatchState(catchError(__dict_MonadError_223)), function (e) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_222)(throwError(__dict_MonadError_223)(e));
            });
        };
    };
    var monadErrorWriterT = function (__dict_Monad_224) {
        return function (__dict_Monoid_225) {
            return function (__dict_MonadError_226) {
                return new MonadError(Control_Monad_Writer_Trans.liftCatchWriter(catchError(__dict_MonadError_226)), function (e) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_225))(__dict_Monad_224)(throwError(__dict_MonadError_226)(e));
                });
            };
        };
    };
    return {
        MonadError: MonadError, 
        catchError: catchError, 
        monadErrorError: monadErrorError, 
        monadErrorErrorT: monadErrorErrorT, 
        monadErrorMaybeT: monadErrorMaybeT, 
        monadErrorReaderT: monadErrorReaderT, 
        monadErrorStateT: monadErrorStateT, 
        monadErrorWriterT: monadErrorWriterT, 
        throwError: throwError
    };
})();
var PS = PS || {};
PS.Control_Monad_Reader_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    function MonadReader(ask, local) {
        this.ask = ask;
        this.local = local;
    };
    var monadReaderReaderT = function (__dict_Monad_227) {
        return new MonadReader(Prelude["return"](__dict_Monad_227), Control_Monad_Reader_Trans.withReaderT);
    };
    var monadReaderRWST = function (__dict_Monad_228) {
        return function (__dict_Monoid_229) {
            return new MonadReader(Control_Monad_RWS.ask(__dict_Monad_228["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_229), Control_Monad_RWS.local);
        };
    };
    var monadReaderFun = new MonadReader(Prelude.id(Prelude.categoryArr), Prelude[">>>"](Prelude.semigroupoidArr));
    var local = function (dict) {
        return dict.local;
    };
    var ask = function (dict) {
        return dict.ask;
    };
    var monadReaderErrorT = function (__dict_Monad_230) {
        return function (__dict_Error_231) {
            return function (__dict_MonadReader_232) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_231))(__dict_Monad_230)(ask(__dict_MonadReader_232)), function (f) {
                    return Control_Monad_Error_Trans.mapErrorT(local(__dict_MonadReader_232)(f));
                });
            };
        };
    };
    var monadReaderMaybeT = function (__dict_Monad_233) {
        return function (__dict_MonadReader_234) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_233)(ask(__dict_MonadReader_234)), function (f) {
                return Control_Monad_Maybe_Trans.mapMaybeT(local(__dict_MonadReader_234)(f));
            });
        };
    };
    var monadReaderStateT = function (__dict_Monad_235) {
        return function (__dict_MonadReader_236) {
            return new MonadReader(Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_235)(ask(__dict_MonadReader_236)), function (f) {
                return Control_Monad_State_Trans.mapStateT(local(__dict_MonadReader_236)(f));
            });
        };
    };
    var monadReaderWriterT = function (__dict_Monad_237) {
        return function (__dict_Monoid_238) {
            return function (__dict_MonadReader_239) {
                return new MonadReader(Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_238))(__dict_Monad_237)(ask(__dict_MonadReader_239)), function (f) {
                    return Control_Monad_Writer_Trans.mapWriterT(local(__dict_MonadReader_239)(f));
                });
            };
        };
    };
    var reader = function (__dict_Monad_240) {
        return function (__dict_MonadReader_241) {
            return function (f) {
                return Prelude[">>="](__dict_Monad_240["__superclass_Prelude.Bind_1"]())(ask(__dict_MonadReader_241))(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_240))(f));
            };
        };
    };
    return {
        MonadReader: MonadReader, 
        ask: ask, 
        local: local, 
        monadReaderErrorT: monadReaderErrorT, 
        monadReaderFun: monadReaderFun, 
        monadReaderMaybeT: monadReaderMaybeT, 
        monadReaderRWST: monadReaderRWST, 
        monadReaderReaderT: monadReaderReaderT, 
        monadReaderStateT: monadReaderStateT, 
        monadReaderWriterT: monadReaderWriterT, 
        reader: reader
    };
})();
var PS = PS || {};
PS.Control_Monad_State_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadState(state) {
        this.state = state;
    };
    var state = function (dict) {
        return dict.state;
    };
    var put = function (__dict_Monad_242) {
        return function (__dict_MonadState_243) {
            return function (s) {
                return state(__dict_MonadState_243)(function (_) {
                    return new Data_Tuple.Tuple(Prelude.unit, s);
                });
            };
        };
    };
    var monadStateWriterT = function (__dict_Monad_244) {
        return function (__dict_Monoid_245) {
            return function (__dict_MonadState_246) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Writer_Trans.monadTransWriterT(__dict_Monoid_245))(__dict_Monad_244)(state(__dict_MonadState_246)(f));
                });
            };
        };
    };
    var monadStateStateT1 = function (__dict_Monad_247) {
        return function (__dict_MonadState_248) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_247)(state(__dict_MonadState_248)(f));
            });
        };
    };
    var monadStateStateT = function (__dict_Monad_249) {
        return new MonadState(function (f) {
            return Control_Monad_State_Trans.StateT.create(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["return"](__dict_Monad_249))(f));
        });
    };
    var monadStateReaderT = function (__dict_Monad_250) {
        return function (__dict_MonadState_251) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_250)(state(__dict_MonadState_251)(f));
            });
        };
    };
    var monadStateRWST = function (__dict_Monad_252) {
        return function (__dict_Monoid_253) {
            return new MonadState(Control_Monad_RWS.state(__dict_Monad_252["__superclass_Prelude.Applicative_0"]())(__dict_Monoid_253));
        };
    };
    var monadStateMaybeT = function (__dict_Monad_254) {
        return function (__dict_MonadState_255) {
            return new MonadState(function (f) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_254)(state(__dict_MonadState_255)(f));
            });
        };
    };
    var monadStateErrorT = function (__dict_Monad_256) {
        return function (__dict_Error_257) {
            return function (__dict_MonadState_258) {
                return new MonadState(function (f) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_257))(__dict_Monad_256)(state(__dict_MonadState_258)(f));
                });
            };
        };
    };
    var modify = function (__dict_Monad_259) {
        return function (__dict_MonadState_260) {
            return function (f) {
                return state(__dict_MonadState_260)(function (s) {
                    return new Data_Tuple.Tuple(Prelude.unit, f(s));
                });
            };
        };
    };
    var gets = function (__dict_Monad_261) {
        return function (__dict_MonadState_262) {
            return function (f) {
                return state(__dict_MonadState_262)(function (s) {
                    return new Data_Tuple.Tuple(f(s), s);
                });
            };
        };
    };
    var get = function (__dict_Monad_263) {
        return function (__dict_MonadState_264) {
            return state(__dict_MonadState_264)(function (s) {
                return new Data_Tuple.Tuple(s, s);
            });
        };
    };
    return {
        MonadState: MonadState, 
        get: get, 
        gets: gets, 
        modify: modify, 
        monadStateErrorT: monadStateErrorT, 
        monadStateMaybeT: monadStateMaybeT, 
        monadStateRWST: monadStateRWST, 
        monadStateReaderT: monadStateReaderT, 
        monadStateStateT: monadStateStateT, 
        monadStateStateT1: monadStateStateT1, 
        monadStateWriterT: monadStateWriterT, 
        put: put, 
        state: state
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Data_Tuple = PS.Data_Tuple;
    var runWriter = Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(Control_Monad_Writer_Trans.runWriterT);
    var mapWriter = function (f) {
        return Control_Monad_Writer_Trans.mapWriterT(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.Identity.create)(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Control_Monad_Identity.runIdentity)));
    };
    var execWriter = function (m) {
        return Data_Tuple.snd(runWriter(m));
    };
    return {
        execWriter: execWriter, 
        mapWriter: mapWriter, 
        runWriter: runWriter
    };
})();
var PS = PS || {};
PS.Control_Monad_Writer_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Writer_Trans = PS.Control_Monad_Writer_Trans;
    var Control_Monad_RWS = PS.Control_Monad_RWS;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Reader_Trans = PS.Control_Monad_Reader_Trans;
    var Control_Monad_State_Trans = PS.Control_Monad_State_Trans;
    function MonadWriter(listen, pass, writer) {
        this.listen = listen;
        this.pass = pass;
        this.writer = writer;
    };
    var writer = function (dict) {
        return dict.writer;
    };
    var tell = function (__dict_Monoid_265) {
        return function (__dict_Monad_266) {
            return function (__dict_MonadWriter_267) {
                return function (w) {
                    return writer(__dict_MonadWriter_267)(new Data_Tuple.Tuple(Prelude.unit, w));
                };
            };
        };
    };
    var pass = function (dict) {
        return dict.pass;
    };
    var monadWriterWriterT = function (__dict_Monoid_268) {
        return function (__dict_Monad_269) {
            return new MonadWriter(function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_269["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_23) {
                    return Prelude["return"](__dict_Monad_269)(new Data_Tuple.Tuple(new Data_Tuple.Tuple(_23.value0, _23.value1), _23.value1));
                }));
            }, function (m) {
                return Control_Monad_Writer_Trans.WriterT.create(Prelude[">>="](__dict_Monad_269["__superclass_Prelude.Bind_1"]())(Control_Monad_Writer_Trans.runWriterT(m))(function (_24) {
                    return Prelude["return"](__dict_Monad_269)(new Data_Tuple.Tuple(_24.value0.value0, _24.value0.value1(_24.value1)));
                }));
            }, Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Writer_Trans.WriterT.create)(Prelude["return"](__dict_Monad_269)));
        };
    };
    var monadWriterRWST = function (__dict_Monad_270) {
        return function (__dict_Monoid_271) {
            return new MonadWriter(Control_Monad_RWS.listen(__dict_Monad_270), Control_Monad_RWS.pass(__dict_Monad_270), Control_Monad_RWS.writer(__dict_Monad_270["__superclass_Prelude.Applicative_0"]()));
        };
    };
    var listen = function (dict) {
        return dict.listen;
    };
    var listens = function (__dict_Monoid_272) {
        return function (__dict_Monad_273) {
            return function (__dict_MonadWriter_274) {
                return function (f) {
                    return function (m) {
                        return Prelude[">>="](__dict_Monad_273["__superclass_Prelude.Bind_1"]())(listen(__dict_MonadWriter_274)(m))(function (_21) {
                            return Prelude["return"](__dict_Monad_273)(new Data_Tuple.Tuple(_21.value0, f(_21.value1)));
                        });
                    };
                };
            };
        };
    };
    var monadWriterErrorT = function (__dict_Monad_275) {
        return function (__dict_Error_276) {
            return function (__dict_MonadWriter_277) {
                return new MonadWriter(Control_Monad_Error_Trans.liftListenError(__dict_Monad_275)(listen(__dict_MonadWriter_277)), Control_Monad_Error_Trans.liftPassError(__dict_Monad_275)(pass(__dict_MonadWriter_277)), function (wd) {
                    return Control_Monad_Trans.lift(Control_Monad_Error_Trans.monadTransErrorT(__dict_Error_276))(__dict_Monad_275)(writer(__dict_MonadWriter_277)(wd));
                });
            };
        };
    };
    var monadWriterMaybeT = function (__dict_Monad_278) {
        return function (__dict_MonadWriter_279) {
            return new MonadWriter(Control_Monad_Maybe_Trans.liftListenMaybe(__dict_Monad_278)(listen(__dict_MonadWriter_279)), Control_Monad_Maybe_Trans.liftPassMaybe(__dict_Monad_278)(pass(__dict_MonadWriter_279)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(__dict_Monad_278)(writer(__dict_MonadWriter_279)(wd));
            });
        };
    };
    var monadWriterReaderT = function (__dict_Monad_280) {
        return function (__dict_MonadWriter_281) {
            return new MonadWriter(Control_Monad_Reader_Trans.mapReaderT(listen(__dict_MonadWriter_281)), Control_Monad_Reader_Trans.mapReaderT(pass(__dict_MonadWriter_281)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_Reader_Trans.monadTransReaderT)(__dict_Monad_280)(writer(__dict_MonadWriter_281)(wd));
            });
        };
    };
    var monadWriterStateT = function (__dict_Monad_282) {
        return function (__dict_MonadWriter_283) {
            return new MonadWriter(Control_Monad_State_Trans.liftListenState(__dict_Monad_282)(listen(__dict_MonadWriter_283)), Control_Monad_State_Trans.liftPassState(__dict_Monad_282)(pass(__dict_MonadWriter_283)), function (wd) {
                return Control_Monad_Trans.lift(Control_Monad_State_Trans.monadTransStateT)(__dict_Monad_282)(writer(__dict_MonadWriter_283)(wd));
            });
        };
    };
    var censor = function (__dict_Monoid_284) {
        return function (__dict_Monad_285) {
            return function (__dict_MonadWriter_286) {
                return function (f) {
                    return function (m) {
                        return pass(__dict_MonadWriter_286)(Prelude[">>="](__dict_Monad_285["__superclass_Prelude.Bind_1"]())(m)(function (_22) {
                            return Prelude["return"](__dict_Monad_285)(new Data_Tuple.Tuple(_22, f));
                        }));
                    };
                };
            };
        };
    };
    return {
        MonadWriter: MonadWriter, 
        censor: censor, 
        listen: listen, 
        listens: listens, 
        monadWriterErrorT: monadWriterErrorT, 
        monadWriterMaybeT: monadWriterMaybeT, 
        monadWriterRWST: monadWriterRWST, 
        monadWriterReaderT: monadWriterReaderT, 
        monadWriterStateT: monadWriterStateT, 
        monadWriterWriterT: monadWriterWriterT, 
        pass: pass, 
        tell: tell, 
        writer: writer
    };
})();
var PS = PS || {};
PS.Control_Monad_RWS_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_RWS_Trans = PS.Control_Monad_RWS_Trans;
    var Control_Monad_Reader_Class = PS.Control_Monad_Reader_Class;
    var Control_Monad_Writer_Class = PS.Control_Monad_Writer_Class;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Control_Monad_Maybe_Trans = PS.Control_Monad_Maybe_Trans;
    var Control_Monad_Error_Trans = PS.Control_Monad_Error_Trans;
    function MonadRWS(__superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2, __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4, __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3, __superclass_Data$dotMonoid$dotMonoid_1, __superclass_Prelude$dotMonad_0) {
        this["__superclass_Control.Monad.Reader.Class.MonadReader_2"] = __superclass_Control$dotMonad$dotReader$dotClass$dotMonadReader_2;
        this["__superclass_Control.Monad.State.Class.MonadState_4"] = __superclass_Control$dotMonad$dotState$dotClass$dotMonadState_4;
        this["__superclass_Control.Monad.Writer.Class.MonadWriter_3"] = __superclass_Control$dotMonad$dotWriter$dotClass$dotMonadWriter_3;
        this["__superclass_Data.Monoid.Monoid_1"] = __superclass_Data$dotMonoid$dotMonoid_1;
        this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
    };
    var monadRWSRWST = function (__dict_Monad_287) {
        return function (__dict_Monoid_288) {
            return new MonadRWS(function () {
                return Control_Monad_Reader_Class.monadReaderRWST(__dict_Monad_287)(__dict_Monoid_288);
            }, function () {
                return Control_Monad_State_Class.monadStateRWST(__dict_Monad_287)(__dict_Monoid_288);
            }, function () {
                return Control_Monad_Writer_Class.monadWriterRWST(__dict_Monad_287)(__dict_Monoid_288);
            }, function () {
                return __dict_Monoid_288;
            }, function () {
                return Control_Monad_RWS_Trans.monadRWST(__dict_Monad_287)(__dict_Monoid_288);
            });
        };
    };
    var monadRWSMaybeT = function (__dict_Monad_289) {
        return function (__dict_Monoid_290) {
            return function (__dict_MonadRWS_291) {
                return function (__dict_MonadReader_292) {
                    return function (__dict_MonadWriter_293) {
                        return function (__dict_MonadState_294) {
                            return new MonadRWS(function () {
                                return Control_Monad_Reader_Class.monadReaderMaybeT(__dict_Monad_289)(__dict_MonadReader_292);
                            }, function () {
                                return Control_Monad_State_Class.monadStateMaybeT(__dict_Monad_289)(__dict_MonadState_294);
                            }, function () {
                                return Control_Monad_Writer_Class.monadWriterMaybeT(__dict_Monad_289)(__dict_MonadWriter_293);
                            }, function () {
                                return __dict_Monoid_290;
                            }, function () {
                                return Control_Monad_Maybe_Trans.monadMaybeT(__dict_Monad_289);
                            });
                        };
                    };
                };
            };
        };
    };
    var monadRWSErrorT = function (__dict_Monad_295) {
        return function (__dict_Monoid_296) {
            return function (__dict_MonadRWS_297) {
                return function (__dict_MonadReader_298) {
                    return function (__dict_MonadWriter_299) {
                        return function (__dict_MonadState_300) {
                            return function (__dict_Error_301) {
                                return new MonadRWS(function () {
                                    return Control_Monad_Reader_Class.monadReaderErrorT(__dict_Monad_295)(__dict_Error_301)(__dict_MonadReader_298);
                                }, function () {
                                    return Control_Monad_State_Class.monadStateErrorT(__dict_Monad_295)(__dict_Error_301)(__dict_MonadState_300);
                                }, function () {
                                    return Control_Monad_Writer_Class.monadWriterErrorT(__dict_Monad_295)(__dict_Error_301)(__dict_MonadWriter_299);
                                }, function () {
                                    return __dict_Monoid_296;
                                }, function () {
                                    return Control_Monad_Error_Trans.monadErrorT(__dict_Monad_295)(__dict_Error_301);
                                });
                            };
                        };
                    };
                };
            };
        };
    };
    return {
        MonadRWS: MonadRWS, 
        monadRWSErrorT: monadRWSErrorT, 
        monadRWSMaybeT: monadRWSMaybeT, 
        monadRWSRWST: monadRWSRWST
    };
})();
var PS = PS || {};
PS.Data_Enum = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Char = PS.Data_Char;
    var Data_Either = PS.Data_Either;
    var Data_Tuple = PS.Data_Tuple;
    var Cardinality = {
        create: function (value) {
            return value;
        }
    };
    function Enum(__superclass_Prelude$dotOrd_0, cardinality, firstEnum, lastEnum, pred, succ) {
        this["__superclass_Prelude.Ord_0"] = __superclass_Prelude$dotOrd_0;
        this.cardinality = cardinality;
        this.firstEnum = firstEnum;
        this.lastEnum = lastEnum;
        this.pred = pred;
        this.succ = succ;
    };
    var succ = function (dict) {
        return dict.succ;
    };
    var runCardinality = function (_321) {
        return _321;
    };
    var tupleCardinality = function (__dict_Enum_302) {
        return function (__dict_Enum_303) {
            return function (l) {
                return function (r) {
                    return Cardinality.create(runCardinality(l) * runCardinality(r));
                };
            };
        };
    };
    var pred = function (dict) {
        return dict.pred;
    };
    var maybeCardinality = function (__dict_Enum_304) {
        return function (c) {
            return Cardinality.create(1 + runCardinality(c));
        };
    };
    var lastEnum = function (dict) {
        return dict.lastEnum;
    };
    var fromEnum = function (__dict_Enum_305) {
        return function (e) {
            return Data_Maybe.maybe(0)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(1))(fromEnum(__dict_Enum_305)))(pred(__dict_Enum_305)(e));
        };
    };
    var firstEnum = function (dict) {
        return dict.firstEnum;
    };
    var toEnum = function (__dict_Enum_306) {
        return function (_322) {
            if (_322 < 0) {
                return Data_Maybe.Nothing.value;
            };
            if (_322 === 0) {
                return new Data_Maybe.Just(firstEnum(__dict_Enum_306));
            };
            return Prelude[">>="](Data_Maybe.bindMaybe)(toEnum(__dict_Enum_306)(_322 - 1))(succ(__dict_Enum_306));
        };
    };
    var enumChar = new Enum(function () {
        return Data_Char.ordChar;
    }, 65535 + 1, Data_Char.fromCharCode(0), Data_Char.fromCharCode(65535), function (c) {
        return Prelude["=="](Data_Char.eqChar)(c)(firstEnum(enumChar)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(-1))(Data_Char.toCharCode))(c));
    }, function (c) {
        return Prelude["=="](Data_Char.eqChar)(c)(lastEnum(enumChar)) ? Data_Maybe.Nothing.value : Data_Maybe.Just.create(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["<<<"](Prelude.semigroupoidArr)(Prelude["+"](Prelude.numNumber)(1))(Data_Char.toCharCode))(c));
    });
    var enumBoolean = new Enum(function () {
        return Prelude.ordBoolean;
    }, 2, false, true, function (_326) {
        if (_326) {
            return new Data_Maybe.Just(false);
        };
        return Data_Maybe.Nothing.value;
    }, function (_325) {
        if (!_325) {
            return new Data_Maybe.Just(true);
        };
        return Data_Maybe.Nothing.value;
    });
    var eitherCardinality = function (__dict_Enum_307) {
        return function (__dict_Enum_308) {
            return function (l) {
                return function (r) {
                    return Cardinality.create(runCardinality(l) + runCardinality(r));
                };
            };
        };
    };
    var cardinality = function (dict) {
        return dict.cardinality;
    };
    var enumEither = function (__dict_Enum_309) {
        return function (__dict_Enum_310) {
            return new Enum(function () {
                return Data_Either.ordEither(__dict_Enum_309["__superclass_Prelude.Ord_0"]())(__dict_Enum_310["__superclass_Prelude.Ord_0"]());
            }, eitherCardinality(__dict_Enum_309)(__dict_Enum_310)(cardinality(__dict_Enum_309))(cardinality(__dict_Enum_310)), new Data_Either.Left(firstEnum(__dict_Enum_309)), new Data_Either.Right(lastEnum(__dict_Enum_310)), function (_330) {
                if (_330 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(pred(__dict_Enum_309)(_330.value0));
                };
                if (_330 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Left(lastEnum(__dict_Enum_309))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(pred(__dict_Enum_310)(_330.value0));
                };
                throw new Error("Failed pattern match");
            }, function (_329) {
                if (_329 instanceof Data_Either.Left) {
                    return Data_Maybe.maybe(Data_Maybe.Just.create(new Data_Either.Right(firstEnum(__dict_Enum_310))))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Left.create))(succ(__dict_Enum_309)(_329.value0));
                };
                if (_329 instanceof Data_Either.Right) {
                    return Data_Maybe.maybe(Data_Maybe.Nothing.value)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Either.Right.create))(succ(__dict_Enum_310)(_329.value0));
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var enumMaybe = function (__dict_Enum_311) {
        return new Enum(function () {
            return Data_Maybe.ordMaybe(__dict_Enum_311["__superclass_Prelude.Ord_0"]());
        }, maybeCardinality(__dict_Enum_311)(cardinality(__dict_Enum_311)), Data_Maybe.Nothing.value, Data_Maybe.Just.create(lastEnum(__dict_Enum_311)), function (_324) {
            if (_324 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Nothing.value;
            };
            if (_324 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(pred(__dict_Enum_311)(_324.value0));
            };
            throw new Error("Failed pattern match");
        }, function (_323) {
            if (_323 instanceof Data_Maybe.Nothing) {
                return Data_Maybe.Just.create(firstEnum(enumMaybe(__dict_Enum_311)));
            };
            if (_323 instanceof Data_Maybe.Just) {
                return Prelude["<$>"](Data_Maybe.functorMaybe)(Data_Maybe.Just.create)(succ(__dict_Enum_311)(_323.value0));
            };
            throw new Error("Failed pattern match");
        });
    };
    var enumTuple = function (__dict_Enum_312) {
        return function (__dict_Enum_313) {
            return new Enum(function () {
                return Data_Tuple.ordTuple(__dict_Enum_312["__superclass_Prelude.Ord_0"]())(__dict_Enum_313["__superclass_Prelude.Ord_0"]());
            }, tupleCardinality(__dict_Enum_312)(__dict_Enum_313)(cardinality(__dict_Enum_312))(cardinality(__dict_Enum_313)), new Data_Tuple.Tuple(firstEnum(__dict_Enum_312), firstEnum(__dict_Enum_313)), new Data_Tuple.Tuple(lastEnum(__dict_Enum_312), lastEnum(__dict_Enum_313)), function (_328) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_313)))(pred(__dict_Enum_312)(_328.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_328.value0)))(pred(__dict_Enum_313)(_328.value1));
            }, function (_327) {
                return Data_Maybe.maybe(Prelude["<$>"](Data_Maybe.functorMaybe)(Prelude.flip(Data_Tuple.Tuple.create)(firstEnum(__dict_Enum_313)))(succ(__dict_Enum_312)(_327.value0)))(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Maybe.Just.create)(Data_Tuple.Tuple.create(_327.value0)))(succ(__dict_Enum_313)(_327.value1));
            });
        };
    };
    return {
        Cardinality: Cardinality, 
        Enum: Enum, 
        cardinality: cardinality, 
        enumBoolean: enumBoolean, 
        enumChar: enumChar, 
        enumEither: enumEither, 
        enumMaybe: enumMaybe, 
        enumTuple: enumTuple, 
        firstEnum: firstEnum, 
        fromEnum: fromEnum, 
        lastEnum: lastEnum, 
        pred: pred, 
        runCardinality: runCardinality, 
        succ: succ, 
        toEnum: toEnum
    };
})();
var PS = PS || {};
PS.Data_Tuple_Nested = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Tuple = PS.Data_Tuple;
    var $div$bslash = function (a) {
        return function (b) {
            return new Data_Tuple.Tuple(a, b);
        };
    };
    var con9 = function (f) {
        return function (_338) {
            return f(_338.value0)(_338.value1.value0)(_338.value1.value1.value0)(_338.value1.value1.value1.value0)(_338.value1.value1.value1.value1.value0)(_338.value1.value1.value1.value1.value1.value0)(_338.value1.value1.value1.value1.value1.value1.value0)(_338.value1.value1.value1.value1.value1.value1.value1.value0)(_338.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con8 = function (f) {
        return function (_337) {
            return f(_337.value0)(_337.value1.value0)(_337.value1.value1.value0)(_337.value1.value1.value1.value0)(_337.value1.value1.value1.value1.value0)(_337.value1.value1.value1.value1.value1.value0)(_337.value1.value1.value1.value1.value1.value1.value0)(_337.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    var con7 = function (f) {
        return function (_336) {
            return f(_336.value0)(_336.value1.value0)(_336.value1.value1.value0)(_336.value1.value1.value1.value0)(_336.value1.value1.value1.value1.value0)(_336.value1.value1.value1.value1.value1.value0)(_336.value1.value1.value1.value1.value1.value1);
        };
    };
    var con6 = function (f) {
        return function (_335) {
            return f(_335.value0)(_335.value1.value0)(_335.value1.value1.value0)(_335.value1.value1.value1.value0)(_335.value1.value1.value1.value1.value0)(_335.value1.value1.value1.value1.value1);
        };
    };
    var con5 = function (f) {
        return function (_334) {
            return f(_334.value0)(_334.value1.value0)(_334.value1.value1.value0)(_334.value1.value1.value1.value0)(_334.value1.value1.value1.value1);
        };
    };
    var con4 = function (f) {
        return function (_333) {
            return f(_333.value0)(_333.value1.value0)(_333.value1.value1.value0)(_333.value1.value1.value1);
        };
    };
    var con3 = function (f) {
        return function (_332) {
            return f(_332.value0)(_332.value1.value0)(_332.value1.value1);
        };
    };
    var con2 = function (f) {
        return function (_331) {
            return f(_331.value0)(_331.value1);
        };
    };
    var con10 = function (f) {
        return function (_339) {
            return f(_339.value0)(_339.value1.value0)(_339.value1.value1.value0)(_339.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value1.value1.value1.value1.value0)(_339.value1.value1.value1.value1.value1.value1.value1.value1.value1);
        };
    };
    return {
        "/\\": $div$bslash, 
        con10: con10, 
        con2: con2, 
        con3: con3, 
        con4: con4, 
        con5: con5, 
        con6: con6, 
        con7: con7, 
        con8: con8, 
        con9: con9
    };
})();
var PS = PS || {};
PS.Data_Monoid_First = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var First = {
        create: function (value) {
            return value;
        }
    };
    var showFirst = function (__dict_Show_314) {
        return new Prelude.Show(function (_347) {
            return "First (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_314))(_347) + ")");
        });
    };
    var semigroupFirst = new Prelude.Semigroup(function (_348) {
        return function (_349) {
            if (_348 instanceof Data_Maybe.Just) {
                return _348;
            };
            return _349;
        };
    });
    var runFirst = function (_340) {
        return _340;
    };
    var monoidFirst = new Data_Monoid.Monoid(function () {
        return semigroupFirst;
    }, Data_Maybe.Nothing.value);
    var eqFirst = function (__dict_Eq_316) {
        return new Prelude.Eq(function (_343) {
            return function (_344) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_316))(_343)(_344);
            };
        }, function (_341) {
            return function (_342) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_316))(_341)(_342);
            };
        });
    };
    var ordFirst = function (__dict_Ord_315) {
        return new Prelude.Ord(function () {
            return eqFirst(__dict_Ord_315["__superclass_Prelude.Eq_0"]());
        }, function (_345) {
            return function (_346) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_315))(_345)(_346);
            };
        });
    };
    return {
        First: First, 
        eqFirst: eqFirst, 
        monoidFirst: monoidFirst, 
        ordFirst: ordFirst, 
        runFirst: runFirst, 
        semigroupFirst: semigroupFirst, 
        showFirst: showFirst
    };
})();
var PS = PS || {};
PS.Data_Foldable = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Apply = PS.Control_Apply;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Monoid_First = PS.Data_Monoid_First;
    function Foldable(foldMap, foldl, foldr) {
        this.foldMap = foldMap;
        this.foldl = foldl;
        this.foldr = foldr;
    };
    function foldrArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = xs.length - 1; i >= 0; --i) {        acc = f(xs[i])(acc);      }      return acc;    }  }};
    function foldlArray(f) {  return function(z) {    return function(xs) {      var acc = z;      for (var i = 0, len = xs.length; i < len; ++i) {        acc = f(acc)(xs[i]);      }      return acc;    }  }};
    var foldr = function (dict) {
        return dict.foldr;
    };
    var traverse_ = function (__dict_Applicative_317) {
        return function (__dict_Foldable_318) {
            return function (f) {
                return foldr(__dict_Foldable_318)(Prelude["<<<"](Prelude.semigroupoidArr)(Control_Apply["*>"](__dict_Applicative_317["__superclass_Prelude.Apply_0"]()))(f))(Prelude.pure(__dict_Applicative_317)(Prelude.unit));
            };
        };
    };
    var for_ = function (__dict_Applicative_319) {
        return function (__dict_Foldable_320) {
            return Prelude.flip(traverse_(__dict_Applicative_319)(__dict_Foldable_320));
        };
    };
    var sequence_ = function (__dict_Applicative_321) {
        return function (__dict_Foldable_322) {
            return traverse_(__dict_Applicative_321)(__dict_Foldable_322)(Prelude.id(Prelude.categoryArr));
        };
    };
    var foldl = function (dict) {
        return dict.foldl;
    };
    var intercalate = function (__dict_Foldable_323) {
        return function (__dict_Monoid_324) {
            return function (sep) {
                return function (xs) {
                    var go = function (_383) {
                        return function (_384) {
                            if (_383.init) {
                                return {
                                    init: false, 
                                    acc: _384
                                };
                            };
                            return {
                                init: false, 
                                acc: Prelude["<>"](__dict_Monoid_324["__superclass_Prelude.Semigroup_0"]())(_383.acc)(Prelude["<>"](__dict_Monoid_324["__superclass_Prelude.Semigroup_0"]())(sep)(_384))
                            };
                        };
                    };
                    return (foldl(__dict_Foldable_323)(go)({
                        init: true, 
                        acc: Data_Monoid.mempty(__dict_Monoid_324)
                    })(xs)).acc;
                };
            };
        };
    };
    var mconcat = function (__dict_Foldable_325) {
        return function (__dict_Monoid_326) {
            return foldl(__dict_Foldable_325)(Prelude["<>"](__dict_Monoid_326["__superclass_Prelude.Semigroup_0"]()))(Data_Monoid.mempty(__dict_Monoid_326));
        };
    };
    var or = function (__dict_Foldable_327) {
        return foldl(__dict_Foldable_327)(Prelude["||"](Prelude.boolLikeBoolean))(false);
    };
    var product = function (__dict_Foldable_328) {
        return foldl(__dict_Foldable_328)(Prelude["*"](Prelude.numNumber))(1);
    };
    var sum = function (__dict_Foldable_329) {
        return foldl(__dict_Foldable_329)(Prelude["+"](Prelude.numNumber))(0);
    };
    var foldableTuple = new Foldable(function (__dict_Monoid_330) {
        return function (_381) {
            return function (_382) {
                return _381(_382.value1);
            };
        };
    }, function (_378) {
        return function (_379) {
            return function (_380) {
                return _378(_379)(_380.value1);
            };
        };
    }, function (_375) {
        return function (_376) {
            return function (_377) {
                return _375(_377.value1)(_376);
            };
        };
    });
    var foldableRef = new Foldable(function (__dict_Monoid_331) {
        return function (_373) {
            return function (_374) {
                return _373(_374);
            };
        };
    }, function (_370) {
        return function (_371) {
            return function (_372) {
                return _370(_371)(_372);
            };
        };
    }, function (_367) {
        return function (_368) {
            return function (_369) {
                return _367(_369)(_368);
            };
        };
    });
    var foldableMaybe = new Foldable(function (__dict_Monoid_332) {
        return function (_365) {
            return function (_366) {
                if (_366 instanceof Data_Maybe.Nothing) {
                    return Data_Monoid.mempty(__dict_Monoid_332);
                };
                if (_366 instanceof Data_Maybe.Just) {
                    return _365(_366.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_362) {
        return function (_363) {
            return function (_364) {
                if (_364 instanceof Data_Maybe.Nothing) {
                    return _363;
                };
                if (_364 instanceof Data_Maybe.Just) {
                    return _362(_363)(_364.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_359) {
        return function (_360) {
            return function (_361) {
                if (_361 instanceof Data_Maybe.Nothing) {
                    return _360;
                };
                if (_361 instanceof Data_Maybe.Just) {
                    return _359(_361.value0)(_360);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableEither = new Foldable(function (__dict_Monoid_333) {
        return function (_357) {
            return function (_358) {
                if (_358 instanceof Data_Either.Left) {
                    return Data_Monoid.mempty(__dict_Monoid_333);
                };
                if (_358 instanceof Data_Either.Right) {
                    return _357(_358.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_354) {
        return function (_355) {
            return function (_356) {
                if (_356 instanceof Data_Either.Left) {
                    return _355;
                };
                if (_356 instanceof Data_Either.Right) {
                    return _354(_355)(_356.value0);
                };
                throw new Error("Failed pattern match");
            };
        };
    }, function (_351) {
        return function (_352) {
            return function (_353) {
                if (_353 instanceof Data_Either.Left) {
                    return _352;
                };
                if (_353 instanceof Data_Either.Right) {
                    return _351(_353.value0)(_352);
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var foldableArray = new Foldable(function (__dict_Monoid_334) {
        return function (f) {
            return function (xs) {
                return foldr(foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<>"](__dict_Monoid_334["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                    };
                })(Data_Monoid.mempty(__dict_Monoid_334))(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldlArray(f)(z)(xs);
            };
        };
    }, function (f) {
        return function (z) {
            return function (xs) {
                return foldrArray(f)(z)(xs);
            };
        };
    });
    var foldMap = function (dict) {
        return dict.foldMap;
    };
    var lookup = function (__dict_Eq_335) {
        return function (__dict_Foldable_336) {
            return function (a) {
                return function (f) {
                    return Data_Monoid_First.runFirst(foldMap(__dict_Foldable_336)(Data_Monoid_First.monoidFirst)(function (_350) {
                        return Prelude["=="](__dict_Eq_335)(a)(_350.value0) ? new Data_Maybe.Just(_350.value1) : Data_Maybe.Nothing.value;
                    })(f));
                };
            };
        };
    };
    var fold = function (__dict_Foldable_337) {
        return function (__dict_Monoid_338) {
            return foldMap(__dict_Foldable_337)(__dict_Monoid_338)(Prelude.id(Prelude.categoryArr));
        };
    };
    var find = function (__dict_Foldable_339) {
        return function (p) {
            return function (f) {
                var _1119 = foldMap(__dict_Foldable_339)(Data_Monoid.monoidArray)(function (x) {
                    return p(x) ? [ x ] : [  ];
                })(f);
                if (_1119.length >= 1) {
                    var _1121 = _1119.slice(1);
                    return new Data_Maybe.Just(_1119[0]);
                };
                if (_1119.length === 0) {
                    return Data_Maybe.Nothing.value;
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var any = function (__dict_Foldable_340) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(or(foldableArray))(foldMap(__dict_Foldable_340)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    var elem = function (__dict_Eq_341) {
        return function (__dict_Foldable_342) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(any(__dict_Foldable_342))(Prelude["=="](__dict_Eq_341));
        };
    };
    var notElem = function (__dict_Eq_343) {
        return function (__dict_Foldable_344) {
            return function (x) {
                return Prelude["<<<"](Prelude.semigroupoidArr)(Prelude.not(Prelude.boolLikeBoolean))(elem(__dict_Eq_343)(__dict_Foldable_344)(x));
            };
        };
    };
    var and = function (__dict_Foldable_345) {
        return foldl(__dict_Foldable_345)(Prelude["&&"](Prelude.boolLikeBoolean))(true);
    };
    var all = function (__dict_Foldable_346) {
        return function (p) {
            return Prelude["<<<"](Prelude.semigroupoidArr)(and(foldableArray))(foldMap(__dict_Foldable_346)(Data_Monoid.monoidArray)(function (x) {
                return [ p(x) ];
            }));
        };
    };
    return {
        Foldable: Foldable, 
        all: all, 
        and: and, 
        any: any, 
        elem: elem, 
        find: find, 
        fold: fold, 
        foldMap: foldMap, 
        foldableArray: foldableArray, 
        foldableEither: foldableEither, 
        foldableMaybe: foldableMaybe, 
        foldableRef: foldableRef, 
        foldableTuple: foldableTuple, 
        foldl: foldl, 
        foldlArray: foldlArray, 
        foldr: foldr, 
        foldrArray: foldrArray, 
        for_: for_, 
        intercalate: intercalate, 
        lookup: lookup, 
        mconcat: mconcat, 
        notElem: notElem, 
        or: or, 
        product: product, 
        sequence_: sequence_, 
        sum: sum, 
        traverse_: traverse_
    };
})();
var PS = PS || {};
PS.Data_Monoid_Last = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Monoid = PS.Data_Monoid;
    var Last = {
        create: function (value) {
            return value;
        }
    };
    var showLast = function (__dict_Show_347) {
        return new Prelude.Show(function (_392) {
            return "Last (" + (Prelude.show(Data_Maybe.showMaybe(__dict_Show_347))(_392) + ")");
        });
    };
    var semigroupLast = new Prelude.Semigroup(function (_393) {
        return function (_394) {
            if (_394 instanceof Data_Maybe.Just) {
                return _394;
            };
            if (_394 instanceof Data_Maybe.Nothing) {
                return _393;
            };
            throw new Error("Failed pattern match");
        };
    });
    var runLast = function (_385) {
        return _385;
    };
    var monoidLast = new Data_Monoid.Monoid(function () {
        return semigroupLast;
    }, Data_Maybe.Nothing.value);
    var eqLast = function (__dict_Eq_349) {
        return new Prelude.Eq(function (_388) {
            return function (_389) {
                return Prelude["/="](Data_Maybe.eqMaybe(__dict_Eq_349))(_388)(_389);
            };
        }, function (_386) {
            return function (_387) {
                return Prelude["=="](Data_Maybe.eqMaybe(__dict_Eq_349))(_386)(_387);
            };
        });
    };
    var ordLast = function (__dict_Ord_348) {
        return new Prelude.Ord(function () {
            return eqLast(__dict_Ord_348["__superclass_Prelude.Eq_0"]());
        }, function (_390) {
            return function (_391) {
                return Prelude.compare(Data_Maybe.ordMaybe(__dict_Ord_348))(_390)(_391);
            };
        });
    };
    return {
        Last: Last, 
        eqLast: eqLast, 
        monoidLast: monoidLast, 
        ordLast: ordLast, 
        runLast: runLast, 
        semigroupLast: semigroupLast, 
        showLast: showLast
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function _new() {
    return {};
  };
    
  function peek(m) {
    return function (k) {
      return function () {
        return m[k];
      }
    }
  };
    
  function poke(m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
    
  function _delete(m) {
    return function (k) {
      return function () {
        delete m[k];
        return m;
      };
    };
  };
    var $$new = _new;
    var $$delete = _delete;
    return {
        "delete": $$delete, 
        "new": $$new, 
        peek: peek, 
        poke: poke
    };
})();
var PS = PS || {};
PS.Data_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Char = PS.Data_Char;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    
    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;
    
    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;
    
    function fromCharArray(a) {
      return a.join('');
    }
    ;
    
    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;
    
    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;
    
    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;
    
    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;
    
    function length(s) {
      return s.length;
    }
    ;
    
    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;
    
    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;
    
    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;
    
    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;
    
    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;
    
    function toCharArray(s) {
      return s.split('');
    }
    ;
    
    function toLower(s) {
      return s.toLowerCase();
    }
    ;
    
    function toUpper(s) {
      return s.toUpperCase();
    }
    ;
    
    function trim(s) {
      return s.trim();
    }
    ;
    
    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
    var fromChar = Data_Char.charString;
    var charCodeAt = function (n) {
        return function (s) {
            return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    var charAt = function (n) {
        return function (s) {
            return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        charAt: charAt, 
        charCodeAt: charCodeAt, 
        drop: drop, 
        fromChar: fromChar, 
        fromCharArray: fromCharArray, 
        indexOf: indexOf, 
        "indexOf'": indexOf$prime, 
        joinWith: joinWith, 
        lastIndexOf: lastIndexOf, 
        "lastIndexOf'": lastIndexOf$prime, 
        length: length, 
        localeCompare: localeCompare, 
        replace: replace, 
        split: split, 
        take: take, 
        toCharArray: toCharArray, 
        toLower: toLower, 
        toUpper: toUpper, 
        trim: trim
    };
})();
var PS = PS || {};
PS.Text_Hatter_PureScript = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Array = PS.Data_Array;
    function VarE(value0) {
        this.value0 = value0;
    };
    VarE.create = function (value0) {
        return new VarE(value0);
    };
    function AppE(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    AppE.create = function (value0) {
        return function (value1) {
            return new AppE(value0, value1);
        };
    };
    function StringLitE(value0) {
        this.value0 = value0;
    };
    StringLitE.create = function (value0) {
        return new StringLitE(value0);
    };
    function ArrayLitE(value0) {
        this.value0 = value0;
    };
    ArrayLitE.create = function (value0) {
        return new ArrayLitE(value0);
    };
    function RawE(value0) {
        this.value0 = value0;
    };
    RawE.create = function (value0) {
        return new RawE(value0);
    };
    var escapeString = function (str) {
        return Data_String.replace("")("\\a")(Data_String.replace("\b")("\\b")(Data_String.replace("\f")("\\f")(Data_String.replace("\n")("\\n")(Data_String.replace("\t")("\\t")(Data_String.replace("\r")("\\r")(Data_String.replace("\v")("\\v")(Data_String.replace("\"")("\\\"")(Data_String.replace("'")("\\'")(Data_String.replace("\\")("\\\\")(str))))))))));
    };
    var toCode = function (_395) {
        if (_395 instanceof VarE) {
            return _395.value0;
        };
        if (_395 instanceof AppE) {
            return Data_String.joinWith(" ")([ "(", toCode(_395.value0), toCode(_395.value1), ")" ]);
        };
        if (_395 instanceof StringLitE) {
            return Data_String.joinWith("")([ "\"", escapeString(_395.value0), "\"" ]);
        };
        if (_395 instanceof ArrayLitE) {
            return "[" + (Data_String.joinWith(", ")(Data_Array.map(toCode)(_395.value0)) + "]");
        };
        if (_395 instanceof RawE) {
            return Data_String.joinWith(" ")([ "(", _395.value0, "\n  )" ]);
        };
        throw new Error("Failed pattern match");
    };
    return {
        AppE: AppE, 
        ArrayLitE: ArrayLitE, 
        RawE: RawE, 
        StringLitE: StringLitE, 
        VarE: VarE, 
        toCode: toCode
    };
})();
var PS = PS || {};
PS.Data_String_Regex = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_String = PS.Data_String;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    
  function showRegex$prime(r) {
    return '' + r;
  }
  ;
    
  function regex$prime(s1) {
    return function(s2) {
      return new RegExp(s1, s2);
    };
  }
  ;
    
  function source(r) {
    return r.source;
  }
  ;
    
  function flags(r) {
    return {
      multiline: r.multiline,
      ignoreCase: r.ignoreCase,
      global: r.global,
      sticky: !!r.sticky,
      unicode: !!r.unicode
    };
  }
  ;
    
  function test(r) {
    return function(s) {
      return r.test(s);
    };
  }
  ;
    
  function _match(r, s, Just, Nothing) {
    var m = s.match(r);
    return m == null ? Nothing : Just(m);
  }
  ;
    
  function replace(r) {
    return function(s1) {
      return function(s2) {
        return s2.replace(r, s1);
      };
    };
  }
  ;
    
  function replace$prime(r) {
    return function(f) {
      return function(s2) {
        return s2.replace(r, function(match) {
          return f(match)(Array.prototype.splice.call(arguments, 1, arguments.length - 3));
        });
      };
    };
  }
  ;
    
  function search(r) {
    return function(s) {
      return s.search(r);
    };
  }
  ;
    
  function split(r) {
    return function(s) {
      return s.split(r);
    };
  }
  ;
    var showRegex = new Prelude.Show(showRegex$prime);
    var renderFlags = function (flags_1) {
        return (flags_1.global ? "g" : "") + ((flags_1.ignoreCase ? "i" : "") + ((flags_1.multiline ? "m" : "") + ((flags_1.sticky ? "y" : "") + (flags_1.unicode ? "u" : ""))));
    };
    var regex = function (source_1) {
        return function (flags_1) {
            return regex$prime(source_1)(renderFlags(flags_1));
        };
    };
    var parseFlags = function (s) {
        return {
            global: Data_String.indexOf("g")(s) >= 0, 
            ignoreCase: Data_String.indexOf("i")(s) >= 0, 
            multiline: Data_String.indexOf("m")(s) >= 0, 
            sticky: Data_String.indexOf("y")(s) >= 0, 
            unicode: Data_String.indexOf("u")(s) >= 0
        };
    };
    var match = function (r) {
        return function (s) {
            return _match(r, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
        };
    };
    return {
        flags: flags, 
        match: match, 
        parseFlags: parseFlags, 
        regex: regex, 
        renderFlags: renderFlags, 
        replace: replace, 
        "replace'": replace$prime, 
        search: search, 
        showRegex: showRegex, 
        source: source, 
        split: split, 
        test: test
    };
})();
var PS = PS || {};
PS.Data_Traversable = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Eq = PS.Data_Eq;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Array = PS.Data_Array;
    function Traversable(__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
        this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
        this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
        this.sequence = sequence;
        this.traverse = traverse;
    };
    var traverse = function (dict) {
        return dict.traverse;
    };
    var traversableTuple = new Traversable(function () {
        return Data_Foldable.foldableTuple;
    }, function () {
        return Data_Tuple.functorTuple;
    }, function (__dict_Applicative_351) {
        return function (_410) {
            return Prelude["<$>"]((__dict_Applicative_351["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_410.value0))(_410.value1);
        };
    }, function (__dict_Applicative_350) {
        return function (_408) {
            return function (_409) {
                return Prelude["<$>"]((__dict_Applicative_350["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.Tuple.create(_409.value0))(_408(_409.value1));
            };
        };
    });
    var traversableRef = new Traversable(function () {
        return Data_Foldable.foldableRef;
    }, function () {
        return Data_Eq.functorRef;
    }, function (__dict_Applicative_353) {
        return function (_404) {
            return Prelude["<$>"]((__dict_Applicative_353["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_404);
        };
    }, function (__dict_Applicative_352) {
        return function (_402) {
            return function (_403) {
                return Prelude["<$>"]((__dict_Applicative_352["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Eq.Ref.create)(_402(_403));
            };
        };
    });
    var traversableMaybe = new Traversable(function () {
        return Data_Foldable.foldableMaybe;
    }, function () {
        return Data_Maybe.functorMaybe;
    }, function (__dict_Applicative_355) {
        return function (_407) {
            if (_407 instanceof Data_Maybe.Nothing) {
                return Prelude.pure(__dict_Applicative_355)(Data_Maybe.Nothing.value);
            };
            if (_407 instanceof Data_Maybe.Just) {
                return Prelude["<$>"]((__dict_Applicative_355["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_407.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_354) {
        return function (_405) {
            return function (_406) {
                if (_406 instanceof Data_Maybe.Nothing) {
                    return Prelude.pure(__dict_Applicative_354)(Data_Maybe.Nothing.value);
                };
                if (_406 instanceof Data_Maybe.Just) {
                    return Prelude["<$>"]((__dict_Applicative_354["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Maybe.Just.create)(_405(_406.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var traversableEither = new Traversable(function () {
        return Data_Foldable.foldableEither;
    }, function () {
        return Data_Either.functorEither;
    }, function (__dict_Applicative_357) {
        return function (_401) {
            if (_401 instanceof Data_Either.Left) {
                return Prelude.pure(__dict_Applicative_357)(new Data_Either.Left(_401.value0));
            };
            if (_401 instanceof Data_Either.Right) {
                return Prelude["<$>"]((__dict_Applicative_357["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_401.value0);
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_356) {
        return function (_399) {
            return function (_400) {
                if (_400 instanceof Data_Either.Left) {
                    return Prelude.pure(__dict_Applicative_356)(new Data_Either.Left(_400.value0));
                };
                if (_400 instanceof Data_Either.Right) {
                    return Prelude["<$>"]((__dict_Applicative_356["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Either.Right.create)(_399(_400.value0));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var sequence = function (dict) {
        return dict.sequence;
    };
    var traversableArray = new Traversable(function () {
        return Data_Foldable.foldableArray;
    }, function () {
        return Data_Array.functorArray;
    }, function (__dict_Applicative_359) {
        return function (_398) {
            if (_398.length === 0) {
                return Prelude.pure(__dict_Applicative_359)([  ]);
            };
            if (_398.length >= 1) {
                var _1164 = _398.slice(1);
                return Prelude["<*>"](__dict_Applicative_359["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_359["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_398[0]))(sequence(traversableArray)(__dict_Applicative_359)(_1164));
            };
            throw new Error("Failed pattern match");
        };
    }, function (__dict_Applicative_358) {
        return function (_396) {
            return function (_397) {
                if (_397.length === 0) {
                    return Prelude.pure(__dict_Applicative_358)([  ]);
                };
                if (_397.length >= 1) {
                    var _1168 = _397.slice(1);
                    return Prelude["<*>"](__dict_Applicative_358["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_358["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(_396(_397[0])))(traverse(traversableArray)(__dict_Applicative_358)(_396)(_1168));
                };
                throw new Error("Failed pattern match");
            };
        };
    });
    var zipWithA = function (__dict_Applicative_360) {
        return function (f) {
            return function (xs) {
                return function (ys) {
                    return sequence(traversableArray)(__dict_Applicative_360)(Data_Array.zipWith(f)(xs)(ys));
                };
            };
        };
    };
    var $$for = function (__dict_Applicative_361) {
        return function (__dict_Traversable_362) {
            return function (x) {
                return function (f) {
                    return traverse(__dict_Traversable_362)(__dict_Applicative_361)(f)(x);
                };
            };
        };
    };
    return {
        Traversable: Traversable, 
        "for": $$for, 
        sequence: sequence, 
        traversableArray: traversableArray, 
        traversableEither: traversableEither, 
        traversableMaybe: traversableMaybe, 
        traversableRef: traversableRef, 
        traversableTuple: traversableTuple, 
        traverse: traverse, 
        zipWithA: zipWithA
    };
})();
var PS = PS || {};
PS.Data_Foreign_Class = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Foreign = PS.Data_Foreign;
    var Data_Either = PS.Data_Either;
    var Data_Foreign_Index = PS.Data_Foreign_Index;
    var Data_Foreign_Undefined = PS.Data_Foreign_Undefined;
    var Data_Foreign_NullOrUndefined = PS.Data_Foreign_NullOrUndefined;
    var Data_Foreign_Null = PS.Data_Foreign_Null;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    function IsForeign(read) {
        this.read = read;
    };
    var stringIsForeign = new IsForeign(Data_Foreign.readString);
    var read = function (dict) {
        return dict.read;
    };
    var readJSON = function (__dict_IsForeign_363) {
        return function (json) {
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.parseJSON(json))(read(__dict_IsForeign_363));
        };
    };
    var readWith = function (__dict_IsForeign_364) {
        return function (f) {
            return function (value) {
                return Data_Either.either(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Either.Left.create)(f))(Data_Either.Right.create)(read(__dict_IsForeign_364)(value));
            };
        };
    };
    var readProp = function (__dict_IsForeign_365) {
        return function (__dict_Index_366) {
            return function (prop) {
                return function (value) {
                    return Prelude[">>="](Data_Either.bindEither)(Data_Foreign_Index["!"](__dict_Index_366)(value)(prop))(readWith(__dict_IsForeign_365)(Data_Foreign_Index.errorAt(__dict_Index_366)(prop)));
                };
            };
        };
    };
    var undefinedIsForeign = function (__dict_IsForeign_367) {
        return new IsForeign(Data_Foreign_Undefined.readUndefined(read(__dict_IsForeign_367)));
    };
    var numberIsForeign = new IsForeign(Data_Foreign.readNumber);
    var nullOrUndefinedIsForeign = function (__dict_IsForeign_368) {
        return new IsForeign(Data_Foreign_NullOrUndefined.readNullOrUndefined(read(__dict_IsForeign_368)));
    };
    var nullIsForeign = function (__dict_IsForeign_369) {
        return new IsForeign(Data_Foreign_Null.readNull(read(__dict_IsForeign_369)));
    };
    var booleanIsForeign = new IsForeign(Data_Foreign.readBoolean);
    var arrayIsForeign = function (__dict_IsForeign_370) {
        return new IsForeign(function (value) {
            var readElement = function (i) {
                return function (value_1) {
                    return readWith(__dict_IsForeign_370)(Data_Foreign.ErrorAtIndex.create(i))(value_1);
                };
            };
            var readElements = function (arr) {
                return Data_Traversable.sequence(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(Data_Array.zipWith(readElement)(Data_Array.range(0)(Data_Array.length(arr)))(arr));
            };
            return Prelude[">>="](Data_Either.bindEither)(Data_Foreign.readArray(value))(readElements);
        });
    };
    return {
        IsForeign: IsForeign, 
        arrayIsForeign: arrayIsForeign, 
        booleanIsForeign: booleanIsForeign, 
        nullIsForeign: nullIsForeign, 
        nullOrUndefinedIsForeign: nullOrUndefinedIsForeign, 
        numberIsForeign: numberIsForeign, 
        read: read, 
        readJSON: readJSON, 
        readProp: readProp, 
        readWith: readWith, 
        stringIsForeign: stringIsForeign, 
        undefinedIsForeign: undefinedIsForeign
    };
})();
var PS = PS || {};
PS.Data_Map = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Traversable = PS.Data_Traversable;
    function Leaf() {

    };
    Leaf.value = new Leaf();
    function Two(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    Two.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new Two(value0, value1, value2, value3);
                };
            };
        };
    };
    function Three(value0, value1, value2, value3, value4, value5, value6) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
        this.value6 = value6;
    };
    Three.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return function (value6) {
                                return new Three(value0, value1, value2, value3, value4, value5, value6);
                            };
                        };
                    };
                };
            };
        };
    };
    function TwoLeft(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoLeft(value0, value1, value2);
            };
        };
    };
    function TwoRight(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    TwoRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new TwoRight(value0, value1, value2);
            };
        };
    };
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeLeft.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeMiddle.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
        this.value4 = value4;
        this.value5 = value5;
    };
    ThreeRight.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return function (value4) {
                        return function (value5) {
                            return new ThreeRight(value0, value1, value2, value3, value4, value5);
                        };
                    };
                };
            };
        };
    };
    function KickUp(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    KickUp.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new KickUp(value0, value1, value2, value3);
                };
            };
        };
    };
    var values = function (_421) {
        if (_421 instanceof Leaf) {
            return [  ];
        };
        if (_421 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_421.value0))(Prelude["++"](Data_Array.semigroupArray)([ _421.value2 ])(values(_421.value3)));
        };
        if (_421 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(values(_421.value0))(Prelude["++"](Data_Array.semigroupArray)([ _421.value2 ])(Prelude["++"](Data_Array.semigroupArray)(values(_421.value3))(Prelude["++"](Data_Array.semigroupArray)([ _421.value5 ])(values(_421.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var toList = function (_419) {
        if (_419 instanceof Leaf) {
            return [  ];
        };
        if (_419 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_419.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_419.value1, _419.value2) ])(toList(_419.value3)));
        };
        if (_419 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(toList(_419.value0))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_419.value1, _419.value2) ])(Prelude["++"](Data_Array.semigroupArray)(toList(_419.value3))(Prelude["++"](Data_Array.semigroupArray)([ new Data_Tuple.Tuple(_419.value4, _419.value5) ])(toList(_419.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var singleton = function (k) {
        return function (v) {
            return new Two(Leaf.value, k, v, Leaf.value);
        };
    };
    var showTree = function (__dict_Show_371) {
        return function (__dict_Show_372) {
            return function (_413) {
                if (_413 instanceof Leaf) {
                    return "Leaf";
                };
                if (_413 instanceof Two) {
                    return "Two (" + (showTree(__dict_Show_371)(__dict_Show_372)(_413.value0) + (") (" + (Prelude.show(__dict_Show_371)(_413.value1) + (") (" + (Prelude.show(__dict_Show_372)(_413.value2) + (") (" + (showTree(__dict_Show_371)(__dict_Show_372)(_413.value3) + ")")))))));
                };
                if (_413 instanceof Three) {
                    return "Three (" + (showTree(__dict_Show_371)(__dict_Show_372)(_413.value0) + (") (" + (Prelude.show(__dict_Show_371)(_413.value1) + (") (" + (Prelude.show(__dict_Show_372)(_413.value2) + (") (" + (showTree(__dict_Show_371)(__dict_Show_372)(_413.value3) + (") (" + (Prelude.show(__dict_Show_371)(_413.value4) + (") (" + (Prelude.show(__dict_Show_372)(_413.value5) + (") (" + (showTree(__dict_Show_371)(__dict_Show_372)(_413.value6) + ")")))))))))))));
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var showMap = function (__dict_Show_373) {
        return function (__dict_Show_374) {
            return new Prelude.Show(function (m) {
                return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(__dict_Show_373)(__dict_Show_374)))(toList(m));
            });
        };
    };
    var lookup = function (__copy___dict_Ord_375) {
        return function (__copy__415) {
            return function (__copy__416) {
                var __dict_Ord_375 = __copy___dict_Ord_375;
                var _415 = __copy__415;
                var _416 = __copy__416;
                tco: while (true) {
                    if (_416 instanceof Leaf) {
                        return Data_Maybe.Nothing.value;
                    };
                    if (_416 instanceof Two && Prelude["=="](__dict_Ord_375["__superclass_Prelude.Eq_0"]())(_415)(_416.value1)) {
                        return new Data_Maybe.Just(_416.value2);
                    };
                    if (_416 instanceof Two && Prelude["<"](__dict_Ord_375)(_415)(_416.value1)) {
                        var __tco___dict_Ord_375 = __dict_Ord_375;
                        var __tco__415 = _415;
                        var __tco__416 = _416.value0;
                        __dict_Ord_375 = __tco___dict_Ord_375;
                        _415 = __tco__415;
                        _416 = __tco__416;
                        continue tco;
                    };
                    if (_416 instanceof Two) {
                        var __tco___dict_Ord_375 = __dict_Ord_375;
                        var __tco__415 = _415;
                        var __tco__416 = _416.value3;
                        __dict_Ord_375 = __tco___dict_Ord_375;
                        _415 = __tco__415;
                        _416 = __tco__416;
                        continue tco;
                    };
                    if (_416 instanceof Three && Prelude["=="](__dict_Ord_375["__superclass_Prelude.Eq_0"]())(_415)(_416.value1)) {
                        return new Data_Maybe.Just(_416.value2);
                    };
                    if (_416 instanceof Three && Prelude["=="](__dict_Ord_375["__superclass_Prelude.Eq_0"]())(_415)(_416.value4)) {
                        return new Data_Maybe.Just(_416.value5);
                    };
                    if (_416 instanceof Three && Prelude["<"](__dict_Ord_375)(_415)(_416.value1)) {
                        var __tco___dict_Ord_375 = __dict_Ord_375;
                        var __tco__415 = _415;
                        var __tco__416 = _416.value0;
                        __dict_Ord_375 = __tco___dict_Ord_375;
                        _415 = __tco__415;
                        _416 = __tco__416;
                        continue tco;
                    };
                    if (_416 instanceof Three && (Prelude["<"](__dict_Ord_375)(_416.value1)(_415) && Prelude["<="](__dict_Ord_375)(_415)(_416.value4))) {
                        var __tco___dict_Ord_375 = __dict_Ord_375;
                        var __tco__415 = _415;
                        var __tco__416 = _416.value3;
                        __dict_Ord_375 = __tco___dict_Ord_375;
                        _415 = __tco__415;
                        _416 = __tco__416;
                        continue tco;
                    };
                    if (_416 instanceof Three) {
                        var __tco___dict_Ord_375 = __dict_Ord_375;
                        var __tco__415 = _415;
                        var __tco__416 = _416.value6;
                        __dict_Ord_375 = __tco___dict_Ord_375;
                        _415 = __tco__415;
                        _416 = __tco__416;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var member = function (__dict_Ord_376) {
        return function (k) {
            return function (m) {
                return Data_Maybe.isJust(lookup(__dict_Ord_376)(k)(m));
            };
        };
    };
    var keys = function (_420) {
        if (_420 instanceof Leaf) {
            return [  ];
        };
        if (_420 instanceof Two) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_420.value0))(Prelude["++"](Data_Array.semigroupArray)([ _420.value1 ])(keys(_420.value3)));
        };
        if (_420 instanceof Three) {
            return Prelude["++"](Data_Array.semigroupArray)(keys(_420.value0))(Prelude["++"](Data_Array.semigroupArray)([ _420.value1 ])(Prelude["++"](Data_Array.semigroupArray)(keys(_420.value3))(Prelude["++"](Data_Array.semigroupArray)([ _420.value4 ])(keys(_420.value6)))));
        };
        throw new Error("Failed pattern match");
    };
    var isEmpty = function (_414) {
        if (_414 instanceof Leaf) {
            return true;
        };
        return false;
    };
    var functorMap = new Prelude.Functor(function (_422) {
        return function (_423) {
            if (_423 instanceof Leaf) {
                return Leaf.value;
            };
            if (_423 instanceof Two) {
                return new Two(Prelude["<$>"](functorMap)(_422)(_423.value0), _423.value1, _422(_423.value2), Prelude["<$>"](functorMap)(_422)(_423.value3));
            };
            if (_423 instanceof Three) {
                return new Three(Prelude["<$>"](functorMap)(_422)(_423.value0), _423.value1, _422(_423.value2), Prelude["<$>"](functorMap)(_422)(_423.value3), _423.value4, _422(_423.value5), Prelude["<$>"](functorMap)(_422)(_423.value6));
            };
            throw new Error("Failed pattern match");
        };
    });
    var map = Prelude["<$>"](functorMap);
    var fromZipper = function (__copy___dict_Ord_377) {
        return function (__copy__417) {
            return function (__copy__418) {
                var __dict_Ord_377 = __copy___dict_Ord_377;
                var _417 = __copy__417;
                var _418 = __copy__418;
                tco: while (true) {
                    if (_417.length === 0) {
                        return _418;
                    };
                    if (_417.length >= 1) {
                        var _1286 = _417.slice(1);
                        if (_417[0] instanceof TwoLeft) {
                            var __tco___dict_Ord_377 = __dict_Ord_377;
                            var __tco__418 = new Two(_418, (_417[0]).value0, (_417[0]).value1, (_417[0]).value2);
                            __dict_Ord_377 = __tco___dict_Ord_377;
                            _417 = _1286;
                            _418 = __tco__418;
                            continue tco;
                        };
                    };
                    if (_417.length >= 1) {
                        var _1291 = _417.slice(1);
                        if (_417[0] instanceof TwoRight) {
                            var __tco___dict_Ord_377 = __dict_Ord_377;
                            var __tco__418 = new Two((_417[0]).value0, (_417[0]).value1, (_417[0]).value2, _418);
                            __dict_Ord_377 = __tco___dict_Ord_377;
                            _417 = _1291;
                            _418 = __tco__418;
                            continue tco;
                        };
                    };
                    if (_417.length >= 1) {
                        var _1299 = _417.slice(1);
                        if (_417[0] instanceof ThreeLeft) {
                            var __tco___dict_Ord_377 = __dict_Ord_377;
                            var __tco__418 = new Three(_418, (_417[0]).value0, (_417[0]).value1, (_417[0]).value2, (_417[0]).value3, (_417[0]).value4, (_417[0]).value5);
                            __dict_Ord_377 = __tco___dict_Ord_377;
                            _417 = _1299;
                            _418 = __tco__418;
                            continue tco;
                        };
                    };
                    if (_417.length >= 1) {
                        var _1307 = _417.slice(1);
                        if (_417[0] instanceof ThreeMiddle) {
                            var __tco___dict_Ord_377 = __dict_Ord_377;
                            var __tco__418 = new Three((_417[0]).value0, (_417[0]).value1, (_417[0]).value2, _418, (_417[0]).value3, (_417[0]).value4, (_417[0]).value5);
                            __dict_Ord_377 = __tco___dict_Ord_377;
                            _417 = _1307;
                            _418 = __tco__418;
                            continue tco;
                        };
                    };
                    if (_417.length >= 1) {
                        var _1315 = _417.slice(1);
                        if (_417[0] instanceof ThreeRight) {
                            var __tco___dict_Ord_377 = __dict_Ord_377;
                            var __tco__418 = new Three((_417[0]).value0, (_417[0]).value1, (_417[0]).value2, (_417[0]).value3, (_417[0]).value4, (_417[0]).value5, _418);
                            __dict_Ord_377 = __tco___dict_Ord_377;
                            _417 = _1315;
                            _418 = __tco__418;
                            continue tco;
                        };
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var insert = function (__dict_Ord_378) {
        var up = function (__copy___dict_Ord_379) {
            return function (__copy__429) {
                return function (__copy__430) {
                    var __dict_Ord_379 = __copy___dict_Ord_379;
                    var _429 = __copy__429;
                    var _430 = __copy__430;
                    tco: while (true) {
                        if (_429.length === 0) {
                            return new Two(_430.value0, _430.value1, _430.value2, _430.value3);
                        };
                        if (_429.length >= 1) {
                            var _1330 = _429.slice(1);
                            if (_429[0] instanceof TwoLeft) {
                                return fromZipper(__dict_Ord_379)(_1330)(new Three(_430.value0, _430.value1, _430.value2, _430.value3, (_429[0]).value0, (_429[0]).value1, (_429[0]).value2));
                            };
                        };
                        if (_429.length >= 1) {
                            var _1339 = _429.slice(1);
                            if (_429[0] instanceof TwoRight) {
                                return fromZipper(__dict_Ord_379)(_1339)(new Three((_429[0]).value0, (_429[0]).value1, (_429[0]).value2, _430.value0, _430.value1, _430.value2, _430.value3));
                            };
                        };
                        if (_429.length >= 1) {
                            var _1351 = _429.slice(1);
                            if (_429[0] instanceof ThreeLeft) {
                                var __tco___dict_Ord_379 = __dict_Ord_379;
                                var __tco__430 = new KickUp(new Two(_430.value0, _430.value1, _430.value2, _430.value3), (_429[0]).value0, (_429[0]).value1, new Two((_429[0]).value2, (_429[0]).value3, (_429[0]).value4, (_429[0]).value5));
                                __dict_Ord_379 = __tco___dict_Ord_379;
                                _429 = _1351;
                                _430 = __tco__430;
                                continue tco;
                            };
                        };
                        if (_429.length >= 1) {
                            var _1363 = _429.slice(1);
                            if (_429[0] instanceof ThreeMiddle) {
                                var __tco___dict_Ord_379 = __dict_Ord_379;
                                var __tco__430 = new KickUp(new Two((_429[0]).value0, (_429[0]).value1, (_429[0]).value2, _430.value0), _430.value1, _430.value2, new Two(_430.value3, (_429[0]).value3, (_429[0]).value4, (_429[0]).value5));
                                __dict_Ord_379 = __tco___dict_Ord_379;
                                _429 = _1363;
                                _430 = __tco__430;
                                continue tco;
                            };
                        };
                        if (_429.length >= 1) {
                            var _1375 = _429.slice(1);
                            if (_429[0] instanceof ThreeRight) {
                                var __tco___dict_Ord_379 = __dict_Ord_379;
                                var __tco__430 = new KickUp(new Two((_429[0]).value0, (_429[0]).value1, (_429[0]).value2, (_429[0]).value3), (_429[0]).value4, (_429[0]).value5, new Two(_430.value0, _430.value1, _430.value2, _430.value3));
                                __dict_Ord_379 = __tco___dict_Ord_379;
                                _429 = _1375;
                                _430 = __tco__430;
                                continue tco;
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var down = function (__copy___dict_Ord_380) {
            return function (__copy__425) {
                return function (__copy__426) {
                    return function (__copy__427) {
                        return function (__copy__428) {
                            var __dict_Ord_380 = __copy___dict_Ord_380;
                            var _425 = __copy__425;
                            var _426 = __copy__426;
                            var _427 = __copy__427;
                            var _428 = __copy__428;
                            tco: while (true) {
                                if (_428 instanceof Leaf) {
                                    return up(__dict_Ord_380)(_425)(new KickUp(Leaf.value, _426, _427, Leaf.value));
                                };
                                if (_428 instanceof Two && Prelude["=="](__dict_Ord_380["__superclass_Prelude.Eq_0"]())(_426)(_428.value1)) {
                                    return fromZipper(__dict_Ord_380)(_425)(new Two(_428.value0, _426, _427, _428.value3));
                                };
                                if (_428 instanceof Two && Prelude["<"](__dict_Ord_380)(_426)(_428.value1)) {
                                    var __tco___dict_Ord_380 = __dict_Ord_380;
                                    var __tco__425 = Prelude[":"](new TwoLeft(_428.value1, _428.value2, _428.value3))(_425);
                                    var __tco__426 = _426;
                                    var __tco__427 = _427;
                                    var __tco__428 = _428.value0;
                                    __dict_Ord_380 = __tco___dict_Ord_380;
                                    _425 = __tco__425;
                                    _426 = __tco__426;
                                    _427 = __tco__427;
                                    _428 = __tco__428;
                                    continue tco;
                                };
                                if (_428 instanceof Two) {
                                    var __tco___dict_Ord_380 = __dict_Ord_380;
                                    var __tco__425 = Prelude[":"](new TwoRight(_428.value0, _428.value1, _428.value2))(_425);
                                    var __tco__426 = _426;
                                    var __tco__427 = _427;
                                    var __tco__428 = _428.value3;
                                    __dict_Ord_380 = __tco___dict_Ord_380;
                                    _425 = __tco__425;
                                    _426 = __tco__426;
                                    _427 = __tco__427;
                                    _428 = __tco__428;
                                    continue tco;
                                };
                                if (_428 instanceof Three && Prelude["=="](__dict_Ord_380["__superclass_Prelude.Eq_0"]())(_426)(_428.value1)) {
                                    return fromZipper(__dict_Ord_380)(_425)(new Three(_428.value0, _426, _427, _428.value3, _428.value4, _428.value5, _428.value6));
                                };
                                if (_428 instanceof Three && Prelude["=="](__dict_Ord_380["__superclass_Prelude.Eq_0"]())(_426)(_428.value4)) {
                                    return fromZipper(__dict_Ord_380)(_425)(new Three(_428.value0, _428.value1, _428.value2, _428.value3, _426, _427, _428.value6));
                                };
                                if (_428 instanceof Three && Prelude["<"](__dict_Ord_380)(_426)(_428.value1)) {
                                    var __tco___dict_Ord_380 = __dict_Ord_380;
                                    var __tco__425 = Prelude[":"](new ThreeLeft(_428.value1, _428.value2, _428.value3, _428.value4, _428.value5, _428.value6))(_425);
                                    var __tco__426 = _426;
                                    var __tco__427 = _427;
                                    var __tco__428 = _428.value0;
                                    __dict_Ord_380 = __tco___dict_Ord_380;
                                    _425 = __tco__425;
                                    _426 = __tco__426;
                                    _427 = __tco__427;
                                    _428 = __tco__428;
                                    continue tco;
                                };
                                if (_428 instanceof Three && (Prelude["<"](__dict_Ord_380)(_428.value1)(_426) && Prelude["<="](__dict_Ord_380)(_426)(_428.value4))) {
                                    var __tco___dict_Ord_380 = __dict_Ord_380;
                                    var __tco__425 = Prelude[":"](new ThreeMiddle(_428.value0, _428.value1, _428.value2, _428.value4, _428.value5, _428.value6))(_425);
                                    var __tco__426 = _426;
                                    var __tco__427 = _427;
                                    var __tco__428 = _428.value3;
                                    __dict_Ord_380 = __tco___dict_Ord_380;
                                    _425 = __tco__425;
                                    _426 = __tco__426;
                                    _427 = __tco__427;
                                    _428 = __tco__428;
                                    continue tco;
                                };
                                if (_428 instanceof Three) {
                                    var __tco___dict_Ord_380 = __dict_Ord_380;
                                    var __tco__425 = Prelude[":"](new ThreeRight(_428.value0, _428.value1, _428.value2, _428.value3, _428.value4, _428.value5))(_425);
                                    var __tco__426 = _426;
                                    var __tco__427 = _427;
                                    var __tco__428 = _428.value6;
                                    __dict_Ord_380 = __tco___dict_Ord_380;
                                    _425 = __tco__425;
                                    _426 = __tco__426;
                                    _427 = __tco__427;
                                    _428 = __tco__428;
                                    continue tco;
                                };
                                throw new Error("Failed pattern match");
                            };
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_378)([  ]);
    };
    var union = function (__dict_Ord_381) {
        return function (m1) {
            return function (m2) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
                    return function (_412) {
                        return insert(__dict_Ord_381)(_412.value0)(_412.value1)(m);
                    };
                })(m2)(toList(m1));
            };
        };
    };
    var foldableMap = new Data_Foldable.Foldable(function (__dict_Monoid_382) {
        return function (f) {
            return function (m) {
                return Data_Foldable.foldMap(Data_Foldable.foldableArray)(__dict_Monoid_382)(f)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var eqMap = function (__dict_Eq_383) {
        return function (__dict_Eq_384) {
            return new Prelude.Eq(function (m1) {
                return function (m2) {
                    return !Prelude["=="](eqMap(__dict_Eq_383)(__dict_Eq_384))(m1)(m2);
                };
            }, function (m1) {
                return function (m2) {
                    return Prelude["=="](Prelude.eqArray(Data_Tuple.eqTuple(__dict_Eq_383)(__dict_Eq_384)))(toList(m1))(toList(m2));
                };
            });
        };
    };
    var empty = Leaf.value;
    var fromList = function (__dict_Ord_385) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(function (m) {
            return function (_411) {
                return insert(__dict_Ord_385)(_411.value0)(_411.value1)(m);
            };
        })(empty);
    };
    var traversableMap = function (__dict_Ord_386) {
        return new Data_Traversable.Traversable(function () {
            return foldableMap;
        }, function () {
            return functorMap;
        }, function (__dict_Applicative_388) {
            return Data_Traversable.traverse(traversableMap(__dict_Ord_386))(__dict_Applicative_388)(Prelude.id(Prelude.categoryArr));
        }, function (__dict_Applicative_387) {
            return function (f) {
                return function (ms) {
                    return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                        return function (acc) {
                            return Prelude["<*>"](__dict_Applicative_387["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_387["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union(__dict_Ord_386))(x))(acc);
                        };
                    })(Prelude.pure(__dict_Applicative_387)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_387["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_387)(f))(toList(ms))));
                };
            };
        });
    };
    var unions = function (__dict_Ord_389) {
        return Data_Foldable.foldl(Data_Foldable.foldableArray)(union(__dict_Ord_389))(empty);
    };
    var $$delete = function (__dict_Ord_390) {
        var up = function (__copy___dict_Ord_391) {
            return function (__copy__434) {
                return function (__copy__435) {
                    var __dict_Ord_391 = __copy___dict_Ord_391;
                    var _434 = __copy__434;
                    var _435 = __copy__435;
                    tco: while (true) {
                        if (_434.length === 0) {
                            return _435;
                        };
                        if (_434.length >= 1) {
                            var _1439 = _434.slice(1);
                            if (_434[0] instanceof TwoLeft && ((_434[0]).value2 instanceof Leaf && _435 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_391)(_1439)(new Two(Leaf.value, (_434[0]).value0, (_434[0]).value1, Leaf.value));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1444 = _434.slice(1);
                            if (_434[0] instanceof TwoRight && ((_434[0]).value0 instanceof Leaf && _435 instanceof Leaf)) {
                                return fromZipper(__dict_Ord_391)(_1444)(new Two(Leaf.value, (_434[0]).value1, (_434[0]).value2, Leaf.value));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1453 = _434.slice(1);
                            if (_434[0] instanceof TwoLeft && (_434[0]).value2 instanceof Two) {
                                var __tco___dict_Ord_391 = __dict_Ord_391;
                                var __tco__435 = new Three(_435, (_434[0]).value0, (_434[0]).value1, (_434[0]).value2.value0, (_434[0]).value2.value1, (_434[0]).value2.value2, (_434[0]).value2.value3);
                                __dict_Ord_391 = __tco___dict_Ord_391;
                                _434 = _1453;
                                _435 = __tco__435;
                                continue tco;
                            };
                        };
                        if (_434.length >= 1) {
                            var _1462 = _434.slice(1);
                            if (_434[0] instanceof TwoRight && (_434[0]).value0 instanceof Two) {
                                var __tco___dict_Ord_391 = __dict_Ord_391;
                                var __tco__435 = new Three((_434[0]).value0.value0, (_434[0]).value0.value1, (_434[0]).value0.value2, (_434[0]).value0.value3, (_434[0]).value1, (_434[0]).value2, _435);
                                __dict_Ord_391 = __tco___dict_Ord_391;
                                _434 = _1462;
                                _435 = __tco__435;
                                continue tco;
                            };
                        };
                        if (_434.length >= 1) {
                            var _1474 = _434.slice(1);
                            if (_434[0] instanceof TwoLeft && (_434[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1474)(new Two(new Two(_435, (_434[0]).value0, (_434[0]).value1, (_434[0]).value2.value0), (_434[0]).value2.value1, (_434[0]).value2.value2, new Two((_434[0]).value2.value3, (_434[0]).value2.value4, (_434[0]).value2.value5, (_434[0]).value2.value6)));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1486 = _434.slice(1);
                            if (_434[0] instanceof TwoRight && (_434[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1486)(new Two(new Two((_434[0]).value0.value0, (_434[0]).value0.value1, (_434[0]).value0.value2, (_434[0]).value0.value3), (_434[0]).value0.value4, (_434[0]).value0.value5, new Two((_434[0]).value0.value6, (_434[0]).value1, (_434[0]).value2, _435)));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1494 = _434.slice(1);
                            if (_434[0] instanceof ThreeLeft && ((_434[0]).value2 instanceof Leaf && ((_434[0]).value5 instanceof Leaf && _435 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_391)(_1494)(new Three(Leaf.value, (_434[0]).value0, (_434[0]).value1, Leaf.value, (_434[0]).value3, (_434[0]).value4, Leaf.value));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1502 = _434.slice(1);
                            if (_434[0] instanceof ThreeMiddle && ((_434[0]).value0 instanceof Leaf && ((_434[0]).value5 instanceof Leaf && _435 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_391)(_1502)(new Three(Leaf.value, (_434[0]).value1, (_434[0]).value2, Leaf.value, (_434[0]).value3, (_434[0]).value4, Leaf.value));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1510 = _434.slice(1);
                            if (_434[0] instanceof ThreeRight && ((_434[0]).value0 instanceof Leaf && ((_434[0]).value3 instanceof Leaf && _435 instanceof Leaf))) {
                                return fromZipper(__dict_Ord_391)(_1510)(new Three(Leaf.value, (_434[0]).value1, (_434[0]).value2, Leaf.value, (_434[0]).value4, (_434[0]).value5, Leaf.value));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1522 = _434.slice(1);
                            if (_434[0] instanceof ThreeLeft && (_434[0]).value2 instanceof Two) {
                                return fromZipper(__dict_Ord_391)(_1522)(new Two(new Three(_435, (_434[0]).value0, (_434[0]).value1, (_434[0]).value2.value0, (_434[0]).value2.value1, (_434[0]).value2.value2, (_434[0]).value2.value3), (_434[0]).value3, (_434[0]).value4, (_434[0]).value5));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1534 = _434.slice(1);
                            if (_434[0] instanceof ThreeMiddle && (_434[0]).value0 instanceof Two) {
                                return fromZipper(__dict_Ord_391)(_1534)(new Two(new Three((_434[0]).value0.value0, (_434[0]).value0.value1, (_434[0]).value0.value2, (_434[0]).value0.value3, (_434[0]).value1, (_434[0]).value2, _435), (_434[0]).value3, (_434[0]).value4, (_434[0]).value5));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1546 = _434.slice(1);
                            if (_434[0] instanceof ThreeMiddle && (_434[0]).value5 instanceof Two) {
                                return fromZipper(__dict_Ord_391)(_1546)(new Two((_434[0]).value0, (_434[0]).value1, (_434[0]).value2, new Three(_435, (_434[0]).value3, (_434[0]).value4, (_434[0]).value5.value0, (_434[0]).value5.value1, (_434[0]).value5.value2, (_434[0]).value5.value3)));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1558 = _434.slice(1);
                            if (_434[0] instanceof ThreeRight && (_434[0]).value3 instanceof Two) {
                                return fromZipper(__dict_Ord_391)(_1558)(new Two((_434[0]).value0, (_434[0]).value1, (_434[0]).value2, new Three((_434[0]).value3.value0, (_434[0]).value3.value1, (_434[0]).value3.value2, (_434[0]).value3.value3, (_434[0]).value4, (_434[0]).value5, _435)));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1573 = _434.slice(1);
                            if (_434[0] instanceof ThreeLeft && (_434[0]).value2 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1573)(new Three(new Two(_435, (_434[0]).value0, (_434[0]).value1, (_434[0]).value2.value0), (_434[0]).value2.value1, (_434[0]).value2.value2, new Two((_434[0]).value2.value3, (_434[0]).value2.value4, (_434[0]).value2.value5, (_434[0]).value2.value6), (_434[0]).value3, (_434[0]).value4, (_434[0]).value5));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1588 = _434.slice(1);
                            if (_434[0] instanceof ThreeMiddle && (_434[0]).value0 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1588)(new Three(new Two((_434[0]).value0.value0, (_434[0]).value0.value1, (_434[0]).value0.value2, (_434[0]).value0.value3), (_434[0]).value0.value4, (_434[0]).value0.value5, new Two((_434[0]).value0.value6, (_434[0]).value1, (_434[0]).value2, _435), (_434[0]).value3, (_434[0]).value4, (_434[0]).value5));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1603 = _434.slice(1);
                            if (_434[0] instanceof ThreeMiddle && (_434[0]).value5 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1603)(new Three((_434[0]).value0, (_434[0]).value1, (_434[0]).value2, new Two(_435, (_434[0]).value3, (_434[0]).value4, (_434[0]).value5.value0), (_434[0]).value5.value1, (_434[0]).value5.value2, new Two((_434[0]).value5.value3, (_434[0]).value5.value4, (_434[0]).value5.value5, (_434[0]).value5.value6)));
                            };
                        };
                        if (_434.length >= 1) {
                            var _1618 = _434.slice(1);
                            if (_434[0] instanceof ThreeRight && (_434[0]).value3 instanceof Three) {
                                return fromZipper(__dict_Ord_391)(_1618)(new Three((_434[0]).value0, (_434[0]).value1, (_434[0]).value2, new Two((_434[0]).value3.value0, (_434[0]).value3.value1, (_434[0]).value3.value2, (_434[0]).value3.value3), (_434[0]).value3.value4, (_434[0]).value3.value5, new Two((_434[0]).value3.value6, (_434[0]).value4, (_434[0]).value5, _435)));
                            };
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var removeMaxNode = function (__copy___dict_Ord_392) {
            return function (__copy__437) {
                return function (__copy__438) {
                    var __dict_Ord_392 = __copy___dict_Ord_392;
                    var _437 = __copy__437;
                    var _438 = __copy__438;
                    tco: while (true) {
                        if (_438 instanceof Two && (_438.value0 instanceof Leaf && _438.value3 instanceof Leaf)) {
                            return up(__dict_Ord_392)(_437)(Leaf.value);
                        };
                        if (_438 instanceof Two) {
                            var __tco___dict_Ord_392 = __dict_Ord_392;
                            var __tco__437 = Prelude[":"](new TwoRight(_438.value0, _438.value1, _438.value2))(_437);
                            var __tco__438 = _438.value3;
                            __dict_Ord_392 = __tco___dict_Ord_392;
                            _437 = __tco__437;
                            _438 = __tco__438;
                            continue tco;
                        };
                        if (_438 instanceof Three && (_438.value0 instanceof Leaf && (_438.value3 instanceof Leaf && _438.value6 instanceof Leaf))) {
                            return up(__dict_Ord_392)(Prelude[":"](new TwoRight(Leaf.value, _438.value1, _438.value2))(_437))(Leaf.value);
                        };
                        if (_438 instanceof Three) {
                            var __tco___dict_Ord_392 = __dict_Ord_392;
                            var __tco__437 = Prelude[":"](new ThreeRight(_438.value0, _438.value1, _438.value2, _438.value3, _438.value4, _438.value5))(_437);
                            var __tco__438 = _438.value6;
                            __dict_Ord_392 = __tco___dict_Ord_392;
                            _437 = __tco__437;
                            _438 = __tco__438;
                            continue tco;
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
        };
        var maxNode = function (__copy___dict_Ord_393) {
            return function (__copy__436) {
                var __dict_Ord_393 = __copy___dict_Ord_393;
                var _436 = __copy__436;
                tco: while (true) {
                    if (_436 instanceof Two && _436.value3 instanceof Leaf) {
                        return {
                            key: _436.value1, 
                            value: _436.value2
                        };
                    };
                    if (_436 instanceof Two) {
                        var __tco___dict_Ord_393 = __dict_Ord_393;
                        var __tco__436 = _436.value3;
                        __dict_Ord_393 = __tco___dict_Ord_393;
                        _436 = __tco__436;
                        continue tco;
                    };
                    if (_436 instanceof Three && _436.value6 instanceof Leaf) {
                        return {
                            key: _436.value4, 
                            value: _436.value5
                        };
                    };
                    if (_436 instanceof Three) {
                        var __tco___dict_Ord_393 = __dict_Ord_393;
                        var __tco__436 = _436.value6;
                        __dict_Ord_393 = __tco___dict_Ord_393;
                        _436 = __tco__436;
                        continue tco;
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
        var down = function (__copy___dict_Ord_394) {
            return function (__copy__431) {
                return function (__copy__432) {
                    return function (__copy__433) {
                        var __dict_Ord_394 = __copy___dict_Ord_394;
                        var _431 = __copy__431;
                        var _432 = __copy__432;
                        var _433 = __copy__433;
                        tco: while (true) {
                            if (_433 instanceof Leaf) {
                                return fromZipper(__dict_Ord_394)(_431)(Leaf.value);
                            };
                            if (_433 instanceof Two && (_433.value0 instanceof Leaf && (_433.value3 instanceof Leaf && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value1)))) {
                                return up(__dict_Ord_394)(_431)(Leaf.value);
                            };
                            if (_433 instanceof Two && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value1)) {
                                var max = maxNode(__dict_Ord_394)(_433.value0);
                                return removeMaxNode(__dict_Ord_394)(Prelude[":"](new TwoLeft(max.key, max.value, _433.value3))(_431))(_433.value0);
                            };
                            if (_433 instanceof Two && Prelude["<"](__dict_Ord_394)(_432)(_433.value1)) {
                                var __tco___dict_Ord_394 = __dict_Ord_394;
                                var __tco__431 = Prelude[":"](new TwoLeft(_433.value1, _433.value2, _433.value3))(_431);
                                var __tco__432 = _432;
                                var __tco__433 = _433.value0;
                                __dict_Ord_394 = __tco___dict_Ord_394;
                                _431 = __tco__431;
                                _432 = __tco__432;
                                _433 = __tco__433;
                                continue tco;
                            };
                            if (_433 instanceof Two) {
                                var __tco___dict_Ord_394 = __dict_Ord_394;
                                var __tco__431 = Prelude[":"](new TwoRight(_433.value0, _433.value1, _433.value2))(_431);
                                var __tco__432 = _432;
                                var __tco__433 = _433.value3;
                                __dict_Ord_394 = __tco___dict_Ord_394;
                                _431 = __tco__431;
                                _432 = __tco__432;
                                _433 = __tco__433;
                                continue tco;
                            };
                            if (_433 instanceof Three && (_433.value0 instanceof Leaf && (_433.value3 instanceof Leaf && (_433.value6 instanceof Leaf && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value1))))) {
                                return fromZipper(__dict_Ord_394)(_431)(new Two(Leaf.value, _433.value4, _433.value5, Leaf.value));
                            };
                            if (_433 instanceof Three && (_433.value0 instanceof Leaf && (_433.value3 instanceof Leaf && (_433.value6 instanceof Leaf && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value4))))) {
                                return fromZipper(__dict_Ord_394)(_431)(new Two(Leaf.value, _433.value1, _433.value2, Leaf.value));
                            };
                            if (_433 instanceof Three && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value1)) {
                                var max = maxNode(__dict_Ord_394)(_433.value0);
                                return removeMaxNode(__dict_Ord_394)(Prelude[":"](new ThreeLeft(max.key, max.value, _433.value3, _433.value4, _433.value5, _433.value6))(_431))(_433.value0);
                            };
                            if (_433 instanceof Three && Prelude["=="](__dict_Ord_394["__superclass_Prelude.Eq_0"]())(_432)(_433.value4)) {
                                var max = maxNode(__dict_Ord_394)(_433.value3);
                                return removeMaxNode(__dict_Ord_394)(Prelude[":"](new ThreeMiddle(_433.value0, _433.value1, _433.value2, max.key, max.value, _433.value6))(_431))(_433.value3);
                            };
                            if (_433 instanceof Three && Prelude["<"](__dict_Ord_394)(_432)(_433.value1)) {
                                var __tco___dict_Ord_394 = __dict_Ord_394;
                                var __tco__431 = Prelude[":"](new ThreeLeft(_433.value1, _433.value2, _433.value3, _433.value4, _433.value5, _433.value6))(_431);
                                var __tco__432 = _432;
                                var __tco__433 = _433.value0;
                                __dict_Ord_394 = __tco___dict_Ord_394;
                                _431 = __tco__431;
                                _432 = __tco__432;
                                _433 = __tco__433;
                                continue tco;
                            };
                            if (_433 instanceof Three && (Prelude["<"](__dict_Ord_394)(_433.value1)(_432) && Prelude["<"](__dict_Ord_394)(_432)(_433.value4))) {
                                var __tco___dict_Ord_394 = __dict_Ord_394;
                                var __tco__431 = Prelude[":"](new ThreeMiddle(_433.value0, _433.value1, _433.value2, _433.value4, _433.value5, _433.value6))(_431);
                                var __tco__432 = _432;
                                var __tco__433 = _433.value3;
                                __dict_Ord_394 = __tco___dict_Ord_394;
                                _431 = __tco__431;
                                _432 = __tco__432;
                                _433 = __tco__433;
                                continue tco;
                            };
                            if (_433 instanceof Three) {
                                var __tco___dict_Ord_394 = __dict_Ord_394;
                                var __tco__431 = Prelude[":"](new ThreeRight(_433.value0, _433.value1, _433.value2, _433.value3, _433.value4, _433.value5))(_431);
                                var __tco__432 = _432;
                                var __tco__433 = _433.value6;
                                __dict_Ord_394 = __tco___dict_Ord_394;
                                _431 = __tco__431;
                                _432 = __tco__432;
                                _433 = __tco__433;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
            };
        };
        return down(__dict_Ord_390)([  ]);
    };
    var checkValid = function (tree) {
        var allHeights = function (_424) {
            if (_424 instanceof Leaf) {
                return [ 0 ];
            };
            if (_424 instanceof Two) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_424.value0))(allHeights(_424.value3)));
            };
            if (_424 instanceof Three) {
                return Data_Array.map(function (n) {
                    return n + 1;
                })(Prelude["++"](Data_Array.semigroupArray)(allHeights(_424.value0))(Prelude["++"](Data_Array.semigroupArray)(allHeights(_424.value3))(allHeights(_424.value6))));
            };
            throw new Error("Failed pattern match");
        };
        return Data_Array.length(Data_Array.nub(Prelude.eqNumber)(allHeights(tree))) === 1;
    };
    var alter = function (__dict_Ord_395) {
        return function (f) {
            return function (k) {
                return function (m) {
                    var _1746 = f(lookup(__dict_Ord_395)(k)(m));
                    if (_1746 instanceof Data_Maybe.Nothing) {
                        return $$delete(__dict_Ord_395)(k)(m);
                    };
                    if (_1746 instanceof Data_Maybe.Just) {
                        return insert(__dict_Ord_395)(k)(_1746.value0)(m);
                    };
                    throw new Error("Failed pattern match");
                };
            };
        };
    };
    var update = function (__dict_Ord_396) {
        return function (f) {
            return function (k) {
                return function (m) {
                    return alter(__dict_Ord_396)(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
                };
            };
        };
    };
    return {
        alter: alter, 
        checkValid: checkValid, 
        "delete": $$delete, 
        empty: empty, 
        eqMap: eqMap, 
        foldableMap: foldableMap, 
        fromList: fromList, 
        functorMap: functorMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        showMap: showMap, 
        showTree: showTree, 
        singleton: singleton, 
        toList: toList, 
        traversableMap: traversableMap, 
        union: union, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap = (function () {
    "use strict";
    var Data_Tuple = PS.Data_Tuple;
    var Prelude = PS.Prelude;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Data_StrMap_ST = PS.Data_StrMap_ST;
    var Data_Function = PS.Data_Function;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Traversable = PS.Data_Traversable;
    var Data_Array = PS.Data_Array;
    
  function _copy(m) {
    var r = {};
    for (var k in m)
      r[k] = m[k]
    return r;
  };
    
  function _copyEff(m) {
    return function () {
      return _copy(m);
    };
  };
    
  function runST(f) {
    return f;
  };
    function _fmapStrMap(m0, f) {  var m = {};  for (var k in m0) {    m[k] = f(m0[k]);  }  return m;};
    function _foldM(bind) {  return function(f) {    return function (mz) {      return function (m) {        var k;        function g(z) {          return f(z)(k)(m[k]);        }        for (k in m)          mz = bind(mz)(g);        return mz;      };    };  };};
    function _foldSCStrMap(m, z, f, fromMaybe) {    for (var k in m) {                         var maybeR = f(z)(k)(m[k]);            var r = fromMaybe(null)(maybeR);       if (r === null) return z;              else z = r;                          }                                       return z;                              };
    function all(f) {  return function (m) {    for (var k in m)      if (!f(k)(m[k])) return false;    return true;  };};
    var empty = {};;
    function size(m) {  var s = 0;  for (var k in m) {    ++s;  }  return s;};
    function _lookup(no, yes, k, m) {  return k in m ? yes(m[k]) : no;};
    function _unsafeDeleteStrMap(m, k) {    delete m[k];                         return m;                         };
    function _collect(f) {  return function (m) {    var r = [];    for (var k in m)      r.push(f(k)(m[k]));    return r;  };};
    var keys = Object.keys || _collect(function (k) {  return function () { return k; };});;
    var values = _collect(function (_) {
        return function (v) {
            return v;
        };
    });
    var toList = _collect(Data_Tuple.Tuple.create);
    var thawST = _copyEff;
    var showStrMap = function (__dict_Show_397) {
        return new Prelude.Show(function (m) {
            return "fromList " + Prelude.show(Prelude.showArray(Data_Tuple.showTuple(Prelude.showString)(__dict_Show_397)))(toList(m));
        });
    };
    var pureST = function (f) {
        return Control_Monad_Eff.runPure(runST(f));
    };
    var singleton = function (k) {
        return function (v) {
            return pureST(function __do() {
                var _26 = Data_StrMap_ST["new"]();
                Data_StrMap_ST.poke(_26)(k)(v)();
                return _26;
            });
        };
    };
    var mutate = function (f) {
        return function (m) {
            return pureST(function __do() {
                var _25 = thawST(m)();
                f(_25)();
                return _25;
            });
        };
    };
    var member = Data_Function.runFn4(_lookup)(false)(Prelude["const"](true));
    var lookup = Data_Function.runFn4(_lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
    var isSubmap = function (__dict_Eq_398) {
        return function (m1) {
            return function (m2) {
                var f = function (k) {
                    return function (v) {
                        return _lookup(false, Prelude["=="](__dict_Eq_398)(v), k, m2);
                    };
                };
                return all(f)(m1);
            };
        };
    };
    var isEmpty = all(function (_) {
        return function (__1) {
            return false;
        };
    });
    var insert = function (k) {
        return function (v) {
            return mutate(function (s) {
                return Data_StrMap_ST.poke(s)(k)(v);
            });
        };
    };
    var functorStrMap = new Prelude.Functor(function (f) {
        return function (m) {
            return _fmapStrMap(m, f);
        };
    });
    var map = Prelude["<$>"](functorStrMap);
    var fromList = function (l) {
        return pureST(function __do() {
            var _27 = Data_StrMap_ST["new"]();
            Data_Foldable.for_(Control_Monad_Eff.applicativeEff)(Data_Foldable.foldableArray)(l)(function (_439) {
                return Data_StrMap_ST.poke(_27)(_439.value0)(_439.value1);
            })();
            return _27;
        });
    };
    var freezeST = _copyEff;
    var foldMaybe = function (f) {
        return function (z) {
            return function (m) {
                return _foldSCStrMap(m, z, f, Data_Maybe.fromMaybe);
            };
        };
    };
    var foldM = function (__dict_Monad_399) {
        return function (f) {
            return function (z) {
                return _foldM(Prelude[">>="](__dict_Monad_399["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(__dict_Monad_399["__superclass_Prelude.Applicative_0"]())(z));
            };
        };
    };
    var semigroupStrMap = function (__dict_Semigroup_400) {
        return new Prelude.Semigroup(function (m1) {
            return function (m2) {
                return mutate(function (s) {
                    return foldM(Control_Monad_Eff.monadEff)(function (s_1) {
                        return function (k) {
                            return function (v2) {
                                return Data_StrMap_ST.poke(s_1)(k)(_lookup(v2, function (v1) {
                                    return Prelude["<>"](__dict_Semigroup_400)(v1)(v2);
                                }, k, m2));
                            };
                        };
                    })(s)(m1);
                })(m2);
            };
        });
    };
    var union = function (m) {
        return mutate(function (s) {
            return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
        });
    };
    var unions = Data_Foldable.foldl(Data_Foldable.foldableArray)(union)(empty);
    var fold = _foldM(Prelude["#"]);
    var foldMap = function (__dict_Monoid_403) {
        return function (f) {
            return fold(function (acc) {
                return function (k) {
                    return function (v) {
                        return Prelude["<>"](__dict_Monoid_403["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                    };
                };
            })(Data_Monoid.mempty(__dict_Monoid_403));
        };
    };
    var foldableStrMap = new Data_Foldable.Foldable(function (__dict_Monoid_404) {
        return function (f) {
            return foldMap(__dict_Monoid_404)(Prelude["const"](f));
        };
    }, function (f) {
        return fold(function (z) {
            return function (_) {
                return f(z);
            };
        });
    }, function (f) {
        return function (z) {
            return function (m) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(f)(z)(values(m));
            };
        };
    });
    var traversableStrMap = new Data_Traversable.Traversable(function () {
        return foldableStrMap;
    }, function () {
        return functorStrMap;
    }, function (__dict_Applicative_402) {
        return Data_Traversable.traverse(traversableStrMap)(__dict_Applicative_402)(Prelude.id(Prelude.categoryArr));
    }, function (__dict_Applicative_401) {
        return function (f) {
            return function (ms) {
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (x) {
                    return function (acc) {
                        return Prelude["<*>"](__dict_Applicative_401["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((__dict_Applicative_401["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                    };
                })(Prelude.pure(__dict_Applicative_401)(empty))(Prelude["<$>"](Data_Array.functorArray)(Prelude["<$>"]((__dict_Applicative_401["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_Array.functorArray)(Data_Traversable.traverse(Data_Traversable.traversableTuple)(__dict_Applicative_401)(f))(toList(ms))));
            };
        };
    });
    var eqStrMap = function (__dict_Eq_405) {
        return new Prelude.Eq(function (m1) {
            return function (m2) {
                return !Prelude["=="](eqStrMap(__dict_Eq_405))(m1)(m2);
            };
        }, function (m1) {
            return function (m2) {
                return isSubmap(__dict_Eq_405)(m1)(m2) && isSubmap(__dict_Eq_405)(m2)(m1);
            };
        });
    };
    var $$delete = function (k) {
        return mutate(function (s) {
            return Data_StrMap_ST["delete"](s)(k);
        });
    };
    var alter = function (f) {
        return function (k) {
            return function (m) {
                var _1754 = f(lookup(k)(m));
                if (_1754 instanceof Data_Maybe.Nothing) {
                    return $$delete(k)(m);
                };
                if (_1754 instanceof Data_Maybe.Just) {
                    return insert(k)(_1754.value0)(m);
                };
                throw new Error("Failed pattern match");
            };
        };
    };
    var update = function (f) {
        return function (k) {
            return function (m) {
                return alter(Data_Maybe.maybe(Data_Maybe.Nothing.value)(f))(k)(m);
            };
        };
    };
    return {
        all: all, 
        alter: alter, 
        "delete": $$delete, 
        empty: empty, 
        eqStrMap: eqStrMap, 
        fold: fold, 
        foldM: foldM, 
        foldMap: foldMap, 
        foldMaybe: foldMaybe, 
        foldableStrMap: foldableStrMap, 
        freezeST: freezeST, 
        fromList: fromList, 
        functorStrMap: functorStrMap, 
        insert: insert, 
        isEmpty: isEmpty, 
        isSubmap: isSubmap, 
        keys: keys, 
        lookup: lookup, 
        map: map, 
        member: member, 
        runST: runST, 
        semigroupStrMap: semigroupStrMap, 
        showStrMap: showStrMap, 
        singleton: singleton, 
        size: size, 
        thawST: thawST, 
        toList: toList, 
        traversableStrMap: traversableStrMap, 
        union: union, 
        unions: unions, 
        update: update, 
        values: values
    };
})();
var PS = PS || {};
PS.Data_StrMap_ST_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    
  function unsafeGet(m) {
    return function () {
      return m;
    }
  };
    return {
        unsafeGet: unsafeGet
    };
})();
var PS = PS || {};
PS.Data_StrMap_Unsafe = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    function unsafeIndex(m) {                return function (k) {    return m[k];  };};
    return {
        unsafeIndex: unsafeIndex
    };
})();
var PS = PS || {};
PS.Test_QuickCheck_Gen = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Math = PS.Math;
    var Data_Monoid_Sum = PS.Data_Monoid_Sum;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Traversable = PS.Data_Traversable;
    var Debug_Trace = PS.Debug_Trace;
    function Gen(value0) {
        this.value0 = value0;
    };
    Gen.create = function (value0) {
        return new Gen(value0);
    };
    function float32ToInt32(n) {  var arr = new ArrayBuffer(4);  var fv = new Float32Array(arr);  var iv = new Int32Array(arr);  fv[0] = n;  return iv[0];};
    var runGen = function (_440) {
        return _440.value0;
    };
    var stateful = function (f) {
        return new Gen(function (s) {
            return runGen(f(s))(s);
        });
    };
    var sized = function (f) {
        return stateful(function (s) {
            return f(s.size);
        });
    };
    var variant = function (n) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1758 = {};
                    for (var _1759 in s) {
                        if (s.hasOwnProperty(_1759)) {
                            _1758[_1759] = s[_1759];
                        };
                    };
                    _1758.newSeed = n;
                    return _1758;
                })());
            });
        };
    };
    var resize = function (sz) {
        return function (g) {
            return Gen.create(function (s) {
                return runGen(g)((function () {
                    var _1760 = {};
                    for (var _1761 in s) {
                        if (s.hasOwnProperty(_1761)) {
                            _1760[_1761] = s[_1761];
                        };
                    };
                    _1760.size = sz;
                    return _1760;
                })());
            });
        };
    };
    var repeatable = function (f) {
        return Gen.create(function (s) {
            return {
                value: function (a) {
                    return (runGen(f(a))(s)).value;
                }, 
                state: s
            };
        });
    };
    var lcgN = 1 << 30;
    var lcgM = 1103515245;
    var lcgC = 12345;
    var lcgNext = function (n) {
        return (lcgM * n + lcgC) % lcgN;
    };
    var lcgStep = (function () {
        var f = function (s) {
            return {
                value: s.newSeed, 
                state: (function () {
                    var _1762 = {};
                    for (var _1763 in s) {
                        if (s.hasOwnProperty(_1763)) {
                            _1762[_1763] = s[_1763];
                        };
                    };
                    _1762.newSeed = lcgNext(s.newSeed);
                    return _1762;
                })()
            };
        };
        return new Gen(f);
    })();
    var perturbGen = function (_441) {
        return function (_442) {
            return Gen.create(function (s) {
                return _442.value0((function () {
                    var _1766 = {};
                    for (var _1767 in s) {
                        if (s.hasOwnProperty(_1767)) {
                            _1766[_1767] = s[_1767];
                        };
                    };
                    _1766.newSeed = lcgNext(float32ToInt32(_441)) + s.newSeed;
                    return _1766;
                })());
            });
        };
    };
    var functorGen = new Prelude.Functor(function (_446) {
        return function (_447) {
            return Gen.create(function (s) {
                var _1771 = _447.value0(s);
                return {
                    value: _446(_1771.value), 
                    state: _1771.state
                };
            });
        };
    });
    var uniform = Prelude["<$>"](functorGen)(function (n) {
        return n / (1 << 30);
    })(lcgStep);
    var evalGen = function (gen) {
        return function (st) {
            return (runGen(gen)(st)).value;
        };
    };
    var choose = function (a) {
        return function (b) {
            var min = Math.min(a)(b);
            var max = Math.max(a)(b);
            return Prelude["<$>"](functorGen)(Prelude[">>>"](Prelude.semigroupoidArr)(Prelude["*"](Prelude.numNumber)(max - min))(Prelude["+"](Prelude.numNumber)(min)))(uniform);
        };
    };
    var chooseInt = function (a) {
        return function (b) {
            return Prelude["<$>"](functorGen)(Math.floor)(choose(Math.ceil(a))(Math.floor(b) + 0.9999999989999999));
        };
    };
    var applyGen = new Prelude.Apply(function (_448) {
        return function (_449) {
            return Gen.create(function (s) {
                var _1777 = _448.value0(s);
                var _1778 = _449.value0(_1777.state);
                return {
                    value: _1777.value(_1778.value), 
                    state: _1778.state
                };
            });
        };
    }, function () {
        return functorGen;
    });
    var bindGen = new Prelude.Bind(function (_450) {
        return function (_451) {
            return Gen.create(function (s) {
                var _1787 = _450.value0(s);
                return runGen(_451(_1787.value))(_1787.state);
            });
        };
    }, function () {
        return applyGen;
    });
    var frequency = function (x) {
        return function (xs) {
            var xxs = Prelude[":"](x)(xs);
            var total = Data_Monoid_Sum.runSum(Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid_Sum.monoidSum)(Prelude["<$>"](Data_Array.functorArray)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Monoid_Sum.Sum.create)(Data_Tuple.fst))(xxs)));
            var pick = function (_443) {
                return function (_444) {
                    return function (_445) {
                        if (_445.length === 0) {
                            return _444;
                        };
                        if (_445.length >= 1) {
                            var _1797 = _445.slice(1);
                            return _443 <= (_445[0]).value0 ? (_445[0]).value1 : pick(_443 - (_445[0]).value0)(_444)(_1797);
                        };
                        throw new Error("Failed pattern match");
                    };
                };
            };
            return Prelude[">>="](bindGen)(chooseInt(1)(total))(function (_29) {
                return pick(_29)(Data_Tuple.snd(x))(xxs);
            });
        };
    };
    var oneOf = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_28) {
                return _28 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_28 - 1));
            });
        };
    };
    var applicativeGen = new Prelude.Applicative(function () {
        return applyGen;
    }, function (a) {
        return new Gen(function (s) {
            return {
                value: a, 
                state: s
            };
        });
    });
    var elements = function (x) {
        return function (xs) {
            return Prelude[">>="](bindGen)(chooseInt(0)(Data_Array.length(xs)))(function (_34) {
                return Prelude.pure(applicativeGen)(_34 === 0 ? x : Data_Maybe.fromMaybe(x)(Data_Array["!!"](xs)(_34 - 1)));
            });
        };
    };
    var monadGen = new Prelude.Monad(function () {
        return applicativeGen;
    }, function () {
        return bindGen;
    });
    var vectorOf = function (k) {
        return function (g) {
            return Data_Traversable.sequence(Data_Traversable.traversableArray)(applicativeGen)(Prelude["<$>"](Data_Array.functorArray)(Prelude["const"](g))(Data_Array.range(1)(k)));
        };
    };
    var arrayOf = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_30) {
                return vectorOf(_30)(g);
            });
        });
    };
    var arrayOf1 = function (g) {
        return sized(function (n) {
            return Prelude[">>="](bindGen)(chooseInt(0)(n))(function (_33) {
                return Prelude[">>="](bindGen)(g)(function (_32) {
                    return Prelude[">>="](bindGen)(vectorOf(_33 - 1)(g))(function (_31) {
                        return Prelude["return"](monadGen)(new Data_Tuple.Tuple(_32, _31));
                    });
                });
            });
        });
    };
    var sample = function (sz) {
        return function (g) {
            return evalGen(vectorOf(sz)(g))({
                newSeed: 0, 
                size: sz
            });
        };
    };
    var showSample$prime = function (__dict_Show_406) {
        return function (n) {
            return function (g) {
                return Debug_Trace.print(Prelude.showArray(__dict_Show_406))(sample(n)(g));
            };
        };
    };
    var showSample = function (__dict_Show_407) {
        return showSample$prime(__dict_Show_407)(10);
    };
    return {
        applicativeGen: applicativeGen, 
        applyGen: applyGen, 
        arrayOf: arrayOf, 
        arrayOf1: arrayOf1, 
        bindGen: bindGen, 
        choose: choose, 
        chooseInt: chooseInt, 
        elements: elements, 
        evalGen: evalGen, 
        frequency: frequency, 
        functorGen: functorGen, 
        monadGen: monadGen, 
        oneOf: oneOf, 
        perturbGen: perturbGen, 
        repeatable: repeatable, 
        resize: resize, 
        runGen: runGen, 
        showSample: showSample, 
        "showSample'": showSample$prime, 
        sized: sized, 
        stateful: stateful, 
        uniform: uniform, 
        variant: variant, 
        vectorOf: vectorOf
    };
})();
var PS = PS || {};
PS.Test_QuickCheck = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Test_QuickCheck_Gen = PS.Test_QuickCheck_Gen;
    var Control_Monad_Eff = PS.Control_Monad_Eff;
    var Control_Monad_Eff_Exception = PS.Control_Monad_Eff_Exception;
    var Control_Monad_Eff_Random = PS.Control_Monad_Eff_Random;
    var Debug_Trace = PS.Debug_Trace;
    var Data_Tuple = PS.Data_Tuple;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Either = PS.Data_Either;
    var Data_Char = PS.Data_Char;
    var Data_Array = PS.Data_Array;
    var Data_String = PS.Data_String;
    var Math = PS.Math;
    var Data_String_Unsafe = PS.Data_String_Unsafe;
    function Success() {

    };
    Success.value = new Success();
    function Failed(value0) {
        this.value0 = value0;
    };
    Failed.create = function (value0) {
        return new Failed(value0);
    };
    var AlphaNumString = {
        create: function (value) {
            return value;
        }
    };
    function Arbitrary(arbitrary) {
        this.arbitrary = arbitrary;
    };
    function CoArbitrary(coarbitrary) {
        this.coarbitrary = coarbitrary;
    };
    function Testable(test) {
        this.test = test;
    };
    var $less$qmark$greater = function (_452) {
        return function (_453) {
            if (_452) {
                return Success.value;
            };
            if (!_452) {
                return new Failed(_453);
            };
            throw new Error("Failed pattern match");
        };
    };
    var testableResult = new Testable(Prelude["return"](Test_QuickCheck_Gen.monadGen));
    var testableBoolean = new Testable(function (_461) {
        if (_461) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Success.value);
        };
        if (!_461) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(new Failed("Test returned false"));
        };
        throw new Error("Failed pattern match");
    });
    var test = function (dict) {
        return dict.test;
    };
    var showResult = new Prelude.Show(function (_454) {
        if (_454 instanceof Success) {
            return "Success";
        };
        if (_454 instanceof Failed) {
            return "Failed: " + _454.value0;
        };
        throw new Error("Failed pattern match");
    });
    var quickCheckPure = function (__dict_Testable_408) {
        return function (s) {
            var quickCheckPure$prime = function (st) {
                return function (n) {
                    return function (prop) {
                        var go = function (_462) {
                            if (_462 <= 0) {
                                return Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]);
                            };
                            return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(test(__dict_Testable_408)(prop))(function (_45) {
                                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(go(_462 - 1))(function (_44) {
                                    return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_45)(_44));
                                });
                            });
                        };
                        return Test_QuickCheck_Gen.evalGen(go(n))(st);
                    };
                };
            };
            return quickCheckPure$prime({
                newSeed: s, 
                size: 10
            });
        };
    };
    var quickCheck$prime = function (__dict_Testable_409) {
        return function (n) {
            return function (prop) {
                var throwOnFirstFailure = function (__copy__463) {
                    return function (__copy__464) {
                        var _463 = __copy__463;
                        var _464 = __copy__464;
                        tco: while (true) {
                            if (_464.length === 0) {
                                return Prelude["return"](Control_Monad_Eff.monadEff)(Prelude.unit);
                            };
                            if (_464.length >= 1) {
                                var _1817 = _464.slice(1);
                                if (_464[0] instanceof Failed) {
                                    return Control_Monad_Eff_Exception.throwException(Control_Monad_Eff_Exception.error("Test " + (Prelude.show(Prelude.showNumber)(_463) + (" failed: \n" + (_464[0]).value0))));
                                };
                            };
                            if (_464.length >= 1) {
                                var _1819 = _464.slice(1);
                                var __tco__463 = _463 + 1;
                                _463 = __tco__463;
                                _464 = _1819;
                                continue tco;
                            };
                            throw new Error("Failed pattern match");
                        };
                    };
                };
                var countSuccesses = function (_465) {
                    if (_465.length === 0) {
                        return 0;
                    };
                    if (_465.length >= 1) {
                        var _1822 = _465.slice(1);
                        if (_465[0] instanceof Success) {
                            return 1 + countSuccesses(_1822);
                        };
                    };
                    if (_465.length >= 1) {
                        var _1824 = _465.slice(1);
                        return countSuccesses(_1824);
                    };
                    throw new Error("Failed pattern match");
                };
                return function __do() {
                    var _46 = Control_Monad_Eff_Random.random();
                    return (function () {
                        var results = quickCheckPure(__dict_Testable_409)(_46)(n)(prop);
                        var successes = countSuccesses(results);
                        return function __do() {
                            Debug_Trace.trace(Prelude.show(Prelude.showNumber)(successes) + ("/" + (Prelude.show(Prelude.showNumber)(n) + " test(s) passed.")))();
                            return throwOnFirstFailure(1)(results)();
                        };
                    })()();
                };
            };
        };
    };
    var quickCheck = function (__dict_Testable_410) {
        return function (prop) {
            return quickCheck$prime(__dict_Testable_410)(100)(prop);
        };
    };
    var coarbitrary = function (dict) {
        return dict.coarbitrary;
    };
    var coarbTuple = function (__dict_CoArbitrary_411) {
        return function (__dict_CoArbitrary_412) {
            return new CoArbitrary(function (_457) {
                return Prelude[">>>"](Prelude.semigroupoidArr)(coarbitrary(__dict_CoArbitrary_411)(_457.value0))(coarbitrary(__dict_CoArbitrary_412)(_457.value1));
            });
        };
    };
    var coarbNumber = new CoArbitrary(Test_QuickCheck_Gen.perturbGen);
    var coarbMaybe = function (__dict_CoArbitrary_413) {
        return new CoArbitrary(function (_459) {
            if (_459 instanceof Data_Maybe.Nothing) {
                return Test_QuickCheck_Gen.perturbGen(1);
            };
            if (_459 instanceof Data_Maybe.Just) {
                return coarbitrary(__dict_CoArbitrary_413)(_459.value0);
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbEither = function (__dict_CoArbitrary_414) {
        return function (__dict_CoArbitrary_415) {
            return new CoArbitrary(function (_458) {
                if (_458 instanceof Data_Either.Left) {
                    return coarbitrary(__dict_CoArbitrary_414)(_458.value0);
                };
                if (_458 instanceof Data_Either.Right) {
                    return coarbitrary(__dict_CoArbitrary_415)(_458.value0);
                };
                throw new Error("Failed pattern match");
            });
        };
    };
    var coarbChar = new CoArbitrary(function (c) {
        return coarbitrary(coarbNumber)(Data_Char.toCharCode(c));
    });
    var coarbBoolean = new CoArbitrary(function (_455) {
        if (_455) {
            return Test_QuickCheck_Gen.perturbGen(1);
        };
        if (!_455) {
            return Test_QuickCheck_Gen.perturbGen(2);
        };
        throw new Error("Failed pattern match");
    });
    var coarbArray = function (__dict_CoArbitrary_416) {
        return new CoArbitrary(function (_460) {
            if (_460.length === 0) {
                return Prelude.id(Prelude.categoryArr);
            };
            if (_460.length >= 1) {
                var _1837 = _460.slice(1);
                return Prelude["<<<"](Prelude.semigroupoidArr)(coarbitrary(coarbArray(__dict_CoArbitrary_416))(_1837))(coarbitrary(__dict_CoArbitrary_416)(_460[0]));
            };
            throw new Error("Failed pattern match");
        });
    };
    var coarbString = new CoArbitrary(function (s) {
        return coarbitrary(coarbArray(coarbMaybe(coarbNumber)))(Prelude["<$>"](Data_Array.functorArray)(Data_String.charCodeAt(0))(Data_String.split("")(s)));
    });
    var coarbAlphaNumString = new CoArbitrary(function (_456) {
        return coarbitrary(coarbString)(_456);
    });
    var arbitrary = function (dict) {
        return dict.arbitrary;
    };
    var testableFunction = function (__dict_Arbitrary_419) {
        return function (__dict_Testable_420) {
            return new Testable(function (f) {
                return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_419))(function (_43) {
                    return test(__dict_Testable_420)(f(_43));
                });
            });
        };
    };
    var arbTuple = function (__dict_Arbitrary_421) {
        return function (__dict_Arbitrary_422) {
            return new Arbitrary(Prelude["<*>"](Test_QuickCheck_Gen.applyGen)(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Tuple.Tuple.create)(arbitrary(__dict_Arbitrary_421)))(arbitrary(__dict_Arbitrary_422)));
        };
    };
    var arbNumber = new Arbitrary(Test_QuickCheck_Gen.uniform);
    var arbFunction = function (__dict_CoArbitrary_424) {
        return function (__dict_Arbitrary_425) {
            return new Arbitrary(Test_QuickCheck_Gen.repeatable(function (a) {
                return coarbitrary(__dict_CoArbitrary_424)(a)(arbitrary(__dict_Arbitrary_425));
            }));
        };
    };
    var arbChar = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Prelude["<<<"](Prelude.semigroupoidArr)(Data_Char.fromCharCode)(Prelude["*"](Prelude.numNumber)(65535)))(Test_QuickCheck_Gen.uniform));
    var arbBoolean = new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(Test_QuickCheck_Gen.uniform)(function (_35) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)((_35 * 2) < 1);
    }));
    var arbEither = function (__dict_Arbitrary_426) {
        return function (__dict_Arbitrary_427) {
            return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_37) {
                return _37 ? Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Left.create)(arbitrary(__dict_Arbitrary_426)) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Either.Right.create)(arbitrary(__dict_Arbitrary_427));
            }));
        };
    };
    var arbMaybe = function (__dict_Arbitrary_423) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_38) {
            return _38 ? Prelude.pure(Test_QuickCheck_Gen.applicativeGen)(Data_Maybe.Nothing.value) : Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_Maybe.Just.create)(arbitrary(__dict_Arbitrary_423));
        }));
    };
    var arbArray = function (__dict_Arbitrary_428) {
        return new Arbitrary(Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbBoolean))(function (_42) {
            return _42 ? Prelude["return"](Test_QuickCheck_Gen.monadGen)([  ]) : Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(__dict_Arbitrary_428))(function (_41) {
    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_428)))(function (_40) {
        return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude[":"](_41)(_40));
    });
});
        }));
    };
    var arbString = new Arbitrary(Prelude["<$>"](Test_QuickCheck_Gen.functorGen)(Data_String.fromCharArray)(arbitrary(arbArray(arbChar))));
    var coarbFunction = function (__dict_Arbitrary_417) {
        return function (__dict_CoArbitrary_418) {
            return new CoArbitrary(function (f) {
                return function (gen) {
                    return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(__dict_Arbitrary_417)))(function (_39) {
                        return coarbitrary(coarbArray(__dict_CoArbitrary_418))(Data_Array.map(f)(_39))(gen);
                    });
                };
            });
        };
    };
    var arbAlphaNumString = new Arbitrary((function () {
        var lookup = function (x) {
            var index = Math.round(x * (Data_String.length("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789") - 1));
            return Data_String_Unsafe.charAt(index)("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
        };
        return Prelude[">>="](Test_QuickCheck_Gen.bindGen)(arbitrary(arbArray(arbNumber)))(function (_36) {
            return Prelude["return"](Test_QuickCheck_Gen.monadGen)(Prelude["<<<"](Prelude.semigroupoidArr)(AlphaNumString.create)(Data_String.fromCharArray)(Prelude["<$>"](Data_Array.functorArray)(lookup)(_36)));
        });
    })());
    return {
        "<?>": $less$qmark$greater, 
        AlphaNumString: AlphaNumString, 
        Arbitrary: Arbitrary, 
        CoArbitrary: CoArbitrary, 
        Failed: Failed, 
        Success: Success, 
        Testable: Testable, 
        arbAlphaNumString: arbAlphaNumString, 
        arbArray: arbArray, 
        arbBoolean: arbBoolean, 
        arbChar: arbChar, 
        arbEither: arbEither, 
        arbFunction: arbFunction, 
        arbMaybe: arbMaybe, 
        arbNumber: arbNumber, 
        arbString: arbString, 
        arbTuple: arbTuple, 
        arbitrary: arbitrary, 
        coarbAlphaNumString: coarbAlphaNumString, 
        coarbArray: coarbArray, 
        coarbBoolean: coarbBoolean, 
        coarbChar: coarbChar, 
        coarbEither: coarbEither, 
        coarbFunction: coarbFunction, 
        coarbMaybe: coarbMaybe, 
        coarbNumber: coarbNumber, 
        coarbString: coarbString, 
        coarbTuple: coarbTuple, 
        coarbitrary: coarbitrary, 
        quickCheck: quickCheck, 
        "quickCheck'": quickCheck$prime, 
        quickCheckPure: quickCheckPure, 
        showResult: showResult, 
        test: test, 
        testableBoolean: testableBoolean, 
        testableFunction: testableFunction, 
        testableResult: testableResult
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var Control_Monad_Trans = PS.Control_Monad_Trans;
    var Data_Either = PS.Data_Either;
    var Control_Monad_State_Class = PS.Control_Monad_State_Class;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Lazy = PS.Control_Lazy;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alt = PS.Control_Alt;
    var Control_Plus = PS.Control_Plus;
    var Control_Alternative = PS.Control_Alternative;
    var Control_MonadPlus = PS.Control_MonadPlus;
    function ParseError(value0) {
        this.value0 = value0;
    };
    ParseError.create = function (value0) {
        return new ParseError(value0);
    };
    var ParserT = {
        create: function (value) {
            return value;
        }
    };
    var unParserT = function (_466) {
        return _466;
    };
    var showParseError = new Prelude.Show(function (_467) {
        return "ParseError { message: " + (_467.value0.message + " }");
    });
    var runParserT = function (__dict_Monad_429) {
        return function (s) {
            return function (p) {
                return Prelude[">>="](__dict_Monad_429["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (_47) {
                    return Prelude["return"](__dict_Monad_429)(_47.result);
                });
            };
        };
    };
    var runParser = function (s) {
        return Prelude["<<<"](Prelude.semigroupoidArr)(Control_Monad_Identity.runIdentity)(runParserT(Control_Monad_Identity.monadIdentity)(s));
    };
    var monadTransParserT = new Control_Monad_Trans.MonadTrans(function (__dict_Monad_430) {
        return function (m) {
            return ParserT.create(function (s) {
                return Prelude["<$>"](((__dict_Monad_430["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(function (a) {
                    return {
                        input: s, 
                        consumed: false, 
                        result: new Data_Either.Right(a)
                    };
                })(m);
            });
        };
    });
    var monadStateParserT = function (__dict_Monad_431) {
        return new Control_Monad_State_Class.MonadState(function (f) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_431)((function () {
                    var _1852 = f(s);
                    return {
                        input: _1852.value1, 
                        consumed: false, 
                        result: new Data_Either.Right(_1852.value0)
                    };
                })());
            });
        });
    };
    var lazy1ParserT = new Control_Lazy.Lazy1(function (f) {
        return ParserT.create(function (s) {
            return unParserT(f(Prelude.unit))(s);
        });
    });
    var functorParserT = function (__dict_Functor_434) {
        return new Prelude.Functor(function (f) {
            return function (p) {
                var f$prime = function (o) {
                    return {
                        input: o.input, 
                        result: Prelude["<$>"](Data_Either.functorEither)(f)(o.result), 
                        consumed: o.consumed
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude["<$>"](__dict_Functor_434)(f$prime)(unParserT(p)(s));
                });
            };
        });
    };
    var fail = function (__dict_Monad_435) {
        return function (message) {
            return ParserT.create(function (s) {
                return Prelude["return"](__dict_Monad_435)({
                    input: s, 
                    consumed: false, 
                    result: new Data_Either.Left(new ParseError({
                        message: message
                    }))
                });
            });
        };
    };
    var errorParseError = new Control_Monad_Error.Error(new ParseError({
        message: ""
    }), function (msg) {
        return new ParseError({
            message: msg
        });
    });
    var consume = function (__dict_Monad_437) {
        return ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_437)({
                consumed: true, 
                input: s, 
                result: new Data_Either.Right(Prelude.unit)
            });
        });
    };
    var monadParserT = function (__dict_Monad_433) {
        return new Prelude.Monad(function () {
            return applicativeParserT(__dict_Monad_433);
        }, function () {
            return bindParserT(__dict_Monad_433);
        });
    };
    var bindParserT = function (__dict_Monad_438) {
        return new Prelude.Bind(function (p) {
            return function (f) {
                var updateConsumedFlag = function (c) {
                    return function (o) {
                        return {
                            input: o.input, 
                            consumed: c || o.consumed, 
                            result: o.result
                        };
                    };
                };
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_438["__superclass_Prelude.Bind_1"]())(unParserT(p)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left) {
                            return Prelude["return"](__dict_Monad_438)({
                                input: o.input, 
                                result: new Data_Either.Left(o.result.value0), 
                                consumed: o.consumed
                            });
                        };
                        if (o.result instanceof Data_Either.Right) {
                            return Prelude["<$>"](((__dict_Monad_438["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(updateConsumedFlag(o.consumed))(unParserT(f(o.result.value0))(o.input));
                        };
                        throw new Error("Failed pattern match");
                    });
                });
            };
        }, function () {
            return applyParserT(__dict_Monad_438);
        });
    };
    var applyParserT = function (__dict_Monad_439) {
        return new Prelude.Apply(Prelude.ap(monadParserT(__dict_Monad_439)), function () {
            return functorParserT(((__dict_Monad_439["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var applicativeParserT = function (__dict_Monad_440) {
        return new Prelude.Applicative(function () {
            return applyParserT(__dict_Monad_440);
        }, function (a) {
            return ParserT.create(function (s) {
                return Prelude.pure(__dict_Monad_440["__superclass_Prelude.Applicative_0"]())({
                    input: s, 
                    result: new Data_Either.Right(a), 
                    consumed: false
                });
            });
        });
    };
    var altParserT = function (__dict_Monad_442) {
        return new Control_Alt.Alt(function (p1) {
            return function (p2) {
                return ParserT.create(function (s) {
                    return Prelude[">>="](__dict_Monad_442["__superclass_Prelude.Bind_1"]())(unParserT(p1)(s))(function (o) {
                        if (o.result instanceof Data_Either.Left && !o.consumed) {
                            return unParserT(p2)(s);
                        };
                        return Prelude["return"](__dict_Monad_442)(o);
                    });
                });
            };
        }, function () {
            return functorParserT(((__dict_Monad_442["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]());
        });
    };
    var plusParserT = function (__dict_Monad_436) {
        return new Control_Plus.Plus(function () {
            return altParserT(__dict_Monad_436);
        }, fail(__dict_Monad_436)("No alternative"));
    };
    var alternativeParserT = function (__dict_Monad_441) {
        return new Control_Alternative.Alternative(function () {
            return plusParserT(__dict_Monad_441);
        }, function () {
            return applicativeParserT(__dict_Monad_441);
        });
    };
    var monadPlusParserT = function (__dict_Monad_432) {
        return new Control_MonadPlus.MonadPlus(function () {
            return alternativeParserT(__dict_Monad_432);
        }, function () {
            return monadParserT(__dict_Monad_432);
        });
    };
    return {
        ParseError: ParseError, 
        ParserT: ParserT, 
        altParserT: altParserT, 
        alternativeParserT: alternativeParserT, 
        applicativeParserT: applicativeParserT, 
        applyParserT: applyParserT, 
        bindParserT: bindParserT, 
        consume: consume, 
        errorParseError: errorParseError, 
        fail: fail, 
        functorParserT: functorParserT, 
        lazy1ParserT: lazy1ParserT, 
        monadParserT: monadParserT, 
        monadPlusParserT: monadPlusParserT, 
        monadStateParserT: monadStateParserT, 
        monadTransParserT: monadTransParserT, 
        plusParserT: plusParserT, 
        runParser: runParser, 
        runParserT: runParserT, 
        showParseError: showParseError, 
        unParserT: unParserT
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Combinators = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Control_Alt = PS.Control_Alt;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_Either = PS.Data_Either;
    var Control_Alternative = PS.Control_Alternative;
    var Data_Maybe = PS.Data_Maybe;
    var $less$qmark$greater = function (__dict_Monad_443) {
        return function (p) {
            return function (msg) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_443))(p)(Text_Parsing_Parser.fail(__dict_Monad_443)("Expected " + msg));
            };
        };
    };
    var $$try = function (__dict_Functor_444) {
        return function (p) {
            var try$prime = function (_470) {
                return function (_471) {
                    if (_471.result instanceof Data_Either.Left) {
                        return {
                            input: _470, 
                            result: _471.result, 
                            consumed: false
                        };
                    };
                    return _471;
                };
            };
            return Text_Parsing_Parser.ParserT.create(function (s) {
                return Prelude["<$>"](__dict_Functor_444)(try$prime(s))(Text_Parsing_Parser.unParserT(p)(s));
            });
        };
    };
    var skipMany1 = function (__dict_Monad_445) {
        return function (p) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_445))(p)(function (_62) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_445))(skipMany(__dict_Monad_445)(p))(function (_61) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_445))(Prelude.unit);
                });
            });
        };
    };
    var skipMany = function (__dict_Monad_446) {
        return function (p) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_446))(skipMany1(__dict_Monad_446)(p))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_446))(Prelude.unit));
        };
    };
    var sepEndBy1 = function (__dict_Monad_447) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_447))(p)(function (_52) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_447))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_447))(sep)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_447))(sepEndBy(__dict_Monad_447)(p)(sep))(function (_51) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_447))(Prelude[":"](_52)(_51));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_447))([ _52 ]));
                });
            };
        };
    };
    var sepEndBy = function (__dict_Monad_448) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_448))(sepEndBy1(__dict_Monad_448)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_448))([  ]));
            };
        };
    };
    var sepBy1 = function (__dict_Monad_449) {
        return function (p) {
            return function (sep) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_449))(p)(function (_50) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_449))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_449))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_449))(sep)(function () {
                        return p;
                    })))(function (_49) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_449))(Prelude[":"](_50)(_49));
                    });
                });
            };
        };
    };
    var sepBy = function (__dict_Monad_450) {
        return function (p) {
            return function (sep) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_450))(sepBy1(__dict_Monad_450)(p)(sep))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_450))([  ]));
            };
        };
    };
    var optional = function (__dict_Monad_451) {
        return function (p) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_451))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_451))(p)(function () {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_451))(Prelude.unit);
            }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_451))(Prelude.unit));
        };
    };
    var option = function (__dict_Monad_452) {
        return function (a) {
            return function (p) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_452))(p)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_452))(a));
            };
        };
    };
    var optionMaybe = function (__dict_Functor_453) {
        return function (__dict_Monad_454) {
            return function (p) {
                return option(__dict_Monad_454)(Data_Maybe.Nothing.value)(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_453))(Data_Maybe.Just.create)(p));
            };
        };
    };
    var manyTill = function (__dict_Monad_455) {
        return function (p) {
            return function (end) {
                var scan = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_455))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_455))(end)(function () {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_455))([  ]);
                }))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_455))(p)(function (_65) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_455))(scan)(function (_64) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_455))(Prelude[":"](_65)(_64));
                    });
                }));
                return scan;
            };
        };
    };
    var many1Till = function (__dict_Monad_456) {
        return function (p) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_456))(p)(function (_67) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_456))(manyTill(__dict_Monad_456)(p)(end))(function (_66) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_456))(Prelude[":"](_67)(_66));
                    });
                });
            };
        };
    };
    var lookAhead = function (__dict_Monad_457) {
        return function (_469) {
            return function (s) {
                return Prelude[">>="](__dict_Monad_457["__superclass_Prelude.Bind_1"]())(_469(s))(function (_63) {
                    return Prelude["return"](__dict_Monad_457)((function () {
                        var _1876 = {};
                        for (var _1877 in _63) {
                            if (_63.hasOwnProperty(_1877)) {
                                _1876[_1877] = _63[_1877];
                            };
                        };
                        _1876.input = s;
                        _1876.consumed = false;
                        return _1876;
                    })());
                });
            };
        };
    };
    var endBy1 = function (__dict_Monad_458) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.some(Text_Parsing_Parser.alternativeParserT(__dict_Monad_458))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_458))(p)(function (_53) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_458))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_458))(_53);
                    });
                }));
            };
        };
    };
    var endBy = function (__dict_Monad_459) {
        return function (p) {
            return function (sep) {
                return Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_459))(Text_Parsing_Parser.lazy1ParserT)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_459))(p)(function (_54) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_459))(sep)(function () {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_459))(_54);
                    });
                }));
            };
        };
    };
    var choice = function (__dict_Monad_460) {
        return function (_468) {
            if (_468.length === 0) {
                return Text_Parsing_Parser.fail(__dict_Monad_460)("Nothing to parse");
            };
            if (_468.length === 1) {
                return _468[0];
            };
            if (_468.length >= 1) {
                var _1883 = _468.slice(1);
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_460))(_468[0])(choice(__dict_Monad_460)(_1883));
            };
            throw new Error("Failed pattern match");
        };
    };
    var chainr1$prime = function (__dict_Monad_461) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_461))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_461))(f)(function (_60) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_461))(chainr1(__dict_Monad_461)(p)(f))(function (_59) {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_461))(_60(a)(_59));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_461))(a));
                };
            };
        };
    };
    var chainr1 = function (__dict_Monad_462) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_462))(p)(function (_58) {
                    return chainr1$prime(__dict_Monad_462)(p)(f)(_58);
                });
            };
        };
    };
    var chainr = function (__dict_Monad_463) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_463))(chainr1(__dict_Monad_463)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_463))(a));
                };
            };
        };
    };
    var chainl1$prime = function (__dict_Monad_464) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_464))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_464))(f)(function (_57) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_464))(p)(function (_56) {
                            return chainl1$prime(__dict_Monad_464)(p)(f)(_57(a)(_56));
                        });
                    }))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_464))(a));
                };
            };
        };
    };
    var chainl1 = function (__dict_Monad_465) {
        return function (p) {
            return function (f) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_465))(p)(function (_55) {
                    return chainl1$prime(__dict_Monad_465)(p)(f)(_55);
                });
            };
        };
    };
    var chainl = function (__dict_Monad_466) {
        return function (p) {
            return function (f) {
                return function (a) {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_466))(chainl1(__dict_Monad_466)(p)(f))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_466))(a));
                };
            };
        };
    };
    var between = function (__dict_Monad_467) {
        return function (open) {
            return function (close) {
                return function (p) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_467))(open)(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_467))(p)(function (_48) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_467))(close)(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_467))(_48);
                            });
                        });
                    });
                };
            };
        };
    };
    return {
        "<?>": $less$qmark$greater, 
        between: between, 
        chainl: chainl, 
        chainl1: chainl1, 
        "chainl1'": chainl1$prime, 
        chainr: chainr, 
        chainr1: chainr1, 
        "chainr1'": chainr1$prime, 
        choice: choice, 
        endBy: endBy, 
        endBy1: endBy1, 
        lookAhead: lookAhead, 
        many1Till: many1Till, 
        manyTill: manyTill, 
        option: option, 
        optionMaybe: optionMaybe, 
        optional: optional, 
        sepBy: sepBy, 
        sepBy1: sepBy1, 
        sepEndBy: sepEndBy, 
        sepEndBy1: sepEndBy1, 
        skipMany: skipMany, 
        skipMany1: skipMany1, 
        "try": $$try
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Expr = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Control_Alt = PS.Control_Alt;
    var Data_Foldable = PS.Data_Foldable;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    function AssocNone() {

    };
    AssocNone.value = new AssocNone();
    function AssocLeft() {

    };
    AssocLeft.value = new AssocLeft();
    function AssocRight() {

    };
    AssocRight.value = new AssocRight();
    function Infix(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Infix.create = function (value0) {
        return function (value1) {
            return new Infix(value0, value1);
        };
    };
    function Prefix(value0) {
        this.value0 = value0;
    };
    Prefix.create = function (value0) {
        return new Prefix(value0);
    };
    function Postfix(value0) {
        this.value0 = value0;
    };
    Postfix.create = function (value0) {
        return new Postfix(value0);
    };
    var termP = function (__dict_Monad_468) {
        return function (prefixP) {
            return function (term) {
                return function (postfixP) {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_468))(prefixP)(function (_77) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_468))(term)(function (_76) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_468))(postfixP)(function (_75) {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_468))(_75(_77(_76)));
                            });
                        });
                    });
                };
            };
        };
    };
    var splitOp = function (_472) {
        return function (_473) {
            if (_472 instanceof Infix && _472.value1 instanceof AssocNone) {
                var _1896 = {};
                for (var _1897 in _473) {
                    if (_473.hasOwnProperty(_1897)) {
                        _1896[_1897] = _473[_1897];
                    };
                };
                _1896.nassoc = Prelude[":"](_472.value0)(_473.nassoc);
                return _1896;
            };
            if (_472 instanceof Infix && _472.value1 instanceof AssocLeft) {
                var _1900 = {};
                for (var _1901 in _473) {
                    if (_473.hasOwnProperty(_1901)) {
                        _1900[_1901] = _473[_1901];
                    };
                };
                _1900.lassoc = Prelude[":"](_472.value0)(_473.lassoc);
                return _1900;
            };
            if (_472 instanceof Infix && _472.value1 instanceof AssocRight) {
                var _1904 = {};
                for (var _1905 in _473) {
                    if (_473.hasOwnProperty(_1905)) {
                        _1904[_1905] = _473[_1905];
                    };
                };
                _1904.rassoc = Prelude[":"](_472.value0)(_473.rassoc);
                return _1904;
            };
            if (_472 instanceof Prefix) {
                var _1908 = {};
                for (var _1909 in _473) {
                    if (_473.hasOwnProperty(_1909)) {
                        _1908[_1909] = _473[_1909];
                    };
                };
                _1908.prefix = Prelude[":"](_472.value0)(_473.prefix);
                return _1908;
            };
            if (_472 instanceof Postfix) {
                var _1911 = {};
                for (var _1912 in _473) {
                    if (_473.hasOwnProperty(_1912)) {
                        _1911[_1912] = _473[_1912];
                    };
                };
                _1911.postfix = Prelude[":"](_472.value0)(_473.postfix);
                return _1911;
            };
            throw new Error("Failed pattern match");
        };
    };
    var rassocP1 = function (__dict_Monad_469) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_469))(rassocP(__dict_Monad_469)(x)(rassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_469))(x));
                        };
                    };
                };
            };
        };
    };
    var rassocP = function (__dict_Monad_470) {
        return function (x) {
            return function (rassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_470))(rassocOp)(function (_70) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_470))(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_470))(termP(__dict_Monad_470)(prefixP)(term)(postfixP))(function (_68) {
                                    return rassocP1(__dict_Monad_470)(_68)(rassocOp)(prefixP)(term)(postfixP);
                                }))(function (_69) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_470))(_70(x)(_69));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var nassocP = function (__dict_Monad_471) {
        return function (x) {
            return function (nassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_471))(nassocOp)(function (_74) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_471))(termP(__dict_Monad_471)(prefixP)(term)(postfixP))(function (_73) {
                                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_471))(_74(x)(_73));
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var lassocP1 = function (__dict_Monad_472) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_472))(lassocP(__dict_Monad_472)(x)(lassocOp)(prefixP)(term)(postfixP))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_472))(x));
                        };
                    };
                };
            };
        };
    };
    var lassocP = function (__dict_Monad_473) {
        return function (x) {
            return function (lassocOp) {
                return function (prefixP) {
                    return function (term) {
                        return function (postfixP) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_473))(lassocOp)(function (_72) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_473))(termP(__dict_Monad_473)(prefixP)(term)(postfixP))(function (_71) {
                                    return lassocP1(__dict_Monad_473)(_72(x)(_71))(lassocOp)(prefixP)(term)(postfixP);
                                });
                            });
                        };
                    };
                };
            };
        };
    };
    var buildExprParser = function (__dict_Monad_474) {
        return function (operators) {
            return function (simpleExpr) {
                var makeParser = function (term) {
                    return function (ops) {
                        var accum = Data_Foldable.foldr(Data_Foldable.foldableArray)(splitOp)({
                            rassoc: [  ], 
                            lassoc: [  ], 
                            nassoc: [  ], 
                            prefix: [  ], 
                            postfix: [  ]
                        })(ops);
                        var rassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_474)(accum.rassoc);
                        var lassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_474)(accum.lassoc);
                        var nassocOp = Text_Parsing_Parser_Combinators.choice(__dict_Monad_474)(accum.nassoc);
                        var prefixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_474)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_474)(accum.prefix))("");
                        var postfixOp = Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_474)(Text_Parsing_Parser_Combinators.choice(__dict_Monad_474)(accum.postfix))("");
                        var postfixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_474))(postfixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_474))(Prelude.id(Prelude.categoryArr)));
                        var prefixP = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_474))(prefixOp)(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_474))(Prelude.id(Prelude.categoryArr)));
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_474))(termP(__dict_Monad_474)(prefixP)(term)(postfixP))(function (_78) {
                            return Text_Parsing_Parser_Combinators["<?>"](__dict_Monad_474)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_474))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_474))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_474))(rassocP(__dict_Monad_474)(_78)(rassocOp)(prefixP)(term)(postfixP))(lassocP(__dict_Monad_474)(_78)(lassocOp)(prefixP)(term)(postfixP)))(nassocP(__dict_Monad_474)(_78)(nassocOp)(prefixP)(term)(postfixP)))(Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_474))(_78)))("operator");
                        });
                    };
                };
                return Data_Foldable.foldl(Data_Foldable.foldableArray)(makeParser)(simpleExpr)(operators);
            };
        };
    };
    return {
        AssocLeft: AssocLeft, 
        AssocNone: AssocNone, 
        AssocRight: AssocRight, 
        Infix: Infix, 
        Postfix: Postfix, 
        Prefix: Prefix, 
        buildExprParser: buildExprParser, 
        lassocP: lassocP, 
        lassocP1: lassocP1, 
        nassocP: nassocP, 
        rassocP: rassocP, 
        rassocP1: rassocP1, 
        splitOp: splitOp, 
        termP: termP
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_String = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Control_Alternative = PS.Control_Alternative;
    var Control_Alt = PS.Control_Alt;
    var Data_Foldable = PS.Data_Foldable;
    var Data_Monoid = PS.Data_Monoid;
    var Data_Maybe = PS.Data_Maybe;
    var Data_Char = PS.Data_Char;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var string = function (__dict_Monad_475) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_475)((function () {
                    var _1922 = Data_String.indexOf(s)(s$prime);
                    if (_1922 === 0) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + Prelude.show(Prelude.showString)(s)))
                    };
                })());
            });
        };
    };
    var whiteSpace = function (__dict_Monad_476) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_476))(Control_Alternative.many(Text_Parsing_Parser.alternativeParserT(__dict_Monad_476))(Text_Parsing_Parser.lazy1ParserT)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_476))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_476))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_476))(string(__dict_Monad_476)("\n"))(string(__dict_Monad_476)("\r")))(string(__dict_Monad_476)(" ")))(string(__dict_Monad_476)("\t"))))(function (_80) {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_476))(Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Prelude.id(Prelude.categoryArr))(_80));
        });
    };
    var skipSpaces = function (__dict_Monad_477) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_477))(whiteSpace(__dict_Monad_477))(function () {
            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_477))(Prelude.unit);
        });
    };
    var eof = function (__dict_Monad_478) {
        return Text_Parsing_Parser.ParserT.create(function (s) {
            return Prelude["return"](__dict_Monad_478)((function () {
                if (s === "") {
                    return {
                        consumed: false, 
                        input: s, 
                        result: new Data_Either.Right(Prelude.unit)
                    };
                };
                return {
                    consumed: false, 
                    input: s, 
                    result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected EOF"))
                };
            })());
        });
    };
    var $$char = function (__dict_Monad_479) {
        return Text_Parsing_Parser.ParserT.create(function (s$prime) {
            return Prelude["return"](__dict_Monad_479)((function () {
                var _1925 = Data_String.charAt(0)(s$prime);
                if (_1925 instanceof Data_Maybe.Nothing) {
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Unexpected EOF"))
                    };
                };
                if (_1925 instanceof Data_Maybe.Just) {
                    return {
                        consumed: true, 
                        input: Data_String.drop(1)(s$prime), 
                        result: new Data_Either.Right(Data_Char.charString(_1925.value0))
                    };
                };
                throw new Error("Failed pattern match");
            })());
        });
    };
    var satisfy = function (__dict_Monad_480) {
        return function (f) {
            return Text_Parsing_Parser_Combinators["try"](((__dict_Monad_480["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_480))($$char(__dict_Monad_480))(function (_79) {
                return f(_79) ? Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_480))(_79) : Text_Parsing_Parser.fail(__dict_Monad_480)("Character did not satisfy predicate");
            }));
        };
    };
    var noneOf = function (__dict_Monad_481) {
        return function (ss) {
            return satisfy(__dict_Monad_481)(Prelude.flip(Data_Foldable.notElem(Prelude.eqString)(Data_Foldable.foldableArray))(ss));
        };
    };
    var oneOf = function (__dict_Monad_482) {
        return function (ss) {
            return satisfy(__dict_Monad_482)(Prelude.flip(Data_Foldable.elem(Prelude.eqString)(Data_Foldable.foldableArray))(ss));
        };
    };
    return {
        "char": $$char, 
        eof: eof, 
        noneOf: noneOf, 
        oneOf: oneOf, 
        satisfy: satisfy, 
        skipSpaces: skipSpaces, 
        string: string, 
        whiteSpace: whiteSpace
    };
})();
var PS = PS || {};
PS.Text_Hatter_Parser = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Parsing_Parser = PS.Text_Parsing_Parser;
    var Data_String = PS.Data_String;
    var Data_Either = PS.Data_Either;
    var Control_Monad_Error = PS.Control_Monad_Error;
    var Text_Parsing_Parser_Combinators = PS.Text_Parsing_Parser_Combinators;
    var Text_Parsing_Parser_String = PS.Text_Parsing_Parser_String;
    var Control_Alt = PS.Control_Alt;
    var Data_Array = PS.Data_Array;
    var Data_Tuple = PS.Data_Tuple;
    var Control_Monad_Identity = PS.Control_Monad_Identity;
    var HExp = {
        create: function (value) {
            return value;
        }
    };
    function StringLiteral(value0) {
        this.value0 = value0;
    };
    StringLiteral.create = function (value0) {
        return new StringLiteral(value0);
    };
    function StringExp(value0) {
        this.value0 = value0;
    };
    StringExp.create = function (value0) {
        return new StringExp(value0);
    };
    function Attr(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Attr.create = function (value0) {
        return function (value1) {
            return new Attr(value0, value1);
        };
    };
    function Toggle(value0) {
        this.value0 = value0;
    };
    Toggle.create = function (value0) {
        return new Toggle(value0);
    };
    function AttributesExp(value0) {
        this.value0 = value0;
    };
    AttributesExp.create = function (value0) {
        return new AttributesExp(value0);
    };
    function ElementNode(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    ElementNode.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new ElementNode(value0, value1, value2);
            };
        };
    };
    function TextNode(value0) {
        this.value0 = value0;
    };
    TextNode.create = function (value0) {
        return new TextNode(value0);
    };
    function RawTextNode(value0) {
        this.value0 = value0;
    };
    RawTextNode.create = function (value0) {
        return new RawTextNode(value0);
    };
    function NodeExp(value0) {
        this.value0 = value0;
    };
    NodeExp.create = function (value0) {
        return new NodeExp(value0);
    };
    var Document = {
        create: function (value) {
            return value;
        }
    };
    function consoleLog(x) { console.log(x); return x };
    var voidElementTags = [ "area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "menuitem", "meta", "param", "source", "track", "wbr" ];
    var unify = function (__dict_Functor_483) {
        return function (__dict_Monad_484) {
            return function (parser) {
                return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_483))(function (_) {
                    return Prelude.unit;
                })(parser);
            };
        };
    };
    var unescapeHtml = function (html) {
        return Data_String.replace("&amp;")("&")(Data_String.replace("&lt;")("<")(Data_String.replace("&gt;")(">")(html)));
    };
    var stringi = function (__dict_Monad_485) {
        return function (s) {
            return Text_Parsing_Parser.ParserT.create(function (s$prime) {
                return Prelude["return"](__dict_Monad_485)((function () {
                    var _1928 = Data_String.toLower(Data_String.take(Data_String.length(s))(s$prime));
                    if (_1928 === Data_String.toLower(s)) {
                        return {
                            consumed: true, 
                            input: Data_String.drop(Data_String.length(s))(s$prime), 
                            result: new Data_Either.Right(s)
                        };
                    };
                    return {
                        consumed: false, 
                        input: s$prime, 
                        result: new Data_Either.Left(Control_Monad_Error.strMsg(Text_Parsing_Parser.errorParseError)("Expected " + Prelude.show(Prelude.showString)(s)))
                    };
                })());
            });
        };
    };
    var stringTill = function (__dict_Functor_486) {
        return function (__dict_Monad_487) {
            return function (end) {
                return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_486))(Data_String.joinWith(""))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_487)(Text_Parsing_Parser_String["char"](__dict_Monad_487))(end));
            };
        };
    };
    var someWhiteSpaces = function (__dict_Functor_488) {
        return function (__dict_Monad_489) {
            var space = Text_Parsing_Parser_String.oneOf(__dict_Monad_489)([ "\n", "\r", " ", "\t" ]);
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_489))(space)(function (_100) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_489))(Text_Parsing_Parser_String.whiteSpace(__dict_Monad_489))(function (_99) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_489))(_100 + _99);
                });
            });
        };
    };
    var rawElementTags = [ "script", "style" ];
    var pTextNode = function (__dict_Functor_490) {
        return function (__dict_Monad_491) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_491))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_491))(function () {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_491))(stringTill(__dict_Functor_490)(__dict_Monad_491)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_491)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_491))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_491))(function () {
                    return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_491))(unify(__dict_Functor_490)(__dict_Monad_491)(Text_Parsing_Parser_String.string(__dict_Monad_491)("<")))(Text_Parsing_Parser_String.eof(__dict_Monad_491));
                }))))(function (_84) {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_491))(TextNode.create(unescapeHtml(_84)));
                });
            });
        };
    };
    var pTagNameOneOf = function (__dict_Monad_492) {
        return function (tags) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_492))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_492))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_492))(Text_Parsing_Parser_Combinators.choice(__dict_Monad_492)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_492))(tags)))(function (_94) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_492))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_492)(end))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_492))(_94);
                        });
                    });
                });
            };
        };
    };
    var pTagName = function (__dict_Monad_493) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_493))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_493))(function () {
                return stringTill(((__dict_Monad_493["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_493)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_493)(end));
            });
        };
    };
    var pHExp = function (__dict_Monad_494) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_494))(Text_Parsing_Parser_String.string(__dict_Monad_494)("<%"))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_494))(stringTill(((__dict_Monad_494["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_494)(Text_Parsing_Parser_String.string(__dict_Monad_494)("%>")))(function (_98) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_494))(_98);
            });
        });
    };
    var pHString = function (__dict_Functor_495) {
        return function (__dict_Monad_496) {
            return function (end) {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_496))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_495))(StringExp.create)(pHExp(__dict_Monad_496)))(Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_495))(Prelude["<<<"](Prelude.semigroupoidArr)(StringLiteral.create)(unescapeHtml))(stringTill(__dict_Functor_495)(__dict_Monad_496)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_496)(end))));
            };
        };
    };
    var pHStrings = function (__dict_Monad_497) {
        return function (end) {
            return Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_497)(pHString(((__dict_Monad_497["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_497)(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_497)(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_497))(unify(((__dict_Monad_497["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_497)(Text_Parsing_Parser_String.string(__dict_Monad_497)("<%")))(unify(((__dict_Monad_497["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_497)(end)))))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_497)(end));
        };
    };
    var pRawTextNode = function (__dict_Functor_498) {
        return function (__dict_Monad_499) {
            return function (end) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_499))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_499))(function () {
                    return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_498))(RawTextNode.create)(pHStrings(__dict_Monad_499)(end));
                });
            };
        };
    };
    var pSingleQuotedHStrings = function (__dict_Monad_500) {
        var sq = Text_Parsing_Parser_String.string(__dict_Monad_500)("'");
        return Text_Parsing_Parser_Combinators.between(__dict_Monad_500)(sq)(sq)(pHStrings(__dict_Monad_500)(sq));
    };
    var pToggle = function (__dict_Monad_501) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_501))(pHStrings(__dict_Monad_501)(end))(function (_97) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_501))(new Toggle(_97));
            });
        };
    };
    var pNodeExp = function (__dict_Functor_502) {
        return function (__dict_Monad_503) {
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_502))(NodeExp.create)(pHExp(__dict_Monad_503));
        };
    };
    var pEndTag = function (__dict_Monad_504) {
        return function (tag) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_504))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_504))(function () {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_504))(Text_Parsing_Parser_String.string(__dict_Monad_504)(Data_String.joinWith("")([ "</", tag, ">" ])))(function () {
                    return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_504))(Prelude.unit);
                });
            });
        };
    };
    var pDoubleQuotedHStrings = function (__dict_Monad_505) {
        var dq = Text_Parsing_Parser_String.string(__dict_Monad_505)("\"");
        return Text_Parsing_Parser_Combinators.between(__dict_Monad_505)(dq)(dq)(pHStrings(__dict_Monad_505)(dq));
    };
    var pAttributesExp = function (__dict_Functor_506) {
        return function (__dict_Monad_507) {
            return Prelude["<$>"](Text_Parsing_Parser.functorParserT(__dict_Functor_506))(AttributesExp.create)(pHExp(__dict_Monad_507));
        };
    };
    var pAttributesEnd = function (__dict_Monad_508) {
        return Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_508)(Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_508))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_508))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_508))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_508))(Text_Parsing_Parser_String.string(__dict_Monad_508)(">"))(Text_Parsing_Parser_String.string(__dict_Monad_508)("/>")))(function () {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_508))(Prelude.unit);
            });
        }));
    };
    var pAttributeValue = function (__dict_Monad_509) {
        return function (end) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_509))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_509))(pDoubleQuotedHStrings(__dict_Monad_509))(pSingleQuotedHStrings(__dict_Monad_509)))(pHStrings(__dict_Monad_509)(end));
        };
    };
    var pAttributeName = function (__dict_Monad_510) {
        return function (end) {
            return pHStrings(__dict_Monad_510)(end);
        };
    };
    var pAttr = function (__dict_Monad_511) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_511))(pHStrings(__dict_Monad_511)(Text_Parsing_Parser_String.string(__dict_Monad_511)("=")))(function (_96) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_511))(Text_Parsing_Parser_String.string(__dict_Monad_511)("="))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_511))(pAttributeValue(__dict_Monad_511)(end))(function (_95) {
                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_511))(new Attr(_96, _95));
                    });
                });
            });
        };
    };
    var pAttribute = function (__dict_Monad_512) {
        return function (attrsEnd) {
            var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_512))(unify(((__dict_Monad_512["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_512)(Text_Parsing_Parser_String.string(__dict_Monad_512)(" ")))(unify(((__dict_Monad_512["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_512)(attrsEnd));
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_512))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_512))(function () {
                return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_512))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_512))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_512["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pAttributesExp(((__dict_Monad_512["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_512)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_512["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pAttr(__dict_Monad_512)(end))))(pToggle(__dict_Monad_512)(end));
            });
        };
    };
    var pAttributes = function (__dict_Monad_513) {
        return function (end) {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_513))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_513))(function () {
                return Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_513)(pAttribute(__dict_Monad_513)(end))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_513)(end));
            });
        };
    };
    var pStartTag = function (__dict_Monad_514) {
        return function (pTagName_1) {
            return function (allowSlash) {
                var end = allowSlash ? Text_Parsing_Parser_Combinators.choice(__dict_Monad_514)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_514))([ ">", "/>" ])) : Text_Parsing_Parser_String.string(__dict_Monad_514)(">");
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_514))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(Text_Parsing_Parser_String.string(__dict_Monad_514)("<"))(function () {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(pTagName_1)(function (_93) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(pAttributes(__dict_Monad_514)(end))(function (_92) {
                                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_514))(function () {
                                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_514))(end)(function () {
                                        return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_514))(new Data_Tuple.Tuple(_93, _92));
                                    });
                                });
                            });
                        });
                    });
                });
            };
        };
    };
    var pRawElement = function (__dict_Monad_515) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_515))(someWhiteSpaces(((__dict_Monad_515["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_515))(Text_Parsing_Parser_String.string(__dict_Monad_515)(">"));
        var pStartTagRaw = pStartTag(__dict_Monad_515)(pTagNameOneOf(__dict_Monad_515)(rawElementTags)(end))(false);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_515))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_515))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_515))(pStartTagRaw)(function (_87) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_515))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_515))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_515))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_515)(pRawTextNode(((__dict_Monad_515["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_515)(pEndTag(__dict_Monad_515)(_87.value0)))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_515)(pEndTag(__dict_Monad_515)(_87.value0))))(function (_86) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_515))(pEndTag(__dict_Monad_515)(_87.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_515))(new ElementNode(_87.value0, _87.value1, _86));
                        });
                    });
                });
            });
        });
    };
    var pVoidElement = function (__dict_Monad_516) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_516))(someWhiteSpaces(((__dict_Monad_516["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_516))(Text_Parsing_Parser_Combinators.choice(__dict_Monad_516)(Data_Array.map(Text_Parsing_Parser_String.string(__dict_Monad_516))([ ">", "/>" ])));
        var pStartTagVoid = pStartTag(__dict_Monad_516)(pTagNameOneOf(__dict_Monad_516)(voidElementTags)(end))(true);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_516))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_516))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_516))(pStartTagVoid)(function (_85) {
                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_516))(new ElementNode(_85.value0, _85.value1, [  ]));
            });
        });
    };
    var line = function (__dict_Monad_517) {
        return stringTill(((__dict_Monad_517["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_517)(Text_Parsing_Parser_String.string(__dict_Monad_517)("\n"));
    };
    var escapableRawElementTags = [ "textarea", "title" ];
    var pEscapableRawElement = function (__dict_Monad_518) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_518))(someWhiteSpaces(((__dict_Monad_518["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_518))(Text_Parsing_Parser_String.string(__dict_Monad_518)(">"));
        var pStartTagEscapableRaw = pStartTag(__dict_Monad_518)(pTagNameOneOf(__dict_Monad_518)(escapableRawElementTags)(end))(false);
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_518))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_518))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_518))(pStartTagEscapableRaw)(function (_89) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_518))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_518))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_518))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_518)(pRawTextNode(((__dict_Monad_518["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_518)(pEndTag(__dict_Monad_518)(_89.value0)))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_518)(pEndTag(__dict_Monad_518)(_89.value0))))(function (_88) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_518))(pEndTag(__dict_Monad_518)(_89.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_518))(new ElementNode(_89.value0, _89.value1, _88));
                        });
                    });
                });
            });
        });
    };
    var pNormalElement = function (__dict_Monad_519) {
        var end = Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_519))(someWhiteSpaces(((__dict_Monad_519["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_519))(Text_Parsing_Parser_String.string(__dict_Monad_519)(">"));
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_519))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_519))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_519))(pStartTag(__dict_Monad_519)(pTagName(__dict_Monad_519)(end))(false))(function (_91) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_519))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_519))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_519))(Text_Parsing_Parser_Combinators.manyTill(__dict_Monad_519)(pNode(__dict_Monad_519))(Text_Parsing_Parser_Combinators.lookAhead(__dict_Monad_519)(pEndTag(__dict_Monad_519)(_91.value0))))(function (_90) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_519))(pEndTag(__dict_Monad_519)(_91.value0))(function () {
                            return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_519))(new ElementNode(_91.value0, _91.value1, _90));
                        });
                    });
                });
            });
        });
    };
    var pNode = function (__dict_Monad_520) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_520))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_520))(function (_) {
            return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_520))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_520))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_520["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pNodeExp(((__dict_Monad_520["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_520)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_520["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pElementNode(__dict_Monad_520))))(pTextNode(((__dict_Monad_520["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(__dict_Monad_520));
        });
    };
    var pElementNode = function (__dict_Monad_521) {
        return Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_521))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_521))(Control_Alt["<|>"](Text_Parsing_Parser.altParserT(__dict_Monad_521))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_521["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pVoidElement(__dict_Monad_521)))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_521["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pRawElement(__dict_Monad_521))))(Text_Parsing_Parser_Combinators["try"](((__dict_Monad_521["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(pEscapableRawElement(__dict_Monad_521))))(pNormalElement(__dict_Monad_521));
    };
    var pDocument = function (__dict_Monad_522) {
        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_522))(function () {
            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(line(__dict_Monad_522))(function (_83) {
                return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_522))(function () {
                    return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(line(__dict_Monad_522))(function (_82) {
                        return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(pNode(__dict_Monad_522))(function (_81) {
                            return Prelude[">>="](Text_Parsing_Parser.bindParserT(__dict_Monad_522))(Text_Parsing_Parser_String.skipSpaces(__dict_Monad_522))(function () {
                                return Prelude["return"](Text_Parsing_Parser.monadParserT(__dict_Monad_522))({
                                    typeAnnotation: _83, 
                                    args: _82, 
                                    body: _81
                                });
                            });
                        });
                    });
                });
            });
        });
    };
    var parse = function (input) {
        return Text_Parsing_Parser.runParser(input)(pDocument(Control_Monad_Identity.monadIdentity));
    };
    var eqHExp = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqHExp)(a)(a$prime);
        };
    }, function (_480) {
        return function (_481) {
            return _480 === _481;
        };
    });
    var eqHString = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqHString)(a)(a$prime);
        };
    }, function (_482) {
        return function (_483) {
            if (_482 instanceof StringLiteral && _483 instanceof StringLiteral) {
                return _482.value0 === _483.value0;
            };
            if (_482 instanceof StringExp && _483 instanceof StringExp) {
                return Prelude["=="](eqHExp)(_482.value0)(_483.value0);
            };
            return false;
        };
    });
    var eqAttribute = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqAttribute)(a)(a$prime);
        };
    }, function (_478) {
        return function (_479) {
            if (_478 instanceof Attr && _479 instanceof Attr) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_478.value0)(_479.value0) && Prelude["=="](Prelude.eqArray(eqHString))(_478.value1)(_479.value1);
            };
            if (_478 instanceof Toggle && _479 instanceof Toggle) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_478.value0)(_479.value0);
            };
            if (_478 instanceof AttributesExp && _479 instanceof AttributesExp) {
                return Prelude["=="](eqHExp)(_478.value0)(_479.value0);
            };
            return false;
        };
    });
    var eqNode = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqNode)(a)(a$prime);
        };
    }, function (_476) {
        return function (_477) {
            if (_476 instanceof ElementNode && _477 instanceof ElementNode) {
                return _476.value0 === _477.value0 && (Prelude["=="](Prelude.eqArray(eqAttribute))(_476.value1)(_477.value1) && Prelude["=="](Prelude.eqArray(eqNode))(_476.value2)(_477.value2));
            };
            if (_476 instanceof TextNode && _477 instanceof TextNode) {
                return _476.value0 === _477.value0;
            };
            if (_476 instanceof RawTextNode && _477 instanceof RawTextNode) {
                return Prelude["=="](Prelude.eqArray(eqHString))(_476.value0)(_477.value0);
            };
            if (_476 instanceof NodeExp && _477 instanceof NodeExp) {
                return Prelude["=="](eqHExp)(_476.value0)(_477.value0);
            };
            return false;
        };
    });
    var eqDocument = new Prelude.Eq(function (a) {
        return function (a$prime) {
            return !Prelude["=="](eqDocument)(a)(a$prime);
        };
    }, function (_474) {
        return function (_475) {
            return _474.typeAnnotation === _475.typeAnnotation && (_474.args === _475.args && Prelude["=="](eqNode)(_474.body)(_475.body));
        };
    });
    return {
        Attr: Attr, 
        AttributesExp: AttributesExp, 
        Document: Document, 
        ElementNode: ElementNode, 
        HExp: HExp, 
        NodeExp: NodeExp, 
        RawTextNode: RawTextNode, 
        StringExp: StringExp, 
        StringLiteral: StringLiteral, 
        TextNode: TextNode, 
        Toggle: Toggle, 
        eqAttribute: eqAttribute, 
        eqDocument: eqDocument, 
        eqHExp: eqHExp, 
        eqHString: eqHString, 
        eqNode: eqNode, 
        parse: parse
    };
})();
var PS = PS || {};
PS.Text_Hatter_Translator = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Hatter_Parser = PS.Text_Hatter_Parser;
    var Text_Hatter_PureScript = PS.Text_Hatter_PureScript;
    var Data_Array = PS.Data_Array;
    var translateHString = function (_486) {
        if (_486 instanceof Text_Hatter_Parser.StringLiteral) {
            return new Text_Hatter_PureScript.StringLitE(_486.value0);
        };
        if (_486 instanceof Text_Hatter_Parser.StringExp) {
            return new Text_Hatter_PureScript.RawE(_486.value0);
        };
        throw new Error("Failed pattern match");
    };
    var translateHStrings = function (xs) {
        return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("Data.String.joinWith"), new Text_Hatter_PureScript.StringLitE("")), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateHString)(xs)));
    };
    var translateAttribute = function (_485) {
        if (_485 instanceof Text_Hatter_Parser.Attr) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.Typed.attr"), translateHStrings(_485.value0)), translateHStrings(_485.value1));
        };
        if (_485 instanceof Text_Hatter_Parser.Toggle) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.Typed.toggle"), translateHStrings(_485.value0));
        };
        if (_485 instanceof Text_Hatter_Parser.AttributesExp) {
            return new Text_Hatter_PureScript.RawE(_485.value0);
        };
        throw new Error("Failed pattern match");
    };
    var translateNode = function (_484) {
        if (_484 instanceof Text_Hatter_Parser.ElementNode) {
            return new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.AppE(new Text_Hatter_PureScript.VarE("VirtualDOM.Typed.node"), new Text_Hatter_PureScript.StringLitE(_484.value0)), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateAttribute)(_484.value1))), Text_Hatter_PureScript.ArrayLitE.create(Data_Array.map(translateNode)(_484.value2)));
        };
        if (_484 instanceof Text_Hatter_Parser.TextNode) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.vtext"))(new Text_Hatter_PureScript.StringLitE(_484.value0));
        };
        if (_484 instanceof Text_Hatter_Parser.RawTextNode) {
            return Text_Hatter_PureScript.AppE.create(new Text_Hatter_PureScript.VarE("VirtualDOM.VTree.vtext"))(translateHStrings(_484.value0));
        };
        if (_484 instanceof Text_Hatter_Parser.NodeExp) {
            return new Text_Hatter_PureScript.RawE(_484.value0);
        };
        throw new Error("Failed pattern match");
    };
    var requireModules = [ "VirtualDOM.VTree ()", "VirtualDOM.Typed ()", "Data.String ()" ];
    return {
        requireModules: requireModules, 
        translateNode: translateNode
    };
})();
var PS = PS || {};
PS.Text_Hatter = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Data_Array = PS.Data_Array;
    var Text_Hatter_Translator = PS.Text_Hatter_Translator;
    var Data_Either = PS.Data_Either;
    var Text_Hatter_Parser = PS.Text_Hatter_Parser;
    var Data_String = PS.Data_String;
    var Text_Hatter_PureScript = PS.Text_Hatter_PureScript;
    var hatter = function (moduleName) {
        return function (imports) {
            return function (input) {
                var is = Prelude["++"](Data_Array.semigroupArray)(imports)(Text_Hatter_Translator.requireModules);
                return Prelude[">>="](Data_Either.bindEither)(Text_Hatter_Parser.parse(input))(function (_101) {
                    return Prelude["return"](Data_Either.monadEither)(Data_String.joinWith("")(Prelude["++"](Data_Array.semigroupArray)([ "module ", moduleName, " where \n" ])(Prelude["++"](Data_Array.semigroupArray)(Data_Array.map(function (i) {
                        return "import " + (i + "\n");
                    })(is))([ _101.typeAnnotation, "\n", _101.args, Text_Hatter_PureScript.toCode(Text_Hatter_Translator.translateNode(_101.body)) ]))));
                });
            };
        };
    };
    return {
        hatter: hatter
    };
})();
var PS = PS || {};
PS.Text_Hatter_Index = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    var Text_Hatter = PS.Text_Hatter;
    function exportModule(x) { return function() { module.exports = x; };  };
    var main = exportModule(Text_Hatter.hatter);
    return {
        exportModule: exportModule, 
        main: main
    };
})();
var PS = PS || {};
PS.Text_Parsing_Parser_Token = (function () {
    "use strict";
    var Prelude = PS.Prelude;
    return {};
})();
PS.Text_Hatter_Index.main();

